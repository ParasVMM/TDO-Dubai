{"version":3,"file":"static/js/3028.edc00924.chunk.js","mappings":"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","sources":["views/dashboard/agents/FilterComponent.js","views/dashboard/distributors/inactive/TableDistributors.js","views/dashboard/distributors/inactive/InactiveDistributors.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.small ? 5 : undefined\n}))`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <Input\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Filter table data...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton className=\"bg-dark text-white\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n","import React, {useMemo} from \"react\";\nimport DataTable from 'react-data-table-component';\nimport FilterComponent from \"../../agents/FilterComponent\";\nimport {customStyles} from \"../../../../utils/Common\";\n\nconst TableDistributors = (props) => {\n  const columns = [\n    {\n      button: true,\n      cell: row => <>\n        <button onClick={() => props.click(row.id)} className=\"btn btn-link\">\n          <i className=\"fa fa-eye\"></i>\n        </button>\n      </>,\n      width: '50px'\n    },\n    {\n      name: \"Name\",\n      selector: row => row.authorized_person_first_name + \" \" + row.authorized_person_last_name,\n      sortable: true,\n      width: '150px'\n    },\n    // {\n    //   name: \"Company Id\",\n    //   selector: row => row.CompanyId,\n    //   sortable: true,\n    //   width: '140px'\n    // },\n    {\n      name: \"Agency Name\",\n      selector: row => row.agency_name,\n      sortable: true,\n      width: '180px'\n    },\n    {\n      name: \"Nature of Business\",\n      selector: row => row.nature_of_business,\n      sortable: true,\n      width: '180px'\n    },\n    {\n      name: \"Status\",\n      selector: row => <span className=\"text-danger\">Inactive</span>,\n      sortable: true,\n      width: '90px'\n    },\n    // {\n    //   name: \"Group Type\",\n    //   selector: row => row.GroupType,\n    //   sortable: true,\n    //   width: '130px'\n    // },\n    {\n      name: \"Mobile\",\n      selector: row => row.mobile,\n      sortable: true,\n      width: '120px'\n    },\n    {\n      name: \"Email\",\n      selector: row => row.email,\n      sortable: true,\n      width: '200px'\n    },\n    {\n      name: \"Allowed By\",\n      selector: row => row.allowedBy,\n      sortable: true,\n      // width: '140px'\n    },\n    // {\n    //   name: \"Total Balance\",\n    //   selector: row => row.TotalBalance,\n    //   sortable: true,\n    //   width: '140px'\n    // },\n    // {\n    //   name: \"Credit Limit\",\n    //   selector: row => row.TotalCreditLimit,\n    //   sortable: true,\n    //   width: '140px'\n    // },\n    // {\n    //   name: \"Due Amount\",\n    //   selector: row => row.DueAmount,\n    //   sortable: true,\n    //   width: '140px'\n    // },\n  ];\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const filteredItems = props.data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <>\n        <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText}/>\n      </>\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={filteredItems}\n        striped\n        pagination\n        subHeader\n        subHeaderComponent={subHeaderComponent}\n        customStyles={customStyles}\n      />\n    </>\n  )\n}\nexport default TableDistributors;\n","import {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport React, {useEffect, useState} from \"react\";\nimport {errorToast, getCookieValue, ipAddress, tokenName} from \"../../../../utils/Common\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport TableDistributors from \"./TableDistributors\";\n\nconst ActiveDistributors = () => {\n  const [distributors, setDistributors] = useState(null)\n\n  async function FetchDistributors() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/distributors\"\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data)\n      // console.log(res.data.recordset)\n\n      if (res.status === 200 && !res.data.error) {\n        const activeAgents = res.data.recordset.filter(agent => agent.status === \"0\");\n        // console.log(activeAgents);\n        setDistributors(activeAgents);\n      }\n    } catch (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    FetchDistributors().then();\n  }, []);\n\n  const navigate = useNavigate();\n  const clickHandler = (id) => {\n    navigate(\"/distributor-details\", {state: {id: id, action: 'inactive'}})\n  };\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"card-header-bg\">\n          <h4 className=\"mb-0 primary-color\">Inactive  Distributors</h4>\n        </CCardHeader>\n        <CCardBody>\n          {distributors ? distributors.length > 0 && <TableDistributors data={distributors} click={clickHandler}/> :\n            <div className=\"text-center\">\n              <i className=\"spinner spinner-border\"></i>\n            </div>\n          }\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\nexport default ActiveDistributors;\n"],"names":["Input","styled","input","attrs","props","type","size","small","undefined","_templateObject","_taggedTemplateLiteral","ClearButton","button","_templateObject2","_ref","filterText","onFilter","onClear","_jsxs","_Fragment","children","_jsx","id","placeholder","value","onChange","className","onClick","columns","cell","row","click","width","name","selector","authorized_person_first_name","authorized_person_last_name","sortable","agency_name","nature_of_business","mobile","email","allowedBy","setFilterText","React","resetPaginationToggle","setResetPaginationToggle","filteredItems","data","filter","item","JSON","stringify","toLowerCase","indexOf","subHeaderComponent","useMemo","FilterComponent","e","target","handleClear","DataTable","striped","pagination","subHeader","customStyles","ActiveDistributors","distributors","setDistributors","useState","useEffect","async","token","getCookieValue","tokenName","url","ipAddress","res","axios","get","headers","concat","status","error","activeAgents","recordset","agent","errorToast","message","FetchDistributors","then","navigate","useNavigate","CCard","CCardHeader","CCardBody","length","TableDistributors","state","action"],"sourceRoot":""}