{"version":3,"file":"static/js/7456.3817a182.chunk.js","mappings":"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","sources":["views/hotels/HotelsAddMarkups.js"],"sourcesContent":["import {CCard, CCardBody, CRow} from \"@coreui/react\";\nimport Select from \"react-select\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useEffect, useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\n\nconst optionsFareType = [\n  {value: 'All', label: 'All'},\n  {value: 'Saver', label: 'Saver'},\n  {value: 'Corp_Connect', label: 'Corp Connect'},\n  {value: 'Flexi_Fare', label: 'Flexi Fare'},\n  {value: 'Coupon_Fare', label: 'Coupon Fare'},\n  {value: 'Super6E', label: 'Super6E'},\n  {value: 'SME_Fare', label: 'SME Fare'},\n  {value: 'InstaPur_Fare', label: 'InstaPur Fare'},\n];\n\nconst optionsSupplierList = [\n  {value: 'All', label: 'All'},\n  {value: 'Tripjack', label: 'Tripjack'}\n];\n\nconst optionsAppliedOn = [\n  {value: 'Total', label: 'Total'},\n  {value: 'Per', label: 'Per Room/Per Night'}\n];\n\nconst HotelsAddMarkups = () => {\n\n  useEffect(() => {\n    showCarriersList();\n  }, []);\n\n  const [selectedOptionFareType, setSelectedOptionFareType] = useState([]);\n  const [selectedOptionCarrierList, setSelectedOptionCarrierList] = useState([]);\n  const [selectedOptionSupplierList, setSelectedOptionSupplierList] = useState([]);\n  const [appliedOn, setAppliedOn] = useState([]);\n  const [carriersList, setCarriersList] = useState([]);\n  let {register, handleSubmit, reset, formState: {errors}} = useForm();\n\n  function showCarriersList() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/airlines\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        const airlines = response.data.recordset.map(airline => ({\n          value: airline.Code,\n          label: airline.Name\n        }));\n        setCarriersList(airlines);\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  function onSubmit(Params) {\n\n    console.log(Params)\n\n    Params.supplierList = selectedOptionSupplierList;\n\n    console.log(Params);\n\n    // console.log(Params)\n    //\n    // let supplierListLength = Params.supplierList.length\n    // for (let i = 0; i < supplierListLength; i++) {\n    //   let supplierName = Params.supplierList[i].value;\n    //\n    //   for (let c of Params.carrierList) {\n    //     let code = c.value;\n    //     let carrierName = c.label;\n    //\n    //     for (let f of Params.fareType) {\n    //       let fare = f.value;\n    //       console.log(supplierName, code, carrierName, fare)\n    //     }\n    //   }\n    //\n    //   if (i === (supplierListLength - 1)) {\n    //     console.log(\"equal\")\n    //   }\n    // }\n\n    if (Params.supplier === 0) {\n      errorToast(\"Choose Supplier First\");\n    } else if (Params.AppliedOn === 0) {\n      errorToast(\"Choose Applied On First\");\n    } else {\n      let token = getCookieValue(tokenName);\n      // console.log(token)\n      axios.post(ipAddress + \"admin/hotel-markupPlans\", Params, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content_Type': 'application-json',\n        }\n      })\n        .then((response) => {\n          console.log(response.data);\n          if (response.data.error === false) {\n            reset();\n            setSelectedOptionSupplierList([]);\n            successToast(response.data.message);\n          } else {\n            errorToast(response.data.message);\n          }\n        }).catch(e => {\n        console.log(e)\n      })\n    }\n  }\n\n  return (\n    <>\n      {/*<div style={{*/}\n      {/*  backgroundImage: `url(${BackgroundLogo})`,*/}\n      {/*  backgroundRepeat: 'no-repeat',*/}\n      {/*  backgroundSize: '100% 100%',*/}\n      {/*  position: \"relative\",*/}\n      {/*  width: '75vw',*/}\n      {/*  height: '70vh',*/}\n      {/*  backgroundPosition: \"center\",*/}\n      {/*  opacity: \"0.3\"*/}\n      {/*}}>*/}\n      {/*</div>*/}\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"table-responsive px-3\">\n                <div className=\"row bg-light py-2 mb-3\">\n                  <div className=\"text-center\">\n                    <h2><b>Add New Markup</b></h2>\n                    <div className=\"row\">\n                      <div className=\"col-sm-4\"></div>\n                      <div className=\"col-sm-4\">\n                        <hr style={{color: \"blue\", border: \"2px solid\"}}/>\n                      </div>\n                      <div className=\"col-sm-4\"></div>\n                    </div>\n                  </div>\n                  <br/>\n                  <br/>\n                  <br/>\n                  <br/>\n\n\n                  <div className=\"col-6 col-md-4\">\n                    <span><b>Plan Name</b></span>\n                    <input {...register('plan_name', {required: true})} type=\"text\" className=\"form-control\"/>\n                    {errors.plan_name && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n                  <div className=\"col-6 col-md-4 \">\n                    <span><b>Type</b></span>\n                    <select {...register('type', {required: true})} className=\"form-control\" name=\"type\" id=\"type\">\n                      <option value=\"\">Choose Markup Type</option>\n                      <option value=\"Fixed\">Fixed</option>\n                      <option value=\"Percentage\">Percentage</option>\n                    </select>\n                  </div>\n                  <div className=\"col-6 col-md-4\">\n                    <span><b>Markup Value</b></span>\n                    <input {...register('value', {required: true})} type=\"text\" pattern=\"[0-9]{1,9}\"\n                           className=\"form-control\"/>\n                    {errors.value && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Supplier List</b></span>\n\n                    <Select\n                      value={selectedOptionSupplierList}\n                      onChange={setSelectedOptionSupplierList}\n                      options={optionsSupplierList}\n                      isMulti\n                    />\n\n                  </div>\n\n                  {/*<div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">*/}\n                  {/*  <span><b>Fare Type</b></span>*/}\n\n                  {/*  <Select*/}\n                  {/*    value={selectedOptionFareType}*/}\n                  {/*    onChange={setSelectedOptionFareType}*/}\n                  {/*    options={optionsFareType}*/}\n                  {/*    isMulti*/}\n                  {/*    menuPortalTarget={document.body}*/}\n                  {/*    styles={{*/}\n                  {/*      menuPortal: base => ({...base, zIndex: 9999}),*/}\n                  {/*      menu: base => ({...base, maxHeight: 200, overflowY: 'auto',}) // Adjust the max height as needed*/}\n                  {/*    }}*/}\n                  {/*  />*/}\n\n                  {/*</div>*/}\n\n                  {/*<div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">*/}\n                  {/*  <span><b>Carrier List</b></span>*/}\n\n                  {/*  <Select*/}\n                  {/*    value={selectedOptionCarrierList}*/}\n                  {/*    onChange={setSelectedOptionCarrierList}*/}\n                  {/*    options={[{value: 'All', label: 'All'}, ...carriersList]}*/}\n                  {/*    isMulti*/}\n                  {/*    menuPortalTarget={document.body}*/}\n                  {/*    styles={{*/}\n                  {/*      menuPortal: base => ({...base, zIndex: 9999}),*/}\n                  {/*      menu: base => ({...base, maxHeight: 200, overflowY: 'auto',}) // Adjust the max height as needed*/}\n                  {/*    }}*/}\n                  {/*  />*/}\n\n                  {/*</div>*/}\n\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Applied On</b></span>\n\n                    <select name=\"AppliedOn\" id=\"AppliedOn\" className=\"form-select\"\n                            {...register(\"AppliedOn\", {required: \"This is required.\"})}>\n                      <option value=\"\">Select</option>\n                      <option value=\"Total\">Total</option>\n                      <option value=\"PerRoom/PerNight\">Per Room/Per Night</option>\n                    </select>\n\n                  </div>\n\n                  {/*<div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">*/}\n                  {/*  <span><b>Rescheduling Charges</b></span>*/}\n                  {/*  <input {...register('rescheduling', {required: true})} type=\"text\" pattern=\"[0-9]{1,9}\"*/}\n                  {/*         className=\"form-control\"/>*/}\n                  {/*  {errors.rescheduling && <p className='text-danger'>This is a required field.</p>}*/}\n                  {/*</div>*/}\n\n                  <div className=\"col-12\" style={{marginTop: \"12px\"}}>\n                    <Button type=\"submit\" variant=\"primary\">\n                      Add New Markup\n                    </Button>\n\n                  </div>\n\n                </div>\n              </div>\n            </form>\n          </CRow>\n        </CCardBody>\n      </CCard>\n\n    </>\n  )\n}\n\nexport default HotelsAddMarkups\n"],"names":["optionsSupplierList","value","label","HotelsAddMarkups","useEffect","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","airlines","data","recordset","map","airline","Code","Name","setCarriersList","catch","e","console","log","showCarriersList","selectedOptionFareType","setSelectedOptionFareType","useState","selectedOptionCarrierList","setSelectedOptionCarrierList","selectedOptionSupplierList","setSelectedOptionSupplierList","appliedOn","setAppliedOn","carriersList","register","handleSubmit","reset","formState","errors","useForm","_jsx","_Fragment","children","CCard","className","CCardBody","CRow","onSubmit","Params","supplierList","supplier","errorToast","AppliedOn","post","error","successToast","message","_jsxs","style","color","border","required","type","plan_name","name","id","pattern","marginTop","Select","onChange","options","isMulti","Button","variant"],"sourceRoot":""}