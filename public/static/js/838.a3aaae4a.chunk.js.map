{"version":3,"file":"static/js/838.a3aaae4a.chunk.js","mappings":"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","sources":["views/dashboard/AdminShowStatsByCountry.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {getCookieValue, ipAddress, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\nimport {CButton, CCard, CCardBody, CCardHeader} from \"@coreui/react\";\nimport CountUp from \"react-countup\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport {exportToExcel} from \"../../utils/Common\";\nimport NoData from \"../../assets/images/no-data.png\";\n\nfunction AdminShowStatsByCountry() {\n  const [stats, setStats] = useState([]);\n  const [showData, setShowData] = useState(false);\n  let [loader, setLoader] = useState(true)\n\n  useEffect(() => {\n    adminShowStats();\n    viewAllCountries();\n  }, []);\n\n  function adminShowStats() {\n    let token = getCookieValue(tokenName);\n\n    // console.log(token)\n    axios.get(ipAddress + \"admin/viewInsurances\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response);\n        setStats(response.data.recordset);\n        localStorage.setItem(\"searchByEmail\", JSON.stringify(response.data.recordset));\n        setLoader(false)\n      }).catch(e => {\n      console.log(e)\n      setLoader(false)\n    })\n  }\n\n  let [countries, setCountries] = useState([]);\n\n  function viewAllCountries() {\n    // console.log(\"In View All Countries\");\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/viewCountries\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n        console.log(response.data.recordset);\n        setCountries(response.data.recordset);\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  function selectedCountry(chooseCountry) {\n    const recordset = JSON.parse(localStorage.getItem(\"searchByEmail\"));\n\n    const filtered = recordset.filter(obj => obj.travellingTo === chooseCountry.toUpperCase());\n    if (filtered == \"\") {\n      setShowData(true);\n    } else {\n      setShowData(false);\n      setStats(filtered);\n    }\n  }\n\n  return (\n    <>\n      {\n        loader ?\n        <div>\n          <span className=\"spinner-border text-primary\"></span>\n        </div>\n        :\n        <>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CCardHeader>\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <div style={{flex: 1}}>\n                    <strong><CountUp start={0} end={stats.length}/> Insured Persons</strong>\n                    <br/>\n                  </div>\n                  <div style={{marginLeft: '10px'}}>\n\n                    <CButton style={{\n                      backgroundColor: 'red',\n                      color: 'white',\n                      border: 'black',\n                      fontSize: '0.875rem',\n                      padding: '0.25rem 0.5rem'\n                    }} type='button'\n                             color=\"success\" onClick={() => exportToExcel('adminStats')}>Export To Excel</CButton>\n                  </div>\n                </div>\n\n                <br/>\n                <span>Search By Destination Country : </span>\n\n                <select className=\"form-control\" onChange={(e) => selectedCountry(e.target.value)}>\n                  <option value=\"\">Countries List</option>\n                  {countries?.length > 0 && countries.map((item, index) => (\n                    <option key={index} value={item.name}>{item.Name}</option>\n                  ))\n                  }\n\n                </select>\n\n              </CCardHeader>\n\n              {\n                showData ?\n                  <div className=\"text-center\" style={{marginTop: '45px'}}>\n                    <img src={NoData} style={{\n                      backgroundRepeat: 'no-repeat',\n                      backgroundSize: '100% 100%',\n                      backgroundPosition: 'center',\n                      height: '100px',\n                      width: '100px'\n                    }}\n                    >\n                    </img>\n                    <h2 style={{color: 'red', marginTop: '20px'}}>No Data Fond for these Country !!!</h2>\n                  </div>\n                  :\n                  <>\n                    <div style={{height: \"335px\"}} id=\"adminStats\" className=\"table-responsive\">\n                      <Table responsive hover>\n                        <thead style={{position: \"sticky\", top: 0}}>\n                        <tr>\n                          <th>SNO</th>\n                          <th>Insurance&nbsp;Vendor</th>\n                          <th>Booking&nbsp;Date</th>\n                          <th>Destination&nbsp;Country</th>\n                          <th>Agent&nbsp;Email</th>\n                          <th>Travel&nbsp;Start&nbsp;Date</th>\n                          <th>Travel&nbsp;End&nbsp;Date</th>\n                          <th>Passport&nbsp;Number</th>\n                          <th>Pax Name</th>\n                          <th>Date&nbsp;Of&nbsp;Birth</th>\n                          <th>PNR/TKT NO</th>\n                          <th>Ticket&nbsp;Fare</th>\n                          <th>Ticket&nbsp;Tax</th>\n                          <th>Insurance Plan Type</th>\n                          <th>Rate</th>\n                          <th>GST</th>\n                          <th>Total</th>\n                          <th>Net&nbsp;Price</th>\n                          <th>Market&nbsp;Expense&nbsp;Parted</th>\n                          <th>Marketing&nbsp;Expense&nbsp;Earned</th>\n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        {stats?.length > 0 && stats.map((item, index) => (\n                          <tr key={index}>\n                            <td> {index + 1} </td>\n                            <td>Symbo</td>\n                            <td>{item.bookingDate.split(\"T\")[0]}</td>\n                            <td>{item.travellingTo}</td>\n                            <td>{item.agentEmail}</td>\n                            <td>{item.journeyStartDate.split(\"T\")[0]}</td>\n                            <td>{item.journeyEndDate.split(\"T\")[0]}</td>\n                            <td>{item.passportNo}</td>\n                            <td>{item.salutation} {item.firstName} {item.lastName}</td>\n                            <td className=\"text-right\">{item.dob}</td>\n                            <td>{item.ticketNo_Pnr}</td>\n                            <td>{item.ticketPrice}</td>\n                            <td>{item.ticketTax}</td>\n                            <td>{item.planType}</td>\n                            <td> -</td>\n                            <td>{item.insuranceTax}</td>\n                            <td>{item.amount}</td>\n                            <td>{item.amount}</td>\n                            <td> -</td>\n                            <td> -</td>\n                          </tr>\n                        ))\n                        }\n\n                        </tbody>\n\n                      </Table>\n\n                    </div>\n                  </>\n              }\n\n            </CCardBody>\n          </CCard>\n        </>\n      }\n    </>\n  )\n}\n\nexport default AdminShowStatsByCountry\n"],"names":["stats","setStats","useState","showData","setShowData","loader","setLoader","useEffect","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","console","log","data","recordset","localStorage","setItem","JSON","stringify","catch","e","adminShowStats","setCountries","viewAllCountries","countries","_jsx","_Fragment","children","className","CCard","_jsxs","CCardBody","CCardHeader","style","display","justifyContent","flex","CountUp","start","end","length","marginLeft","CButton","backgroundColor","color","border","fontSize","padding","type","onClick","exportToExcel","onChange","chooseCountry","filtered","parse","getItem","filter","obj","travellingTo","toUpperCase","selectedCountry","target","value","map","item","index","name","Name","marginTop","src","NoData","backgroundRepeat","backgroundSize","backgroundPosition","height","width","id","Table","responsive","hover","position","top","bookingDate","split","agentEmail","journeyStartDate","journeyEndDate","passportNo","salutation","firstName","lastName","dob","ticketNo_Pnr","ticketPrice","ticketTax","planType","insuranceTax","amount"],"sourceRoot":""}