{"version":3,"file":"static/js/3493.d957aed9.chunk.js","mappings":"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","sources":["../node_modules/@hookform/error-message/src/ErrorMessage.tsx","components/forms/AuthorizedSignatoryDetails.js","components/forms/Documents.js","views/dashboard/agents/AgentDetails.js"],"sourcesContent":["import * as React from 'react';\nimport { useFormContext, get, FieldErrors } from 'react-hook-form';\nimport { Props } from './types';\n\nconst ErrorMessage = <\n  TFieldErrors extends FieldErrors,\n  TAs extends\n    | undefined\n    | React.ReactElement\n    | React.ComponentType<any>\n    | keyof JSX.IntrinsicElements = undefined\n>({\n  as,\n  errors,\n  name,\n  message,\n  render,\n  ...rest\n}: Props<TFieldErrors, TAs>) => {\n  const methods = useFormContext();\n  const error = get(errors || methods.formState.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  const { message: messageFromRegister, types } = error;\n  const props = Object.assign({}, rest, {\n    children: messageFromRegister || message,\n  });\n\n  return React.isValidElement(as)\n    ? React.cloneElement(as, props)\n    : render\n    ? (render({\n        message: messageFromRegister || message,\n        messages: types,\n      }) as React.ReactElement)\n    : React.createElement((as as string) || React.Fragment, props);\n};\n\nexport { ErrorMessage };\n","import axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport {ErrorMessage} from \"@hookform/error-message\"\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\n\nconst AuthorizedSignatoryDetails = ({agent, ReadAgentDetails, handleClose}) => {\n  // console.log(agent);\n  const {\n    register,\n    handleSubmit,\n    formState: {errors}\n  } = useForm({defaultValues: agent});\n\n  const onSubmit = async (data) => {\n    try {\n      const token = getCookieValue(tokenName);\n\n      const res = await axios.post(ipAddress + \"admin/update-agent-details\", data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (res.status === 200) {\n        // console.log(res.data);\n\n        if (res.data.error) {\n          errorToast(res.data.message);\n        } else {\n          successToast(res.data.message);\n          ReadAgentDetails(agent?.AspNetUserId);\n          handleClose();\n        }\n      }\n    } catch (e) {\n      errorToast(e.message)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"border border-light shadow rounded p-3\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"row\">\n            <div className=\"col-md-12 mb-2\">\n              <h5 style={{color: '#FF0000'}}>Authorized Signatory Details</h5>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">First Name</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('FirstName', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"FirstName\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Last Name</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('LastName', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"LastName\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Email Id</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('Email', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"Email\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Mobile Number</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('PhoneNumber', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"PhoneNumber\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Whatsapp Number</label>\n              <input type=\"text\" className=\"form-control\" {...register('WhatsappNumber')}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Alternate Number</label>\n              <input type=\"text\" className=\"form-control\" {...register('AlternateNumber')}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Address Line 1</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('Address', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"Address\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">City</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('City', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"City\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">State</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('State', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"State\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Country</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('Country', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"Country\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Postal Code</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('PinCode', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"PinCode\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-12 mb-2 mt-2\">\n              <h5 style={{color: '#FF0000'}}>Business Details</h5>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Agency Name</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('CompanyName', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"CompanyName\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">GST Number</label>\n              <input type=\"text\"\n                     className=\"form-control\" {...register('GSTNumber')}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"BusinessType\">Business Type</label>\n              <select name=\"BusinessType\" id=\"BusinessType\" className=\"form-select\"\n                      {...register('BusinessType', {required: 'This field is required.'})}>\n                <option value=\"Proprietor\">Proprietor</option>\n                <option value=\"Partnership\">Partnership</option>\n                <option value=\"Company/LLP/Private Limited\">Company/LLP/Private Limited</option>\n              </select>\n\n              <ErrorMessage errors={errors} name=\"BusinessType\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-12 text-center mt-2\">\n              <button className=\"btn btn-success w-100 text-white\">Update</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\nexport default AuthorizedSignatoryDetails;\n","import axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport {ErrorMessage} from \"@hookform/error-message\"\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName, panRegex, gstRegex} from \"../../utils/Common\";\nimport {useState} from \"react\";\n\nconst Documents = ({agent, ReadAgentDetails, handleClose}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {errors},\n    setError,\n    clearErrors,\n    reset\n  } = useForm();\n\n  const [btnClicked, setBtnClicked] = useState(false);\n\n  const onSubmit = async (data) => {\n    try {\n      // console.log(agent)\n      data[\"UserId\"] = agent?.UserId;\n      let formData = new FormData();\n      formData.append(\"data\", JSON.stringify(data));\n      formData.append(\"UploadDocument\", data.UploadDocument[0])\n\n      setBtnClicked(true);\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/update-agent-document\";\n\n      let res = await axios.post(url, formData, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n\n      setBtnClicked(false);\n      if (res.status === 200) {\n        // console.log(res.data);\n\n        if (res.data.error) {\n          errorToast(res.data.message);\n        } else {\n          reset();\n          handleClose();\n          successToast(res.data.message);\n          ReadAgentDetails(agent?.AspNetUserId);\n        }\n      }\n    } catch (e) {\n      errorToast(e.message);\n      setBtnClicked(false);\n    }\n  }\n\n  const [documentType, setDocumentType] = useState(\"\")\n\n  const checkDocumentType = (document_type) => {\n    if (!document_type) {\n      setDocumentType(\"\");\n      setError(\"DocumentType\", {\n        type: \"required\",\n        message: \"This field is required.\",\n      })\n    } else {\n      clearErrors(\"DocumentType\");\n      setDocumentType(document_type);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* Document Type */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"DocumentType\">Document Type</label>\n          <select name=\"DocumentType\" id=\"DocumentType\" className=\"form-select\"\n                  {...register(\"DocumentType\", {required: 'This field is required.'})}\n                  onChange={(e => checkDocumentType(e.target.value))}>\n            <option value=\"\">Please Select</option>\n            <option value=\"PanCard\">Pan Card</option>\n            <option value=\"AddressProof\">Address Proof</option>\n            <option value=\"AddressProof2\">Address Proof 2</option>\n            <option value=\"TDSCertificate\">TDS Certificate</option>\n            <option value=\"GSTCertificate\">GST Certificate</option>\n          </select>\n\n          <ErrorMessage errors={errors} name=\"DocumentType\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>\n\n        {/* TDSCertificate */}\n        {documentType === \"TDSCertificate\" && <div className=\"mb-3\">\n          <label htmlFor=\"TdsNumber\">TDS Percentage</label>\n          <input type=\"number\" id=\"TdsNumber\" name=\"TdsNumber\" className=\"form-control\" min={0} max={100}\n                 {...register('TdsNumber', {required: 'This field is required.'})}/>\n\n          <ErrorMessage errors={errors} name=\"TdsNumber\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {/* PanCard */}\n        {documentType === \"PanCard\" && <div className=\"mb-3\">\n          <label htmlFor=\"PanNumber\">Document Number</label>\n          <input type=\"text\" id=\"PanNumber\" name=\"PanNumber\" className=\"form-control\"\n                 {...register('PanNumber', {\n                     required: 'This field is required.',\n                     pattern: {\n                       value: panRegex,\n                       message: 'Invalid PAN format. It should be 5 uppercase letters, followed by 4 digits and 1 uppercase letter.',\n                     }\n                   }\n                 )}\n          />\n\n          <ErrorMessage errors={errors} name=\"PanNumber\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {/* GST Certificate */}\n        {documentType === \"GSTCertificate\" && <div className=\"mb-3\">\n          <label htmlFor=\"GstNumber\">Document Number</label>\n          <input type=\"text\" id=\"GstNumber\" name=\"GstNumber\" className=\"form-control\"\n                 {...register('GstNumber', {\n                     required: 'This field is required.',\n                     pattern: {\n                       value: gstRegex,\n                       message: 'Invalid GST format. It should be a 15-character alphanumeric string with a specific format.',\n                     },\n                   }\n                 )}\n          />\n\n          <ErrorMessage errors={errors} name=\"GstNumber\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {documentType === \"AddressProof\" && <label htmlFor=\"AddressProof\">Address Proof Type</label>}\n        {documentType === \"AddressProof2\" && <label htmlFor=\"AddressProof\">Second Address Proof Type</label>}\n\n        {/* AddressProof / AddressProof2 */}\n        {(documentType === \"AddressProof\" || documentType === \"AddressProof2\") && <div className=\"mb-3\">\n          <select name=\"AddressProof\" id=\"AddressProof\" className=\"form-select\"\n                  {...register('AddressProof', {required: 'This field is required.'})}>\n            <option value=\"\">Please Select</option>\n            <option value=\"Aadhaar Number\">Aadhaar Number</option>\n            <option value=\"Passport\">Passport</option>\n            <option value=\"Driving License\">Driving License</option>\n            <option value=\"Voter Id\">Voter Id</option>\n            <option value=\"Ration Card with Address\">Ration Card with Address</option>\n            <option value=\"Vehicle Registration Certificate\">\n              Vehicle Registration Certificate\n            </option>\n            <option value=\"Credit Card Statement\">Credit Card Statement</option>\n            <option value=\"Utility Bill - Electricity, Telephone, Mobile\">\n              Utility Bill - Electricity, Telephone, Mobile\n            </option>\n            <option value=\"Shop Establishment or Trade License\">\n              Shop Establishment or Trade License\n            </option>\n            <option value=\"Utility Bill of office Address - Electricity, Telephone, Mobile\">\n              Utility Bill of office Address - Electricity, Telephone, Mobile\n            </option>\n            <option value=\"Registered Sale / Lease Agreement / Rent Agreement with Notary\">\n              Registered Sale / Lease Agreement / Rent Agreement with Notary\n            </option>\n            <option value=\"Latest Bank Statement -Not more than 3 month old\">\n              Latest Bank Statement -Not more than 3 month old\n            </option>\n            <option value=\"Udyog Aadhaar\">Udyog Aadhaar</option>\n            <option value=\"Certificate of Incorporation\">Certificate of Incorporation</option>\n            <option value=\"Partnership Deed with office location\">Partnership Deed with office location</option>\n          </select>\n\n          <ErrorMessage errors={errors} name=\"AddressProof\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {/* Upload Document */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"UploadDocument\">Upload Document</label>\n          <input type=\"file\" id=\"UploadDocument\" name=\"UploadDocument\"\n                 className=\"form-control\" accept=\".png, .jpg, .jpeg, .pdf\"\n                 {...register('UploadDocument', {required: 'This field is required.'})}/>\n\n          <ErrorMessage errors={errors} name=\"UploadDocument\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>\n\n        {/* Remarks */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"Remarks\">Remarks</label>\n          <textarea name=\"Remarks\" id=\"Remarks\" className=\"form-control\"\n                    {...register('Remarks', {required: 'This field is required.'})}/>\n\n          <ErrorMessage errors={errors} name=\"Remarks\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>\n\n        <div className=\"col-12 text-center mt-2\">\n          <button disabled={btnClicked} className=\"btn bg-btn w-100 text-white\">Update</button>\n        </div>\n      </form>\n    </>\n  )\n}\nexport default Documents;\n","import {useLocation, useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../../utils/Common\";\nimport AuthorizedSignatoryDetails from \"../../../components/forms/AuthorizedSignatoryDetails\";\nimport Documents from \"../../../components/forms/Documents\";\n\nconst AgentDetails = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [agent, setAgent] = useState(null);\n\n  async function ReadAgentDetails(UserId) {\n    try {\n      // console.log(\"UserId \", UserId)\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/getCompanyDetailByUserId/\" + UserId\n\n      let res = await axios.post(url, {}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n\n      // console.log(\"Agent Info. Fetched\");\n      // console.log(res.data.recordset[0]);\n      if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset[0]);\n        setAgent(res.data.recordset[0]);\n      }\n    } catch (e) {\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (!location.state) {\n      navigate(\"/manage-agents\");\n    } else {\n      // console.log(location.state)\n      ReadAgentDetails(location.state).then();\n    }\n  }, [location]);\n\n  function FormatDate(originalDate) {\n    const date = new Date(originalDate);\n    const formattedDate = date.toISOString().split('T')[0];\n    const formattedTime = date.toTimeString().split(' ')[0].slice(0, 5);\n    const result = `${formattedDate} ${formattedTime}`;\n    return result;\n  }\n\n  async function ActivateAgent(UserId, AspNetUserId) {\n    if (confirm('Are you sure?')) {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/activate-agent\"\n\n      let res = await axios.post(url, {Id: UserId[0]}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res.data);\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message);\n      }\n      if (res.status === 200 && !res.data.error) {\n        successToast(res.data.message);\n        ReadAgentDetails(AspNetUserId).then();\n      }\n    }\n  }\n\n  async function InactiveAgent(UserId, AspNetUserId) {\n    if (confirm('Are you sure?')) {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/deactivate-agent\"\n\n      let res = await axios.post(url, {Id: UserId[0]}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res);\n      // console.log(res.data);\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message);\n      }\n      if (res.status === 200 && !res.data.error) {\n        successToast(res.data.message);\n        ReadAgentDetails(AspNetUserId).then();\n      }\n    }\n  }\n\n  /* Edit Modal */\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /* Modal - Edit Documents */\n  const [showDocuments, setShowDocuments] = useState(false);\n  const handleCloseDocuments = () => setShowDocuments(false);\n  const handleShowDocuments = () => setShowDocuments(true);\n\n  /* Modal - Document History */\n  const [showDocumentsHistory, setShowDocumentsHistory] = useState(false);\n  const handleCloseDocumentsHistory = () => setShowDocumentsHistory(false);\n  const handleShowDocumentsHistory = () => setShowDocumentsHistory(true);\n\n  /* ------------------------------------------------------------------ */\n\n  const [documentsData, setDocumentsData] = useState(null);\n\n  async function ReadDocumentHistory(UserId) {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/old-document-bank\";\n\n      let res = await axios.post(url, {UserId: UserId}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res);\n\n      if (res.status === 200) {\n        if (res.data.error) {\n          errorToast(res.data.message);\n        } else {\n          // console.log(res.data.recordset);\n          setDocumentsData(res.data.recordset);\n          handleShowDocumentsHistory();\n        }\n      }\n    } catch (e) {\n      errorToast(e.message);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"mb-3\">\n        <button className=\"btn btn-primary me-2\" onClick={() => ReadDocumentHistory(agent?.UserId)}>\n          Document History\n        </button>\n\n        <a href=\"https://services.gst.gov.in/services/searchtp\" target=\"_blank\" className=\"btn btn-primary\">\n          GST Verification\n        </a>\n      </div>\n\n      {/* Authorized Signatory Details */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 className=\"mb-0 primary-color\">Authorized Signatory Details</h4>\n            </div>\n            <div className=\"col-6 text-end\">\n              <button onClick={handleShow} className=\"btn btn-success px-3 btn-sm text-white\">\n                <i className=\"fa fa-edit\"></i> Edit Details\n              </button>\n            </div>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>User Status: {!agent ? '' : agent?.IsActive ?\n                <span className=\"badge bg-success text-white\">Active</span> :\n                <span className=\"badge bg-danger text-white\">InActive</span>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Registration Date: <b>{agent?.CreatedOn && FormatDate(agent?.CreatedOn)}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4 text-end\">\n              {!agent ? '' : agent?.IsActive === false ?\n                <button onClick={() => ActivateAgent(agent?.UserId, agent?.AspNetUserId)}\n                        className=\"btn btn-outline-success btn-sm px-4\">\n                  Activate\n                </button> :\n                <button onClick={() => InactiveAgent(agent?.UserId, agent?.AspNetUserId)}\n                        className=\"btn btn-outline-danger btn-sm px-3\">\n                  <i className=\"fas fa-times\"></i> Inactive\n                </button>\n              }\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>First Name: <b>{agent?.FirstName}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Last Name: <b>{agent?.LastName}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Email Id: <b>{agent?.Email}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Mobile Number: <b>{agent?.PhoneNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Whatsapp Number: <b>{agent?.WhatsappNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Alternate Number: <b>{agent?.AlternateNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Address Line 1: <b>{agent?.Address}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>City: <b>{agent?.City}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>State: <b>{agent?.State}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p className=\"mb-md-0\">Country: <b>{agent?.Country}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p className=\"mb-0 mb-md-0\">Postal Code: <b>{agent?.PinCode}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <h4 className=\"mb-0 primary-color\">Access Details</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>User Name: <b>{agent?.Email}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Agency Id: <b>{agent?.CompanyId}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Group Type: <b>{agent?.GroupType}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <h4 className=\"mb-0 primary-color\">Agency Details</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>Agency Name: <b>{agent?.CompanyName}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Nature of Business: <b>{agent?.NatureOfBusiness}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Business Type: <b>{agent?.BusinessType}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>PAN Number: <b>{agent?.PANNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>TDS Exemption: <b>{agent?.TDSExemption}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>TDS (% for exemption): <b>{agent?.TDSPercentage}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>IATA No.: <b>{agent?.IATACode}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Referenced By: <b>{agent?.ReferencedBy}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Name or ID:</p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>GST Number: <b>{agent?.GSTNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Sales Executive Name:</p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Payment Type: <b>{agent?.PaymentType}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {/* Account Info */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <h4 className=\"mb-0 primary-color\">Account Info</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 mb-md-0 col-md-4\">\n              <p>Total Balance: <b>{agent?.TotalBalance}</b></p>\n            </div>\n\n            <div className=\"mb-3 mb-md-0 col-md-4\">\n              <p>Credit Limit: <b>{agent?.TotalCreditLimit}</b></p>\n            </div>\n\n            <div className=\"mb-0 col-md-4\">\n              <p>Due Amount: <b>{agent?.DueAmount}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {/* Documents */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 className=\"mb-0 primary-color\">Documents</h4>\n            </div>\n            <div className=\"col-6 text-end\">\n              <button onClick={handleShowDocuments} className=\"btn btn-success px-3 btn-sm text-white\">\n                <i className=\"fa fa-edit\"></i> Update Document\n              </button>\n            </div>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>Agency Logo: {agent?.AgencyLogo ?\n                <a href={ipAddress + \"uploads/\" + agent?.AgencyLogo}\n                   target=\"_blank\" className=\"file-link\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Profile Picture: {agent?.ProfilePicture ?\n                <a href={ipAddress + \"uploads/\" + agent?.ProfilePicture}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>PAN: {agent?.PANNumberDocument ?\n                <a href={ipAddress + \"uploads/\" + agent?.PANNumberDocument}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a>\n                :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>TDS Certificate: {agent?.TDSCertificate ?\n                <a href={ipAddress + \"uploads/\" + agent?.TDSCertificate}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a>\n                :\n                <b>Not Available</b>}</p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>GST Certificate: {agent?.GSTCertificate ?\n                <a href={ipAddress + \"uploads/\" + agent?.GSTCertificate}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\"></div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Address Document Type: <b>{agent?.AddressProof}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Address Proof Type: {agent?.AddressProofDocument ?\n                <a href={ipAddress + \"uploads/\" + agent?.AddressProofDocument}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\"></div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Second Address Document\n                Type: <b>{agent?.SecondAddressProof ? agent?.SecondAddressProof : 'Not Available'}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Second Address Proof Type: {agent?.SecondAddressProofDocument ?\n                <a href={ipAddress + \"uploads/\" + agent?.SecondAddressProofDocument}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}</p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {/* Modal - Authorized Signatory Details */}\n      <Modal show={show} onHide={handleClose} centered fullscreen size=\"lg\">\n        <Modal.Header closeButton>\n          <h4>Update Details</h4>\n        </Modal.Header>\n        <Modal.Body>\n          <AuthorizedSignatoryDetails agent={agent} ReadAgentDetails={ReadAgentDetails} handleClose={handleClose}/>\n        </Modal.Body>\n      </Modal>\n\n      {/* Modal - Update Document */}\n      <Modal show={showDocuments} onHide={handleCloseDocuments} centered>\n        <Modal.Header closeButton>\n          <h4 className=\"mb-0 primary-color\">Update Document</h4>\n        </Modal.Header>\n        <Modal.Body>\n          <Documents agent={agent} ReadAgentDetails={ReadAgentDetails} handleClose={handleCloseDocuments}/>\n        </Modal.Body>\n      </Modal>\n\n      {/* Modal - Document History */}\n      <Modal show={showDocumentsHistory} onHide={handleCloseDocumentsHistory} centered fullscreen size=\"lg\">\n        <Modal.Header closeButton>\n          <h4 className=\"mb-0\">\n            Document History\n          </h4>\n        </Modal.Header>\n        <Modal.Body>\n          {documentsData && documentsData.length > 0 ? <div className=\"container\">\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover\">\n                <thead >\n                <tr className=\"bg-dark\">\n                  <th>ReferenceNo</th>\n                  <th>Document&nbsp;Type</th>\n                  <th>Document&nbsp;Number</th>\n                  <th>Document&nbsp;Path</th>\n                  <th>Remarks</th>\n                  <th>ActionOn</th>\n                  <th>ActionBy</th>\n                </tr>\n                </thead>\n                <tbody>\n                {documentsData.map(x =>\n                  <tr key={x.Id}>\n                    <td>{x.Id}</td>\n                    <td>{x.DocumentType}</td>\n                    <td>{x.DocumentNumber}</td>\n                    <td className=\"text-center\">\n                      <a href={ipAddress + \"uploads/\" + x.DocumentPath} target=\"_blank\" className=\"text-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                      </a>\n                    </td>\n                    <td>{x.Remarks}</td>\n                    <td>{x.ActionOn}</td>\n                    <td>{x.ActionBy}</td>\n                  </tr>\n                )}\n                </tbody>\n              </table>\n            </div>\n          </div>: <div className=\"text-center h4\">\n           <span className=\"badge bg-danger\">No Document History Found</span>\n          </div>}\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\nexport default AgentDetails;\n"],"names":["s","t","as","a","errors","m","name","o","message","i","render","l","e","r","n","Object","keys","length","indexOf","f","c","formState","g","u","types","d","assign","children","messages","_ref","agent","ReadAgentDetails","handleClose","register","handleSubmit","useForm","defaultValues","_jsx","className","onSubmit","async","token","getCookieValue","tokenName","res","axios","post","ipAddress","data","headers","concat","status","error","errorToast","successToast","AspNetUserId","_jsxs","style","color","htmlFor","type","required","ErrorMessage","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","id","value","_ref12","setError","clearErrors","reset","btnClicked","setBtnClicked","useState","documentType","setDocumentType","_Fragment","UserId","formData","FormData","append","JSON","stringify","UploadDocument","url","onChange","document_type","target","min","max","pattern","panRegex","gstRegex","accept","disabled","AgentDetails","location","useLocation","navigate","useNavigate","setAgent","recordset","useEffect","window","scrollTo","state","then","show","setShow","showDocuments","setShowDocuments","handleCloseDocuments","showDocumentsHistory","setShowDocumentsHistory","documentsData","setDocumentsData","ReadDocumentHistory","onClick","href","CCard","CCardHeader","handleShow","CCardBody","IsActive","CreatedOn","originalDate","date","Date","formattedDate","toISOString","split","formattedTime","toTimeString","slice","FormatDate","confirm","Id","ActivateAgent","InactiveAgent","FirstName","LastName","Email","PhoneNumber","WhatsappNumber","AlternateNumber","Address","City","State","Country","PinCode","CompanyId","GroupType","CompanyName","NatureOfBusiness","BusinessType","PANNumber","TDSExemption","TDSPercentage","IATACode","ReferencedBy","GSTNumber","PaymentType","TotalBalance","TotalCreditLimit","DueAmount","handleShowDocuments","AgencyLogo","ProfilePicture","PANNumberDocument","TDSCertificate","GSTCertificate","AddressProof","AddressProofDocument","SecondAddressProof","SecondAddressProofDocument","Modal","onHide","centered","fullscreen","size","Header","closeButton","Body","AuthorizedSignatoryDetails","Documents","handleCloseDocumentsHistory","map","x","DocumentType","DocumentNumber","DocumentPath","Remarks","ActionOn","ActionBy"],"sourceRoot":""}