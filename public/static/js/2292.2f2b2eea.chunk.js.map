{"version":3,"file":"static/js/2292.2f2b2eea.chunk.js","mappings":"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","sources":["views/dashboard/FlightsMarkup.js"],"sourcesContent":["import BackgroundLogo from \"../../assets/images/BackgroundLogo.gif\";\nimport React, {useEffect, useState} from \"react\";\nimport {CCard, CCardBody, CRow} from \"@coreui/react\";\nimport Form from \"react-bootstrap/Form\";\nimport Select from 'react-select';\nimport Button from \"react-bootstrap/Button\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst optionsFareType = [\n  {value: 'All', label: 'All'},\n  {value: 'Saver', label: 'Saver'},\n  {value: 'Corp_Connect', label: 'Corp Connect'},\n  {value: 'Flexi_Fare', label: 'Flexi Fare'},\n  {value: 'Coupon_Fare', label: 'Coupon Fare'},\n  {value: 'Super6E', label: 'Super6E'},\n  {value: 'SME_Fare', label: 'SME Fare'},\n  {value: 'InstaPur_Fare', label: 'InstaPur Fare'},\n];\n\nconst optionsCarrierList = [\n  {value: '', label: 'All'},\n];\n\nconst optionsSupplierList = [\n  {value: '', label: 'All'},\n  {value: 'TBO', label: 'TBO'},\n];\n\nconst FlightsMarkup = () => {\n\n  useEffect(() => {\n    showCarriersList();\n    getMarkupData();\n  }, []);\n\n  const [selectedOptionFareType, setSelectedOptionFareType] = useState(null);\n  const [selectedOptionCarrierList, setSelectedOptionCarrierList] = useState(null);\n  const [selectedOptionSupplierList, setSelectedOptionSupplierList] = useState(null);\n  const [carriersList, setCarriersList] = useState([]);\n  let {register, handleSubmit, reset, formState: {errors}} = useForm();\n\n  function showCarriersList() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/airlines\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        const airlines = response.data.recordset.map(airline => ({\n          value: airline.Code,\n          label: airline.Name\n        }));\n        setCarriersList(airlines);\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  function onSubmit(Params) {\n\n    Params.fareType = selectedOptionFareType;\n    Params.carrierList = selectedOptionCarrierList;\n    Params.supplierList = selectedOptionSupplierList;\n\n    alert(JSON.stringify(Params));\n\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.post(ipAddress + \"admin/markupPlans\", Params,{\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response);\n        if (response.data.error === false) {\n          reset();\n          successToast(response.data.message);\n\n        } else {\n          errorToast(\"Error while Adding\");\n        }\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  function getMarkupData() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/markupPlans\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    }).then((response) => {\n      console.log(response);\n    }).catch(e => {\n      console.log(e)\n\n    })\n  }\n\n  return (\n    <>\n      {/*<div style={{*/}\n      {/*  backgroundImage: `url(${BackgroundLogo})`,*/}\n      {/*  backgroundRepeat: 'no-repeat',*/}\n      {/*  backgroundSize: '100% 100%',*/}\n      {/*  position: \"relative\",*/}\n      {/*  width: '75vw',*/}\n      {/*  height: '70vh',*/}\n      {/*  backgroundPosition: \"center\",*/}\n      {/*  opacity: \"0.3\"*/}\n      {/*}}>*/}\n      {/*</div>*/}\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"table-responsive px-3\">\n                <div className=\"row bg-light py-2 mb-3\">\n                  <div className=\"text-center\">\n                    <h2><b>Add New Markup</b></h2>\n                    <div className=\"row\">\n                      <div className=\"col-sm-4\"></div>\n                      <div className=\"col-sm-4\">\n                        <hr style={{color: \"blue\", border: \"2px solid\"}}/>\n                      </div>\n                      <div className=\"col-sm-4\"></div>\n                    </div>\n                  </div>\n                  <br/>\n                  <br/>\n                  <br/>\n                  <br/>\n\n\n                  <div className=\"col-6 col-md-4\">\n                    <span><b>Plan Name</b></span>\n                    <input {...register('plan_name', {required: true})} type=\"text\" className=\"form-control\"/>\n                    {errors.plan_name && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n                  <div className=\"col-6 col-md-4 \">\n                    <span><b>Type</b></span>\n                    <select {...register('type', {required: true})} className=\"form-control\" name=\"type\" id=\"type\">\n                      <option value=\"\">Choose Markup Type</option>\n                      <option value=\"Fixed\">Fixed</option>\n                      <option value=\"Percentage\">Percentage</option>\n                    </select>\n                  </div>\n                  <div className=\"col-6 col-md-4\">\n                    <span><b>Markup Value</b></span>\n                    <input {...register('value', {required: true})} type=\"text\" pattern=\"[0-9]{1,9}\" className=\"form-control\"/>\n                    {errors.value && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Fare Type</b></span>\n\n                    <Select\n                      defaultValue={selectedOptionFareType}\n                      onChange={setSelectedOptionFareType}\n                      options={optionsFareType}\n                      isMulti\n                      menuPortalTarget={document.body}\n                      styles={{\n                        menuPortal: base => ({...base, zIndex: 9999}),\n                        menu: base => ({...base, maxHeight: 200, overflowY: 'auto',}) // Adjust the max height as needed\n                      }}\n                    />\n\n                  </div>\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Carrier List</b></span>\n\n                    {/*<Multiselect*/}\n                    {/*  options={carriersList} // Options to display in the dropdown*/}\n                    {/*  displayValue={carriersList.Name} // Property name to display in the dropdown options*/}\n                    {/*/>*/}\n\n                    <Select\n                      defaultValue={selectedOptionCarrierList}\n                      onChange={setSelectedOptionCarrierList}\n                      options={[{ value: 'All', label: 'All' }, ...carriersList]}\n                      isMulti\n                      menuPortalTarget={document.body}\n                      styles={{\n                        menuPortal: base => ({...base, zIndex: 9999}),\n                        menu: base => ({...base, maxHeight: 200, overflowY: 'auto',}) // Adjust the max height as needed\n                      }}\n                    />\n\n                  </div>\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Supplier List</b></span>\n\n                    <Select\n                      defaultValue={selectedOptionSupplierList}\n                      onChange={setSelectedOptionSupplierList}\n                      options={optionsSupplierList}\n                      isMulti\n                    />\n\n                  </div>\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Cancellation Charges</b></span>\n                    <input {...register('cancellation', {required: true})} type=\"text\" pattern=\"[0-9]{1,9}\" className=\"form-control\"/>\n                    {errors.cancellation && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n\n                  <div style={{marginTop: \"12px\"}} className=\"col-6 col-md-4\">\n                    <span><b>Rescheduling Charges</b></span>\n                    <input {...register('rescheduling', {required: true})} type=\"text\" pattern=\"[0-9]{1,9}\" className=\"form-control\"/>\n                    {errors.rescheduling && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n\n                  <div className=\"col-12\" style={{marginTop: \"12px\"}}>\n                    <Button type=\"submit\" variant=\"primary\">\n                      Add New Markup\n                    </Button>\n\n                  </div>\n\n                </div>\n              </div>\n            </form>\n          </CRow>\n        </CCardBody>\n      </CCard>\n\n    </>\n  )\n}\n\nexport default FlightsMarkup\n"],"names":["optionsFareType","value","label","optionsSupplierList","FlightsMarkup","useEffect","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","airlines","data","recordset","map","airline","Code","Name","setCarriersList","catch","e","console","log","showCarriersList","getMarkupData","selectedOptionFareType","setSelectedOptionFareType","useState","selectedOptionCarrierList","setSelectedOptionCarrierList","selectedOptionSupplierList","setSelectedOptionSupplierList","carriersList","register","handleSubmit","reset","formState","errors","useForm","_jsx","_Fragment","children","CCard","className","CCardBody","CRow","onSubmit","Params","fareType","carrierList","supplierList","alert","JSON","stringify","post","error","successToast","message","errorToast","_jsxs","style","color","border","required","type","plan_name","name","id","pattern","marginTop","Select","defaultValue","onChange","options","isMulti","menuPortalTarget","document","body","styles","menuPortal","base","zIndex","menu","maxHeight","overflowY","cancellation","rescheduling","Button","variant"],"sourceRoot":""}