{"version":3,"file":"static/js/1661.cd6a485d.chunk.js","mappings":"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","sources":["views/dashboard/agents/FilterComponent.js","views/dashboard/distributors/agents/TableAgents.js","views/dashboard/distributors/agents/SearchAgents.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.small ? 5 : undefined\n}))`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <Input\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Filter table data...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton className=\"bg-dark text-white\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n","import Modal from \"react-bootstrap/Modal\";\nimport React, {useMemo, useState} from \"react\";\nimport DataTable from 'react-data-table-component';\nimport FilterComponent from \"../../agents/FilterComponent\";\nimport {customStyles} from \"../../../../utils/Common\";\n\nconst TableDistributors = (props) => {\n  const columns = [\n    {\n      name: \"\",\n      button: true,\n      cell: row => <>\n        <button onClick={() => props.click(row.UserId)} className=\"btn btn-link\">\n          <i className=\"fa fa-eye\"></i>\n        </button>\n      </>,\n      width: '50px'\n    },\n    {\n      name: \"Name\",\n      selector: row => row.FirstName + ' ' + row.LastName,\n      sortable: true,\n      width: '160px'\n    },\n    {\n      name: \"Company Id\",\n      selector: row => row.CompanyId,\n      sortable: true,\n      width: '140px'\n    },\n    {\n      name: \"Agency Name\",\n      selector: row => row.CompanyName,\n      sortable: true,\n      width: '160px'\n    },\n    {\n      name: \"Status\",\n      selector: row => row.IsActive ? <span className=\"text-success\">Active</span> :\n        <span className=\"text-danger\">InActive</span>,\n      sortable: true,\n      width: '100px'\n    },\n    {\n      name: \"Group Type\",\n      selector: row => row.GroupType,\n      sortable: true,\n      width: '150px'\n    },\n    {\n      name: \"Mobile\",\n      selector: row => row.PhoneNumber,\n      sortable: true,\n      width: '120px'\n    },\n    {\n      name: \"Total Balance\",\n      selector: row => row.TotalBalance,\n      sortable: true,\n      width: '140px'\n    },\n    {\n      name: \"Total Credit Limit\",\n      selector: row => row.TotalCreditLimit,\n      sortable: true,\n      width: '140px'\n    },\n    {\n      name: \"Due Amount\",\n      selector: row => row.DueAmount,\n      sortable: true,\n      width: '140px'\n    },\n  ];\n\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const filteredItems = props.data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <>\n        <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText}/>\n      </>\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={filteredItems}\n        striped\n        pagination\n        subHeader\n        subHeaderComponent={subHeaderComponent}\n        customStyles={customStyles}\n      />\n    </>\n  )\n}\nexport default TableDistributors;\n","import axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport TableAgents from \"./TableAgents\";\nimport {errorToast, getCookieValue, ipAddress, tokenName} from \"../../../../utils/Common\";\n\nconst SearchAgents = () => {\n  const [distributors, setDistributors] = useState(null)\n\n  async function FetchDistributors() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/distributors\"\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data)\n      // console.log(res.data.recordset)\n\n      if (res.status === 200 && res.data.error) {\n        setDistributors([]);\n      } else if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset)\n        setDistributors(res.data.recordset);\n      }\n    } catch (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    FetchDistributors().then();\n  }, []);\n\n  /* ------------------------------------------------- */\n\n  const [agents, setAgents] = useState(null);\n\n  async function FetchDistributorWiseAgents(distributor_id) {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/distributors-wise-agents\";\n\n      let res = await axios.post(url, {distributor_id}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n      // console.log(res);\n      // console.log(res.data);\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message)\n      } else if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset);\n        setAgents(res.data.recordset);\n      }\n    } catch (e) {\n      errorToast(e.message)\n    }\n  }\n\n  const navigate = useNavigate();\n\n  const clickHandler = (UserId) => {\n    // console.log(UserId)\n    navigate(\"/agent-details\", {state: UserId})\n  };\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"card-header-bg\">\n          <h4 className=\"mb-0 primary-color\">Search Agents</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-5 border shadow rounded p-2\">\n              <label htmlFor=\"agents\">Select Distributor <span className=\"text-danger\">*</span></label>\n              <select onChange={(e) => FetchDistributorWiseAgents(e.target.value)} name=\"agents\" id=\"agents\"\n                      className=\"form-select\">\n                <option value=\"\">Please select Distributor</option>\n                {distributors && distributors.length > 0 && distributors.map(x =>\n                  <option key={x.id} value={x.id}>{x.agency_name}</option>\n                )}\n              </select>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {agents && <CCard className=\"mt-4\">\n        <CCardHeader className=\"card-header-bg\">\n          <h4 className=\"mb-0 primary-color\">Search Agents</h4>\n        </CCardHeader>\n        <CCardBody>\n          <TableAgents data={agents} click={clickHandler}/>\n        </CCardBody>\n      </CCard>\n      }\n    </>\n  )\n}\nexport default SearchAgents;\n"],"names":["Input","styled","input","attrs","props","type","size","small","undefined","_templateObject","_taggedTemplateLiteral","ClearButton","button","_templateObject2","_ref","filterText","onFilter","onClear","_jsxs","_Fragment","children","_jsx","id","placeholder","value","onChange","className","onClick","columns","name","cell","row","click","UserId","width","selector","FirstName","LastName","sortable","CompanyId","CompanyName","IsActive","GroupType","PhoneNumber","TotalBalance","TotalCreditLimit","DueAmount","setFilterText","React","resetPaginationToggle","setResetPaginationToggle","filteredItems","data","filter","item","JSON","stringify","toLowerCase","indexOf","subHeaderComponent","useMemo","FilterComponent","e","target","handleClear","DataTable","striped","pagination","subHeader","customStyles","SearchAgents","distributors","setDistributors","useState","useEffect","async","token","getCookieValue","tokenName","url","ipAddress","res","axios","get","headers","concat","status","error","recordset","errorToast","message","FetchDistributors","then","agents","setAgents","navigate","useNavigate","CCard","CCardHeader","CCardBody","htmlFor","distributor_id","post","FetchDistributorWiseAgents","length","map","x","agency_name","TableAgents","state"],"sourceRoot":""}