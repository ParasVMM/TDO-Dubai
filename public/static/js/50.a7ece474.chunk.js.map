{"version":3,"file":"static/js/50.a7ece474.chunk.js","mappings":"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","sources":["views/dashboard/SymboAccount.js"],"sourcesContent":["import Form from \"react-bootstrap/Form\";\nimport React, {useEffect, useState} from \"react\";\nimport CanvasJSReact from \"@canvasjs/react-charts\";\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\nimport { cilArrowRight, cilArrowLeft } from '@coreui/icons'\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {useForm} from \"react-hook-form\";\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\n\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\nimport CountUp from \"react-countup\";\n\nconst SymboAccount = () => {\n  let [loader, setLoader] = useState(true)\n\n  useEffect(() => {\n    adminShowAllSymboAccountInfo();\n    adminShowSymboBalance();\n  }, []);\n\n  const [accountInfo, setAccountInfo] = useState([]);\n  const [totalBalance, setTotalBalance] = useState([]);\n\n  function convert(x) {\n    x=x.toString();\n    var lastThree = x.substring(x.length-3);\n    var otherNumbers = x.substring(0,x.length-3);\n    if(otherNumbers != '')\n      lastThree = ',' + lastThree;\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n    return res;\n  }\n\n  function adminShowAllSymboAccountInfo() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/view-symbo-account\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        setAccountInfo(response.data.recordset);\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  function adminShowSymboBalance() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/symbo-balance\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    }).then((response) => {\n        setTotalBalance(response.data.recordset[0].final_amount);\n      setLoader(false)\n      }).catch(e => {\n      console.log(e)\n      setLoader(false)\n    })\n  }\n\n  let {register, handleSubmit, reset ,formState: {errors}} = useForm();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => { setShow(true); }\n\n  function onSubmit(Param) {\n    let token = getCookieValue(tokenName);\n    axios.post(ipAddress + \"admin/symbo-account\", Param, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if (response.data.error === false) {\n          successToast(response.data.message);\n          adminShowAllSymboAccountInfo();\n          adminShowSymboBalance();\n          reset();\n          handleClose();\n        } else {\n          errorToast(\"Error while Adding\");\n        }\n      }).catch(e =>{\n      console.log(e)\n    })\n  }\n\n  const [currentPage, setCurrentPage] = useState(1);\n  // const itemsPerPage = 5;\n  const itemsPerPage = 10;\n\n  const totalPages = Math.ceil(accountInfo.length / itemsPerPage);\n  const pageLimit = 5; // Set the limit of displayed page buttons\n\n  const handleClick = (number) => {\n    setCurrentPage(number);\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages));\n  };\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n\n  // Calculate the range of page numbers to display\n  const pageNumbers = [];\n  const maxButtonsToShow = 5;\n\n  let startPage = currentPage - Math.floor(maxButtonsToShow / 2);\n  startPage = Math.max(1, startPage);\n\n  let endPage = startPage + maxButtonsToShow - 1;\n  endPage = Math.min(totalPages, endPage);\n\n  if (endPage - startPage + 1 < maxButtonsToShow) {\n    // Adjust startPage when there are not enough buttons to display\n    startPage = Math.max(1, endPage - maxButtonsToShow + 1);\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    pageNumbers.push(i);\n  }\n\n    return(\n      <>\n        {loader ? <div>\n            <span className=\"spinner-border text-primary\"></span>\n          </div> :\n          <>\n            <CCard className=\"mb-4\">\n            <CCardBody>\n              <CRow>\n                <div className=\"table-responsive px-3 \">\n                  <h2 style={{ textAlign: 'center' }} > <b>Total Balance : {'₹ '}<CountUp start={0} end={totalBalance} /> </b> </h2>\n                  <hr/>\n                  <div className=\"bg-light py-2 mb-3\" >\n                    <Button variant=\"primary\" onClick={handleShow} >\n                      Add New Payment\n                    </Button>\n\n                    <div className=\"row\" >\n\n                    </div>\n\n                  </div>\n\n                  <div className=\"row\">\n\n                    <br/>\n\n                    <div style={{height: \"335px\"}} className=\"table-responsive\">\n                      <Table responsive hover>\n                        <thead style={{position: \"sticky\", top: 0}}>\n                        <tr>\n                          <th>Transaction ID</th>\n                          <th>Created On</th>\n                          <th>Mode Of Payment</th>\n                          <th>Date of Payment</th>\n                          <th>Amount</th>\n                          <th>Type</th>\n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        {accountInfo.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((item, index) => (\n                          <tr key={index}>\n                            <td>{item.id}</td>\n                            <td>{item.date.split(\"T\")[0]}</td>\n                            <td>{item.modeOfPayment}</td>\n                            <td>{item.dateOfPayment.split(\"T\")[0]}</td>\n                            {\n                              item.transactionType === \"Deposit\" ?\n                                <td style={{color: 'green'}}>{convert(item.amount)}</td>\n                                :\n                                <td style={{color: 'red'}}>{convert(item.amount)}</td>\n                            }\n                            {\n                              item.transactionType === \"Deposit\" ?\n                                <td><span className=\"badge bg-success ms-auto\"> {item.transactionType} </span></td>\n                                :\n                                <td><span className=\"badge bg-danger ms-auto\"> {item.transactionType} </span></td>\n\n                            }\n                          </tr>\n                        ))\n                        }\n                        </tbody>\n\n                      </Table>\n\n                    </div>\n\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-sm me-2\" style={{fontSize: '18px', border: 'none'}} onClick={handlePrevPage}\n                              disabled={currentPage === 1}>\n                        &laquo;\n                      </button>\n\n                      {pageNumbers.map((number) => (\n                        <button key={number}\n                                className={`btn btn-sm ${currentPage === number ? 'btn-success' : 'btn-light'}`}\n                                onClick={() => handleClick(number)}>\n                          {number}\n                        </button>\n                      ))}\n\n                      <button className=\"btn btn-sm ms-2\" style={{fontSize: '18px', border: 'none'}} onClick={handleNextPage}\n                              disabled={currentPage === totalPages}>\n                        &raquo;\n                        {/*<cilArrowRight/>*/}\n                      </button>\n                    </div>\n                  </div>\n\n                </div>\n              </CRow>\n            </CCardBody>\n          </CCard>\n\n          <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Add Payment</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"mop\">Mode of Payment</label>\n\n                  <select {...register('mop', {required: true})} className=\"form-control\" id=\"mop\">\n                    <option value=\"\"> Choose Mode of Payment</option>\n                    <option value=\"Credit_Card\"> Credit Card</option>\n                    <option value=\"Debit_Card\">Debit Card</option>\n                    <option value=\"Net_Banking\">Net Banking</option>\n                    <option value=\"UPI\">UPI</option>\n                  </select>\n\n                  {errors.mop && <p className='text-danger'>This is a required field.</p>}\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <input {...register('amount', {required: true})} pattern = \"[0-9]{1,5}\" placeholder=\"Enter Amount\" type=\"text\"\n                         id=\"amount\"\n                         className=\"form-control\"/>\n\n                  {errors.amount && <p className='text-danger'>This is a required field.</p>}\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"date\">Date of Payment</label>\n                  <input {...register('date', {required: true})} placeholder=\"Date of Payment\" type=\"date\" id=\"date\"\n                         className=\"form-control\"/>\n\n                  {errors.date && <p className='text-danger'>This is a required field.</p>}\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"type\">Transaction Type</label>\n\n                  <select {...register('type', {required: true})} className=\"form-control\" id=\"type\">\n                    <option value=\"\"> Transaction Type</option>\n                    <option value=\"Deposit\">Deposit</option>\n                    <option value=\"Withdraw\">Withdraw</option>\n                  </select>\n\n\n                  {errors.type && <p className='text-danger'>This is a required field.</p>}\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"Remarks\">Remarks</label>\n                  <textarea {...register('Remarks', {required: true})} placeholder=\"Remarks\" id=\"Remarks\"\n                            className=\"form-control\">\n                </textarea>\n\n                  {errors.Remarks && <p className='text-danger'>This is a required field.</p>}\n                </div>\n\n                <hr/>\n\n                <div className=\"mb d-flex justify-content-between align-items-center\">\n                  <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                  </Button>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"ml-auto\">\n                    Add\n                  </Button>\n                </div>\n\n\n              </form>\n\n            </Modal.Body>\n\n            {/*<Modal.Footer>*/}\n            {/*  <Button variant=\"secondary\" onClick={handleClose}>*/}\n            {/*    Close*/}\n            {/*  </Button>*/}\n            {/*  <Button variant=\"primary\" onSubmit={handleSubmit(onSubmit)} >*/}\n            {/*    Save Changes*/}\n            {/*  </Button>*/}\n            {/*</Modal.Footer>*/}\n\n          </Modal>\n        </>}\n      </>\n    )\n}\n\nexport default SymboAccount;\n"],"names":["CanvasJSReact","CanvasJSChart","SymboAccount","loader","setLoader","useState","useEffect","adminShowAllSymboAccountInfo","adminShowSymboBalance","accountInfo","setAccountInfo","totalBalance","setTotalBalance","convert","x","lastThree","toString","substring","length","otherNumbers","replace","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","data","recordset","catch","e","console","log","final_amount","register","handleSubmit","reset","formState","errors","useForm","show","setShow","handleClose","currentPage","setCurrentPage","totalPages","Math","ceil","pageNumbers","startPage","floor","maxButtonsToShow","max","endPage","min","i","push","_jsx","_Fragment","children","className","_jsxs","CCard","CCardBody","CRow","style","textAlign","CountUp","start","end","Button","variant","onClick","handleShow","height","Table","responsive","hover","position","top","slice","map","item","index","id","date","split","modeOfPayment","dateOfPayment","transactionType","color","amount","fontSize","border","handlePrevPage","prevPage","disabled","number","handleClick","handleNextPage","Modal","onHide","centered","Header","closeButton","Title","Body","onSubmit","Param","post","error","successToast","message","errorToast","htmlFor","required","value","mop","pattern","placeholder","type","Remarks"],"sourceRoot":""}