{"version":3,"file":"static/js/1612.36f7f0e5.chunk.js","mappings":"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","sources":["views/Demo/Graph.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useForm} from \"react-hook-form\";\nimport CanvasJSReact from '@canvasjs/react-charts';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport axios from \"axios\";\nimport {ipAddress, getCookieValue , tokenName} from \"../../utils/Common\";\nimport Form from 'react-bootstrap/Form';\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nfunction Graph() {\n  const [weekSelected, setWeekSelected] = useState(true);\n  const [monthSelected, setMonthSelected] = useState(false);\n  const [yearSelected, setYearSelected] = useState(false);\n  const [dropdown, setDropdown] = useState(\"weeks\");\n  const [yearDropdown, setYearDropdown] = useState(new Date().getFullYear());\n  const [graphTitle, setGraphTitle] = useState(\"Weeks\");\n\n\n  useEffect(() => {\n    // You can perform any additional setup or cleanup here if needed\n    getWeekGraph(new Date().getMonth());\n  }, []);\n\n  let [options, setOptions] = useState({\n    animationEnabled: true,\n    exportEnabled: true,\n    theme: \"light2\",\n    title: {\n      text: \"Number of Insurance\"\n    },\n    axisY: {\n      includeZero: true,\n      interval: 50, // Set interval to 50\n      minimum: 0,   // Set minimum value\n      maximum: 200   // Set maximum value\n    },\n    axisX: {\n      title: \"Weeks\",\n      interval: 1\n    },\n    data: [{\n      type: \"column\",\n      indexLabelFontColor: \"#5A5757\",\n      indexLabelPlacement: \"outside\",\n      dataPoints: [\n        {label: \"Week 1\", y: 71},\n        {label: \"Week 2\", y: 40},\n        {label: \"Week 3\", y: 69},\n        {label: \"Week 4\", y: 88},\n      ]\n    }]\n  })\n\n  function checkRadioButton(action) {\n    setDropdown(action)\n    if (action === \"weeks\") {\n      setWeekSelected(true)\n      setMonthSelected(false)\n      setYearSelected(false)\n      getCheckedRadioButton(\"weeks\")\n    } else if(action === \"months\") {\n      setMonthSelected(true)\n      setWeekSelected(false)\n      setYearSelected(false)\n      getCheckedRadioButton(\"months\")\n    } else {\n      setYearSelected(true)\n      setMonthSelected(false)\n      setWeekSelected(false)\n    }\n  }\n\n  function getWeekGraph(month) {\n    // console.log(month)\n    // console.log(dropdown)\n    let data = {\"param1\": dropdown, \"param2\": month, \"param3\": yearDropdown};\n    // console.log(data);\n    // console.log(getCookieValue(tokenName))\n    let token = getCookieValue(tokenName);\n\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    }).then((response) => {\n      // console.log(response.data.message);\n\n      const newOptions = {\n        ...options,\n        data: [{\n          ...options.data[0],\n          dataPoints: response.data.message,\n        }],\n      };\n      // setGraphTitle(\"Weeks\");\n      setOptions(newOptions)\n    }).catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  function getMonthsGraph(year) {\n    console.log(\"in month graph year\")\n    let data = {\"param1\": dropdown, \"param2\": \"\", \"param3\": year};\n    console.log(data);\n    let token = getCookieValue(tokenName);\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Months\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  function getCheckedRadioButton(action) {\n    let data\n    let token = getCookieValue(tokenName);\n    if (action === \"weeks\") {\n      data = {\"param1\": action, \"param2\": new Date().getMonth(), \"param3\": new Date().getFullYear()};\n    } else if (action === \"months\") {\n      data = {\"param1\": action, \"param2\": \"\", \"param3\": new Date().getFullYear()};\n    }\n    console.log(\"in month graph year\")\n    // let data = {\"param1\": action , \"param2\": \"\" , \"param3\": new Date().getFullYear()};\n    console.log(data);\n\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          axisX: {\n            title: action === \"weeks\" ? \"Weeks\" : \"Months\",\n            interval: 1\n          },\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Months\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  return (\n    <CCard className=\"mb-4\">\n      <CCardBody>\n        <CRow>\n    <div className=\"table-responsive px-3 \">\n\n      <div className=\"row bg-light py-2 mb-3\">\n        <div className=\"col-4 col-sm-1\">\n          <Form.Check\n            inline\n            name={\"action\"}\n            type=\"radio\"\n            label=\"Weeks\"\n            id=\"week\"\n            defaultChecked\n            onChange={(e) => checkRadioButton(\"weeks\")}\n          />\n        </div>\n        <div className=\"col-4 col-sm-1\">\n          <Form.Check\n            inline\n            name={\"action\"}\n            type=\"radio\"\n            label=\"Months\"\n            id=\"months\"\n            onChange={(e) => checkRadioButton(\"months\")}\n          />\n        </div>\n        <div className=\"col-4 col-sm-1\">\n          <Form.Check\n            inline\n            name={\"action\"}\n            type=\"radio\"\n            label=\"Years\"\n            id=\"years\"\n            disabled={\"true\"}\n            onChange={(e) => checkRadioButton(\"years\")}\n          />\n        </div>\n\n        {weekSelected &&\n          <div className=\"col-sm-12 row\">\n            <div className=\"col-6\">\n              <span>Select Year</span>\n              <select className=\"form-control\"\n                      defaultValue={new Date().getFullYear()}\n                      onChange={(e) => setYearDropdown(e.target.value)}>\n                {/*<option >Select Month</option>*/}\n                {[2023, 2024, 2025, 2026].map(x =>\n                  <option key={x} value={x}>{x}</option>\n                )}\n              </select>\n            </div>\n\n            <div className=\"col-6\">\n              <span>Select Month</span>\n              <select className=\"form-control\"\n                      defaultValue={new Date().getMonth()}\n                      onChange={(e) => getWeekGraph(e.target.value)}>\n                {/*<option >Select Month</option>*/}\n                <option value={0}>January</option>\n                <option value={1}>February</option>\n                <option value={2}>March</option>\n                <option value={3}>April</option>\n                <option value={4}>May</option>\n                <option value={5}>June</option>\n                <option value={6}>July</option>\n                <option value={7}>August</option>\n                <option value={8}>September</option>\n                <option value={9}>October</option>\n                <option value={10}>November</option>\n                <option value={11}>December</option>\n              </select>\n            </div>\n            <br/>\n          </div>\n        }\n\n        {monthSelected &&\n          <div className=\"col-sm-12\">\n            <span>Select Year</span>\n            <select className=\"form-control\"\n                    defaultValue={new Date().getFullYear()}\n                    onChange={(e) => getMonthsGraph(e.target.value)}>\n              {/*<option >Select Month</option>*/}\n              {[2023, 2024, 2025, 2026].map(x =>\n                <option key={x} value={x}>{x}</option>\n              )}\n            </select>\n          </div>\n        }\n      </div>\n\n      <div className=\"row\">\n        {/*{yearSelected &&*/}\n        {/*  <select className=\"form-control\"*/}\n        {/*          defaultValue={new Date().getMonth()}*/}\n        {/*          onChange={(e) => getWeekGraph(e.target.value)}>*/}\n        {/*    <option >Select Month</option>*/}\n        {/*  </select>*/}\n        {/*}*/}\n        <br/>\n        {/*<hr/>*/}\n\n\n        <div>\n          <CanvasJSChart options={options}/>\n        </div>\n      </div>\n\n    </div>\n        </CRow>\n      </CCardBody>\n    </CCard>\n  );\n\n}\n\nexport default Graph\n"],"names":["CanvasJSChart","CanvasJSReact","weekSelected","setWeekSelected","useState","monthSelected","setMonthSelected","yearSelected","setYearSelected","dropdown","setDropdown","yearDropdown","setYearDropdown","Date","getFullYear","graphTitle","setGraphTitle","useEffect","getWeekGraph","getMonth","options","setOptions","animationEnabled","exportEnabled","theme","title","text","axisY","includeZero","interval","minimum","maximum","axisX","data","type","indexLabelFontColor","indexLabelPlacement","dataPoints","label","y","checkRadioButton","action","getCheckedRadioButton","month","token","getCookieValue","tokenName","axios","post","ipAddress","headers","concat","then","response","newOptions","message","catch","e","console","log","_jsx","CCard","className","children","CCardBody","CRow","_jsxs","Form","Check","inline","name","id","defaultChecked","onChange","disabled","defaultValue","target","value","map","x","year","getMonthsGraph"],"sourceRoot":""}