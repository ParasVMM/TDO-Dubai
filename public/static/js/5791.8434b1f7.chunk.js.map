{"version":3,"file":"static/js/5791.8434b1f7.chunk.js","mappings":"+RA2FA,QAnFA,YAEEA,EAAAA,EAAAA,YAAU,MAMV,WACE,IAAIC,GAAQC,EAAAA,EAAAA,IAAeC,EAAAA,IAE3BC,EAAAA,EAAMC,IAAIC,EAAAA,GAAY,uBAAwB,CAC5CC,QAAS,CACP,cAAgB,UAADC,OAAYP,GAC3B,aAAgB,sBAGjBQ,MAAMC,IAELC,EAAgBD,EAASE,KAAKC,WAC9BC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUP,EAASE,KAAKC,WAAW,IACzEK,OAAMC,IACTC,QAAQC,IAAIF,EAAE,GAElB,CArBEG,EAA4B,GAC3B,IAEH,MAAOC,EAAcZ,IAAmBa,EAAAA,EAAAA,UAAS,IA8BjD,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,UAAU,OAAMF,UACrBG,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAJ,SAAA,EACRG,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAAAL,SAAA,EAACG,EAAAA,EAAAA,MAAA,UAAAH,SAAA,CAAQ,KAACF,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,MAAO,EAAGC,IAAKZ,EAAaa,SAAS,uBAClEX,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sBACNF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,eAAeQ,KAAK,OAAOC,QAAUnB,GAjBhE,SAA0BoB,GACxB,MAAM1B,EAAYG,KAAKwB,MAAM1B,aAAa2B,QAAQ,cAClD,GAAIF,EAAW,CACb,MAAMG,EAAW7B,EAAU8B,QAAOC,GAASA,EAAMC,UAAUC,cAAcC,SAASR,EAAUO,iBAC5FnC,EAAgB+B,EAClB,MACE/B,EAAgBE,EAEpB,CASsEmC,CAAiB7B,EAAE8B,OAAOC,aAGxFzB,EAAAA,EAAAA,KAAA,OAAK0B,MAAO,CAACC,OAAQ,SAAUvB,UAAU,mBAAkBF,UACzDG,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CAACC,YAAU,EAACC,OAAK,EAAA5B,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAO0B,MAAO,CAACK,SAAU,SAAUC,IAAK,GAAG9B,UAC3CG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAINF,EAAAA,EAAAA,KAAA,SAAAE,UACa,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAca,QAAS,GAAKb,EAAamC,KAAI,CAACC,EAAMC,KACnD9B,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgC,EAAKd,aACVpB,EAAAA,EAAAA,KAAA,MAAAE,SAAKgC,EAAKE,YACVpC,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,0BAAyBF,SAAC,kBAC9CF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACC,QAAQ,OAAOC,KAAM,KAAMb,MAAO,CAACc,MAAO,SAC1CC,UAAU,EAAKvC,SAC1B,gBANMiC,kBAsBzB,C","sources":["views/dashboard/AdminShowAllBlockedAgents.js"],"sourcesContent":["import {CCard, CCardBody, CCardHeader} from \"@coreui/react\";\nimport CountUp from \"react-countup\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useEffect, useState} from \"react\";\nimport {getCookieValue, ipAddress, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\n\nfunction AdminShowAllBlockedAgents() {\n\n  useEffect(() => {\n    adminShowAllApprovedAgents();\n  }, []);\n\n  const [activeAgents, setActiveAgents] = useState([]);\n\n  function adminShowAllApprovedAgents() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/inActiveAgents\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // console.log(response.data.recordset);\n        setActiveAgents(response.data.recordset);\n        localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  function showSearchResult(typedword) {\n    const recordset = JSON.parse(localStorage.getItem(\"recordset\"));\n    if (typedword) {\n      const filtered = recordset.filter(agent => agent.FirstName.toLowerCase().includes(typedword.toLowerCase()));\n      setActiveAgents(filtered);\n    } else {\n      setActiveAgents(recordset)\n    }\n  }\n\n  return(\n    <>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CCardHeader><strong> <CountUp start={0} end={activeAgents.length}/> InActive Agents</strong>\n            <br/>\n            <span>Search By Name :</span>\n            <input className=\"form-control\" type=\"text\" onKeyUp={(e) => showSearchResult(e.target.value)}></input>\n          </CCardHeader>\n\n          <div style={{height: \"335px\"}} className=\"table-responsive\">\n            <Table responsive hover>\n              <thead style={{position: \"sticky\", top: 0}}>\n              <tr>\n                <th>Agent Name</th>\n                <th>Agent Email</th>\n                <th>Current Status</th>\n                <th>Change Status</th>\n              </tr>\n              </thead>\n\n              <tbody>\n              {activeAgents?.length > 0 && activeAgents.map((item, index) => (\n                <tr key={index}>\n                  <td>{item.FirstName}</td>\n                  <td>{item.UserName}</td>\n                  <td><span className=\"badge bg-danger ms-auto\"> InActive </span></td>\n                  <td><Button variant=\"info\" size={\"sm\"} style={{color: 'white'}}\n                              disabled={true}\n                  >Approve</Button>\n                  </td>\n                </tr>\n              ))\n              }\n\n              </tbody>\n\n            </Table>\n\n          </div>\n\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default AdminShowAllBlockedAgents\n"],"names":["useEffect","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","setActiveAgents","data","recordset","localStorage","setItem","JSON","stringify","catch","e","console","log","adminShowAllApprovedAgents","activeAgents","useState","_jsx","_Fragment","children","CCard","className","_jsxs","CCardBody","CCardHeader","CountUp","start","end","length","type","onKeyUp","typedword","parse","getItem","filtered","filter","agent","FirstName","toLowerCase","includes","showSearchResult","target","value","style","height","Table","responsive","hover","position","top","map","item","index","UserName","Button","variant","size","color","disabled"],"sourceRoot":""}