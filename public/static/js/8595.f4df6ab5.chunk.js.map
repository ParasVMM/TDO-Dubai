{"version":3,"file":"static/js/8595.f4df6ab5.chunk.js","mappings":"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","sources":["views/dashboard/FlightsViewMarkup.js"],"sourcesContent":["import {CCard, CCardBody, CRow} from \"@coreui/react\";\nimport CountUp from \"react-countup\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport React, {useEffect, useState} from \"react\";\nimport {getCookieValue, ipAddress, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport plus from \"../../assets/images/plus.png\";\nimport '../../utils/Orange.css';\n\nconst FlightsViewMarkup = () => {\n  const [markupData, setMarkupData] = useState([]);\n\n  const [expandedRows, setExpandedRows] = useState({});\n  let [loader, setLoader] = useState(true)\n  const [showData, setShowData] = useState(false);\n\n  const toggleExpand = (id) => {\n    setExpandedRows((prevState) => ({\n      ...prevState,\n      [id]: !prevState[id]\n    }));\n  };\n\n  useEffect(() => {\n    getMarkupData();\n  }, []);\n\n  function getMarkupData() {\n    let token = getCookieValue(tokenName);\n    // console.log(token)\n    axios.get(ipAddress + \"admin/markupPlans\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    }).then((response) => {\n      console.log(response.data);\n      setMarkupData(response.data.recordset);\n      setLoader(false)\n    }).catch(e => {\n      console.log(e)\n      setLoader(false)\n    })\n  }\n\n  return (\n    <>\n      {\n        loader ?\n          <div>\n            <span className=\"spinner-border text-primary\"></span>\n          </div>\n          :\n          <>\n            <CCard className=\"mb-4\">\n              <CCardBody>\n                <CRow>\n                  <div className=\"table-responsive px-3 \">\n                    <h2 style={{textAlign: 'center'}}><b>Already Added Markups : </b></h2>\n                    <hr/>\n                    <div className=\"bg-light py-2 mb-3\">\n                      <Link to=\"/flightmarkups\">\n                        <Button variant=\"primary\">\n                          Add New Markups\n                        </Button>\n                      </Link>\n                      <div className=\"row\">\n\n                      </div>\n\n                    </div>\n\n                    <div className=\"row\">\n\n                      <br/>\n\n                      <div style={{height: \"335px\"}} className=\"table-responsive\">\n                        <Table responsive hover>\n                          <thead style={{position: \"sticky\", top: 0}}>\n                          <tr>\n                            <th>ID</th>\n                            <th>Plan Name</th>\n                            {/*<th>Carrier</th>*/}\n                            {/*<th>Fare Type</th>*/}\n                            {/*<th>Supplier</th>*/}\n                            <th>Type</th>\n                            <th className=\"text-center\">Markup Value</th>\n                            <th className=\"text-center\">Cancellation Charge</th>\n                            <th className=\"text-center\">Rescheduling Charge</th>\n                          </tr>\n                          </thead>\n\n                          <tbody>\n                          {/*{markupData?.length > 0 && markupData.map((item, index) => (*/}\n                          {markupData?.length > 0 && Object.values(\n                            markupData.reduce((acc, item) => {\n                              if (!acc[item.name]) {\n                                acc[item.name] = [];\n                              }\n                              acc[item.name].push(item);\n                              return acc;\n                            }, {})\n                          ).map((group, index) => (\n                            <React.Fragment key={index}>\n                              <tr key={index}>\n                                <td>{index + 1}</td>\n                                <td className=\"expandable name\" onClick={() => toggleExpand(group[0].name)}\n                                    style={{color: \"blue\", fontSize: \"15px\"}}><img src={plus}\n                                                                                   alt=\"Icon\"/> {group[0].name}\n                                </td>\n                                {/*<td>{group[0].carrierName}</td>*/}\n                                {/*<td>{group[0].fare_type}</td>*/}\n                                {/*<td>{group[0].supplier}</td>*/}\n                                <td>{group[0].type}</td>\n                                <td className=\"text-center\">{group[0].markup_value}</td>\n                                <td className=\"text-center\">{group[0].cancellation_charges}</td>\n                                <td className=\"text-center\">{group[0].rescheduling_charges}</td>\n                              </tr>\n\n                              {expandedRows[group[0].name] &&\n                                group.map((item, idx) => (\n\n                                  <tr key={`expandedRow-${item.name}-${idx}`}>\n                                    <td colSpan=\"7\" style={{paddingLeft: \"90px\"}} className=\"gray-row\">\n                                      <div className=\"row\">\n\n                                        <div className=\"col-sm-3\">\n                                          <b>Carrier Name :</b> {item.carrierName}\n                                        </div>\n\n                                        <div className=\"col-sm-3\">\n                                          <b>Fare Type :</b> {item.fareType}\n                                        </div>\n\n                                        <div className=\"col-sm-3\">\n                                          <b>Supplier Name :</b> {item.supplier}\n                                        </div>\n\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n\n                            </React.Fragment>\n                          ))\n                          }\n\n                          </tbody>\n\n\n                        </Table>\n\n                      </div>\n\n                    </div>\n\n                  </div>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          </>\n      }\n    </>\n  )\n}\n\nexport default FlightsViewMarkup\n"],"names":["FlightsViewMarkup","markupData","setMarkupData","useState","expandedRows","setExpandedRows","loader","setLoader","showData","setShowData","useEffect","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","console","log","data","recordset","catch","e","getMarkupData","_jsx","_Fragment","children","className","CCard","CCardBody","CRow","_jsxs","style","textAlign","Link","to","Button","variant","height","Table","responsive","hover","position","top","length","Object","values","reduce","acc","item","name","push","map","group","index","React","onClick","toggleExpand","id","prevState","color","fontSize","src","plus","alt","type","markup_value","cancellation_charges","rescheduling_charges","idx","colSpan","paddingLeft","carrierName","fareType","supplier"],"sourceRoot":""}