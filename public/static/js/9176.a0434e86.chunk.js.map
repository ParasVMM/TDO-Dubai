{"version":3,"file":"static/js/9176.a0434e86.chunk.js","mappings":"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","sources":["views/widgets/WidgetsDropdownInsuranceStats.js","views/Demo/Graph.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport {cilArrowBottom, cilArrowTop, cilFlightTakeoff, cilNotes, cilOptions} from '@coreui/icons'\nimport axios from \"axios\";\nimport {ipAddress , getCookieValue , tokenName} from \"../../utils/Common\";\nimport CountUp from \"react-countup\";\nimport Button from \"react-bootstrap/Button\";\n\n\nconst WidgetsDropdownInsuranceStats = () => {\n\n  const [numberOfInsurance, setNumberOfInsurance] = useState(0);\n  const [revinueFromInsurance, setRevinueFromInsurance] = useState(0);\n  const [numberOfAgentsInInsurance, setNumberOfAgentsInInsurance] = useState(0);\n  const [numberOfFlights, setNumberOfFlights] = useState(0);\n  const [revinueFromFlights, setRevinueFromFlights] = useState(0);\n  const [totalPublishFare, setTotalPublishFare] = useState(0);\n\n  function getNumberOfInsurance() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/insuranceCount\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if(!response.data.error)\n        {\n          setNumberOfInsurance(response.data.message[0].totalCount);\n        }\n      }).catch(e =>{\n      console.log(e)\n    })\n  }\n\n  function getRevinueFromInsurance() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/totalRevenueSpent\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n        // console.log(response);\n        if(!response.data.error)\n        {\n          setRevinueFromInsurance(response.data.recordset[0].totalAmt);\n        }\n\n      }).catch(e =>{\n      console.log(e)\n    })\n  }\n\n  function getNumberOfAgentsInInsurance() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/totalAgentCount\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if(!response.data.error)\n        {\n          setNumberOfAgentsInInsurance(response.data.recordset[0].totalAgents);\n        }\n      })\n  }\n\n\n\n  useEffect(() => {\n    getNumberOfInsurance();\n    getRevinueFromInsurance();\n    // getNumberOfAgentsInInsurance();\n  }, []);\n\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              <CIcon icon={cilNotes} style={{height: '28px'}} customClassName=\"nav-icon\" />\n              {' '}<CountUp start={0} end={numberOfInsurance}  useIndianSeparators={true} />\n              {/*{numberOfInsurance}{' '}*/}\n              {/*<span className=\"fs-6 fw-normal\">*/}\n              {/*  (-12.4% <CIcon icon={cilArrowBottom} />)*/}\n              {/*</span>*/}\n            </>\n          }\n          title=\"Total Insurance\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n                events: ['none'],\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {'₹ '}<CountUp start={0} end={revinueFromInsurance} useIndianSeparators={true}/>\n              {/*{'₹ '}{revinueFromInsurance}*/}\n              {/*$6.200{' '}*/}\n              {/*<span className=\"fs-6 fw-normal\">*/}\n              {/*  (40.9% <CIcon icon={cilArrowTop} />)*/}\n              {/*</span>*/}\n            </>\n          }\n          title=\"Revenue From Insurance\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n                events: ['none'],\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdownInsuranceStats\n","import React, {useEffect, useState} from 'react';\nimport {useForm} from \"react-hook-form\";\nimport CanvasJSReact from '@canvasjs/react-charts';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport axios from \"axios\";\nimport {ipAddress, getCookieValue , tokenName} from \"../../utils/Common\";\nimport Form from 'react-bootstrap/Form';\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport WidgetsDropdownInsuranceSats from \"../widgets/WidgetsDropdownInsuranceStats\";\n\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nfunction Graph() {\n  const [weekSelected, setWeekSelected] = useState(true);\n  const [monthSelected, setMonthSelected] = useState(false);\n  const [yearSelected, setYearSelected] = useState(false);\n  const [dropdown, setDropdown] = useState(\"weeks\");\n  const [yearDropdown, setYearDropdown] = useState(new Date().getFullYear());\n  const [graphTitle, setGraphTitle] = useState(\"Weeks\");\n\n\n  useEffect(() => {\n    // You can perform any additional setup or cleanup here if needed\n    getWeekGraph(new Date().getMonth());\n  }, []);\n\n  let [options, setOptions] = useState({\n    animationEnabled: true,\n    exportEnabled: true,\n    theme: \"light2\",\n    title: {\n      text: \"Number of Insurance\"\n    },\n    axisY: {\n      includeZero: true,\n      interval: 50, // Set interval to 50\n      minimum: 0,   // Set minimum value\n      maximum: 200   // Set maximum value\n    },\n    axisX: {\n      title: \"Weeks\",\n      interval: 1\n    },\n    data: [{\n      type: \"column\",\n      indexLabelFontColor: \"#5A5757\",\n      indexLabelPlacement: \"outside\",\n      dataPoints: [\n        {label: \"Week 1\", y: 71},\n        {label: \"Week 2\", y: 40},\n        {label: \"Week 3\", y: 69},\n        {label: \"Week 4\", y: 88},\n      ]\n    }]\n  })\n\n  function checkRadioButton(action) {\n    setDropdown(action)\n    if (action === \"weeks\") {\n      setWeekSelected(true)\n      setMonthSelected(false)\n      setYearSelected(false)\n      getCheckedRadioButton(\"weeks\")\n    } else if(action === \"months\") {\n      setMonthSelected(true)\n      setWeekSelected(false)\n      setYearSelected(false)\n      getCheckedRadioButton(\"months\")\n    } else {\n      setYearSelected(true)\n      setMonthSelected(false)\n      setWeekSelected(false)\n    }\n  }\n\n  function getWeekGraph(month) {\n    console.log(month)\n    // console.log(dropdown)\n    let data = {\"param1\": dropdown, \"param2\": month, \"param3\": yearDropdown};\n    // console.log(data);\n    // console.log(getCookieValue(tokenName))\n    let token = getCookieValue(tokenName);\n\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    }).then((response) => {\n      console.log(response.data.message);\n\n      const newOptions = {\n        ...options,\n        axisX: {\n          title: \"Weeks\",\n          // interval: 1\n        },\n        data: [{\n          ...options.data[0],\n          dataPoints: response.data.message,\n        }],\n      };\n      // setGraphTitle(\"Weeks\");\n      setOptions(newOptions)\n    }).catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  function getMonthsGraph(year) {\n    console.log(\"in month graph year\")\n    let data = {\"param1\": dropdown, \"param2\": \"\", \"param3\": year};\n    console.log(data);\n    let token = getCookieValue(tokenName);\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          axisX: {\n            title: \"Months\",\n            // interval: 1\n          },\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Months\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  function getCheckedRadioButton(action) {\n    let data\n    let token = getCookieValue(tokenName);\n    if (action === \"weeks\") {\n      data = {\"param1\": action, \"param2\": new Date().getMonth(), \"param3\": new Date().getFullYear()};\n    } else if (action === \"months\") {\n      data = {\"param1\": action, \"param2\": \"\", \"param3\": new Date().getFullYear()};\n    }\n    console.log(\"in month graph year\")\n    // let data = {\"param1\": action , \"param2\": \"\" , \"param3\": new Date().getFullYear()};\n    console.log(data);\n\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          axisX: {\n            title: action === \"weeks\" ? \"Weeks\" : \"Months\",\n            // interval: 1\n          },\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Months\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  return (\n    <CCard className=\"mb-4\">\n      <CCardBody>\n        <WidgetsDropdownInsuranceSats/>\n        <CRow>\n    <div className=\"table-responsive px-3 \">\n\n      <div className=\"row bg-light py-2 mb-3\">\n        <div className=\"col-4 col-sm-1\">\n          <Form.Check\n            inline\n            name={\"action\"}\n            type=\"radio\"\n            label=\"Weeks\"\n            id=\"week\"\n            defaultChecked\n            onChange={(e) => checkRadioButton(\"weeks\")}\n          />\n        </div>\n        <div className=\"col-4 col-sm-1\">\n          <Form.Check\n            inline\n            name={\"action\"}\n            type=\"radio\"\n            label=\"Months\"\n            id=\"months\"\n            onChange={(e) => checkRadioButton(\"months\")}\n          />\n        </div>\n        <div className=\"col-4 col-sm-1\">\n          <Form.Check\n            inline\n            name={\"action\"}\n            type=\"radio\"\n            label=\"Years\"\n            id=\"years\"\n            disabled={\"true\"}\n            onChange={(e) => checkRadioButton(\"years\")}\n          />\n        </div>\n\n        {weekSelected &&\n          <div className=\"col-sm-12 row\">\n            <div className=\"col-6\">\n              <span>Select Year</span>\n              <select className=\"form-control\"\n                      defaultValue={new Date().getFullYear()}\n                      onChange={(e) => setYearDropdown(e.target.value)}>\n                {/*<option >Select Month</option>*/}\n                {[2023, 2024, 2025, 2026].map(x =>\n                  <option key={x} value={x}>{x}</option>\n                )}\n              </select>\n            </div>\n\n            <div className=\"col-6\">\n              <span>Select Month</span>\n              <select className=\"form-control\"\n                      defaultValue={new Date().getMonth()}\n                      onChange={(e) => getWeekGraph(e.target.value)}>\n                {/*<option >Select Month</option>*/}\n                <option value={0}>January</option>\n                <option value={1}>February</option>\n                <option value={2}>March</option>\n                <option value={3}>April</option>\n                <option value={4}>May</option>\n                <option value={5}>June</option>\n                <option value={6}>July</option>\n                <option value={7}>August</option>\n                <option value={8}>September</option>\n                <option value={9}>October</option>\n                <option value={10}>November</option>\n                <option value={11}>December</option>\n              </select>\n            </div>\n            <br/>\n          </div>\n        }\n\n        {monthSelected &&\n          <div className=\"col-sm-12\">\n            <span>Select Year</span>\n            <select className=\"form-control\"\n                    defaultValue={new Date().getFullYear()}\n                    onChange={(e) => getMonthsGraph(e.target.value)}>\n              {/*<option >Select Month</option>*/}\n              {[2023, 2024, 2025, 2026].map(x =>\n                <option key={x} value={x}>{x}</option>\n              )}\n            </select>\n          </div>\n        }\n      </div>\n\n      <div className=\"row\">\n        {/*{yearSelected &&*/}\n        {/*  <select className=\"form-control\"*/}\n        {/*          defaultValue={new Date().getMonth()}*/}\n        {/*          onChange={(e) => getWeekGraph(e.target.value)}>*/}\n        {/*    <option >Select Month</option>*/}\n        {/*  </select>*/}\n        {/*}*/}\n        <br/>\n        {/*<hr/>*/}\n\n\n        <div>\n          <CanvasJSChart options={options}/>\n        </div>\n      </div>\n\n    </div>\n        </CRow>\n      </CCardBody>\n    </CCard>\n  );\n\n}\n\nexport default Graph\n"],"names":["WidgetsDropdownInsuranceStats","numberOfInsurance","setNumberOfInsurance","useState","revinueFromInsurance","setRevinueFromInsurance","numberOfAgentsInInsurance","setNumberOfAgentsInInsurance","numberOfFlights","setNumberOfFlights","revinueFromFlights","setRevinueFromFlights","totalPublishFare","setTotalPublishFare","useEffect","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","data","error","message","totalCount","catch","e","console","log","getNumberOfInsurance","recordset","totalAmt","getRevinueFromInsurance","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsA","className","color","value","_Fragment","CIcon","icon","cilNotes","style","height","customClassName","CountUp","start","end","useIndianSeparators","title","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","chart","CChartLine","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","events","CanvasJSChart","CanvasJSReact","weekSelected","setWeekSelected","monthSelected","setMonthSelected","yearSelected","setYearSelected","dropdown","setDropdown","yearDropdown","setYearDropdown","Date","getFullYear","graphTitle","setGraphTitle","getWeekGraph","getMonth","setOptions","animationEnabled","exportEnabled","theme","text","axisY","includeZero","interval","minimum","maximum","axisX","type","indexLabelFontColor","indexLabelPlacement","dataPoints","checkRadioButton","getCheckedRadioButton","month","post","newOptions","CCard","CCardBody","WidgetsDropdownInsuranceSats","Form","Check","inline","name","id","defaultChecked","onChange","defaultValue","target","map","year","getMonthsGraph"],"sourceRoot":""}