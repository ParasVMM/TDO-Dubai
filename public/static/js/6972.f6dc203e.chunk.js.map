{"version":3,"file":"static/js/6972.f6dc203e.chunk.js","mappings":"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","sources":["views/dashboard/accounts/wallet/WalletForm.js","views/dashboard/accounts/wallet/ManageWallet.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {CCard, CCardBody, CCardHeader} from \"@coreui/react\";\nimport {useForm} from \"react-hook-form\";\n\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../../../utils/Common\";\n\nconst WalletForm = ({agencyDetails, FetchAgency, FetchAgencyDetailsById}) => {\n  // console.log(agencyDetails)\n  const {\n    register,\n    handleSubmit,\n    formState: {errors},\n    reset\n  } = useForm()\n\n  const [btnDisabled, setBtnDisabled] = useState(false);\n\n  async function onSubmit(data) {\n    data[\"id\"] = agencyDetails.Id\n    data[\"CompanyId\"] = agencyDetails.CompanyId\n    data[\"CompanyName\"] = agencyDetails.CompanyName\n    data[\"UserName\"] = agencyDetails.UserName\n\n    try {\n      setBtnDisabled(true)\n      let token = getCookieValue(tokenName);\n\n      let url = ipAddress + \"admin/\"\n\n      if (data[\"action\"] === \"credit\") {\n        url += \"creditFromAgentWallet\"\n      } else {\n        url += \"debitFromAgentWallet\"\n      }\n\n      // if (data[\"type\"] === \"0\") {\n      //   url += \"updateAmountInWallet\"\n      // } else {\n      //   url += \"updateAmountInCreditLimit\"\n      // }\n\n      let res = await axios.post(url, data, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data)\n\n      if (res.status === 200) {\n        // console.log(res.data)\n\n        if (res.data.error) {\n          errorToast(res.data.message)\n        } else {\n          reset()\n          FetchAgency()\n          successToast(res.data.message)\n          FetchAgencyDetailsById(agencyDetails.Id)\n        }\n      }\n      setBtnDisabled(false)\n    } catch (e) {\n      errorToast(e.message)\n      setBtnDisabled(false)\n    }\n  }\n\n  return (\n    <CCard className=\"mb-4\">\n      <CCardHeader className=\"card-header-bg\">\n        <h4 className=\"mb-0 primary-color\">Wallet Details</h4>\n      </CCardHeader>\n\n      <CCardBody>\n        <div className=\"row justify-content-center py-3\">\n          <div className=\"col-md-8 border border-light rounded p-2 shadow\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                {/* Type */}\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"type\">Type : <span className=\"text-danger\">*</span></label>\n                  <select {...register(\"type\", {required: 'This field is required.'})}\n                          name=\"type\" id=\"type\" className=\"form-select\">\n                    <option value=\"\">--Please Select --</option>\n                    <option value=\"0\">Wallet</option>\n                    {/*{agencyDetails?.PaymentType === \"CASH\" ? <option value=\"0\">Deposit</option> : <>*/}\n                    {/*  <option value=\"\">--Please Select --</option>*/}\n                    {/*  <option value=\"0\">Wallet</option>*/}\n                    {/*  <option value=\"1\">Credit Limit</option>*/}\n                    {/*</>}*/}\n                  </select>\n\n                  {errors?.type && <p className='text-danger'>{errors?.type?.message}</p>}\n                </div>\n\n                {/* Action */}\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"action\">Action : <span className=\"text-danger\">*</span></label>\n                  <select {...register(\"action\", {required: 'This field is required.'})}\n                          name=\"action\" id=\"action\" className=\"form-select\">\n                    <option value=\"\">--Please Select --</option>\n                    <option value=\"debit\">Debit</option>\n                    <option value=\"credit\">Credit</option>\n                  </select>\n\n                  {errors?.action && <p className='text-danger'>{errors?.action?.message}</p>}\n                </div>\n\n                {/* Amount */}\n                <div className=\"col-md-12 mb-3\">\n                  <label htmlFor=\"amount\">Amount : <span className=\"text-danger\">*</span></label>\n                  <input type=\"text\" name=\"amount\" id=\"amount\" className=\"form-control\" autoComplete=\"off\"\n                         {...register(\"amount\", {\n                           required: 'This field is required.',\n                           pattern: {\n                             value: /^[0-9]*$/,\n                             message: \"Only numbers are allowed.\"\n                           }\n                         })}\n                  />\n\n                  {errors?.amount && <p className='text-danger'>{errors?.amount?.message}</p>}\n                </div>\n\n                {/*<div className=\"col-md-6 mb-3\">*/}\n                {/*  <label htmlFor=\"updateAmount\">Updated Amount : <span className=\"text-danger\">*</span></label>*/}\n                {/*  <input type=\"text\" name=\"updateAmount\" id=\"updateAmount\" readOnly className=\"form-control\"/>*/}\n                {/*</div>*/}\n\n                {/* Remarks */}\n                <div className=\"col-md-12 mb-3\">\n                  <label htmlFor=\"remarks\">Remarks : <span className=\"text-danger\">*</span></label>\n                  <textarea name=\"remarks\" id=\"remarks\" className=\"form-control\"\n                            {...register(\"remarks\", {required: 'This field is required.'})}/>\n\n                  {errors?.remarks && <p className='text-danger'>{errors?.remarks?.message}</p>}\n                </div>\n\n                <div className=\"col-md-12\">\n                  <button disabled={btnDisabled} className=\"btn btn-primary\">Update</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default WalletForm\n","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {CCard, CCardHeader, CCardBody, CRow} from '@coreui/react'\nimport {useForm} from \"react-hook-form\";\n\nimport WalletForm from \"./WalletForm\";\nimport {getCookieValue, ipAddress, tokenName, errorToast, successToast} from \"../../../../utils/Common\"\n\nconst ManageWallet = () => {\n  const [agency, setAgency] = useState(null)\n  const [agencyDetails, setAgencyDetails] = useState(null)\n\n  /* Fetch Active Agents */\n  async function FetchAgency() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/getActiveCompanyName\"\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data.error)\n\n      if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset)\n        setAgency(res.data.recordset)\n      }\n    } catch (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    FetchAgency().then()\n  }, []);\n\n  function ShowAgencyDetails(e) {\n    if (!e.target.value) {\n      errorToast('Please Select Agency')\n      setAgencyDetails(null)\n      return false\n    }\n\n    let agencyId = e.target.value\n    let agencyDetails = agency.filter(x => x.Id === agencyId)[0]\n    // console.log(agencyDetails)\n    setAgencyDetails(agencyDetails)\n  }\n\n  async function FetchAgencyDetailsById(id) {\n    let token = getCookieValue(tokenName);\n    let url = ipAddress + \"admin/getCompanyDetailById\"\n\n    let res = await axios.post(url, {id: id}, {\n      headers: {'Authorization': `Bearer ${token}`}\n    })\n    // console.log(res)\n\n    if (res.status === 200 && !res.data.error) {\n      // console.log(res.data)\n      // console.log(res.data.recordset)\n      // console.log(res.data.recordset[0])\n      setAgencyDetails(res.data.recordset[0])\n    }\n  }\n\n  return (\n    <>\n      {/* Search Agency */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"card-header-bg\">\n          <h4 className=\"mb-0 primary-color\">Search</h4>\n        </CCardHeader>\n\n        <CCardBody>\n          {agency && agency.length > 0 &&\n            <div className=\"row justify-content-center py-3\">\n              <div className=\"col-md-6 border border-light rounded p-2 shadow\">\n                <label htmlFor=\"agencyName\">\n                  <b>Agency Name : <span className=\"text-danger\">*</span></b>\n                </label>\n                <select onChange={ShowAgencyDetails} name=\"agencyName\" id=\"agencyName\" className=\"form-select\">\n                  <option value=\"\">--Please Select --</option>\n                  {agency?.map(x => <option key={x?.Id} value={x?.Id}>\n                      {x?.CompanyName} ({x?.CompanyId})\n                    </option>\n                  )}\n                </select>\n              </div>\n            </div>\n          }\n        </CCardBody>\n      </CCard>\n\n      {agencyDetails && agencyDetails.Id && <>\n        {/* Agency Details */}\n        <CCard className=\"mb-4\">\n          <CCardHeader className=\"card-header-bg\">\n            <h4 className=\"mb-0 primary-color\">Agency Details</h4>\n          </CCardHeader>\n          <CCardBody>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <p>Agency Name :<br/><b>{agencyDetails?.CompanyName}</b></p>\n              </div>\n\n              <div className=\"col-md-4\">\n                <p>Agency Id :<br/><b>{agencyDetails?.CompanyId}</b></p>\n              </div>\n\n              <div className=\"col-md-4\">\n                <p>\n                  Payment Type :<br/><b>{agencyDetails?.PaymentType === \"BOTH\" ?\n                  \"BOTH (Cash and Credit)\" : agencyDetails?.PaymentType}</b>\n                </p>\n              </div>\n\n              <div className=\"col-md-4\">\n                <p className=\"mb-md-0\">Total Balance :<br/><b>{agencyDetails?.TotalBalance}</b></p>\n              </div>\n\n              <div className=\"col-md-4\">\n                <p className=\"mb-md-0\">Credit Limit :<br/><b>{agencyDetails?.TotalCreditLimit}</b></p>\n              </div>\n\n              <div className=\"col-md-4\">\n                <p className=\"mb-0\">Due Amount :<br/><b>{agencyDetails?.DueAmount}</b></p>\n              </div>\n            </div>\n          </CCardBody>\n        </CCard>\n\n        {/* Wallet Details */}\n        <WalletForm\n          agencyDetails={agencyDetails}\n          FetchAgency={FetchAgency}\n          FetchAgencyDetailsById={FetchAgencyDetailsById}\n        />\n      </>}\n    </>\n  )\n}\n\nexport default ManageWallet\n"],"names":["_ref","_errors$type","_errors$action","_errors$amount","_errors$remarks","agencyDetails","FetchAgency","FetchAgencyDetailsById","register","handleSubmit","formState","errors","reset","useForm","btnDisabled","setBtnDisabled","useState","_jsxs","CCard","className","children","_jsx","CCardHeader","CCardBody","onSubmit","async","data","Id","CompanyId","CompanyName","UserName","token","getCookieValue","tokenName","url","ipAddress","res","axios","post","headers","concat","status","error","errorToast","message","successToast","e","htmlFor","required","name","id","value","type","action","autoComplete","pattern","amount","remarks","disabled","ManageWallet","agency","setAgency","setAgencyDetails","get","recordset","useEffect","then","_Fragment","length","onChange","target","agencyId","filter","x","map","PaymentType","TotalBalance","TotalCreditLimit","DueAmount","WalletForm"],"sourceRoot":""}