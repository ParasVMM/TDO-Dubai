{"version":3,"file":"static/js/5163.ccbbe162.chunk.js","mappings":"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","sources":["views/dashboard/accounts/ledger/LedgerTable.js","views/dashboard/accounts/ledger/PartnerAccountLedger.js","views/dashboard/agents/FilterComponent.js"],"sourcesContent":["import React, {useMemo} from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport FilterComponent from \"../../agents/FilterComponent\";\nimport {customStyles} from \"../../../../utils/Common\";\n\nconst LedgerTable = (props) => {\n  // console.log(props.data);\n\n  const columns = [\n    {\n      name: \"Company ID\",\n      selector: row => row.CompanyId,\n      sortable: true,\n      width: \"135px\"\n    },\n    {\n      name: \"Transaction ID\",\n      selector: row => row.TrackID,\n      sortable: true,\n      width: \"150px\"\n    },\n    {\n      name: \"Reference No\",\n      selector: row => row.ReferenceNo,\n      sortable: true,\n      width: \"150px\"\n    },\n    {\n      name: \"Service\",\n      selector: row => row.Service,\n      sortable: true,\n      width: \"250px\"\n    },\n    {\n      name: \"Debit\",\n      selector: row => row.Debit,\n      sortable: true,\n      width: \"100px\"\n    },\n    {\n      name: \"Credit\",\n      selector: row => row.Credit,\n      sortable: true,\n      width: \"100px\"\n    },\n    {\n      name: \"Balance\",\n      selector: row => row.AvailableBalance,\n      sortable: true,\n      width: \"100px\"\n    },\n    {\n      name: \"Date\",\n      selector: row => row.InsertedOn,\n      sortable: true,\n    },\n  ];\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const filteredItems = props.data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <>\n        <FilterComponent\n          onFilter={e => setFilterText(e.target.value)}\n          onClear={handleClear}\n          filterText={filterText}\n        />\n      </>\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <DataTable\n      columns={columns}\n      data={filteredItems}\n      striped\n      pagination\n      subHeader\n      subHeaderComponent={subHeaderComponent}\n      customStyles={customStyles}\n    />\n  )\n}\nexport default LedgerTable;\n","import React, {useEffect, useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport {errorToast, getCookieValue, ipAddress, tokenName} from \"../../../../utils/Common\";\nimport axios from \"axios\";\nimport LedgerTable from \"./LedgerTable\";\n\nconst PartnerAccountLedger = () => {\n  const [agency, setAgency] = useState(null);\n\n  /* Fetch Active Agents */\n  async function FetchActiveAgency() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/getActiveCompanyName\"\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data.error)\n\n      if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset)\n        setAgency(res.data.recordset)\n      }\n    } catch (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    FetchActiveAgency().then()\n  }, []);\n\n  /* ------------------------------------------ */\n\n  const {\n    register,\n    handleSubmit,\n    formState: {errors},\n    reset\n  } = useForm();\n\n  /* ------------------------------------------ */\n\n  const [ledgerInfo, setLedgerInfo] = useState(null);\n  const [btnDisabled, setBtnDisabled] = useState(false);\n\n  async function onSubmit(data) {\n    try {\n      let filterData = agency.filter(x => x.Id === data.id)[0];\n      data['CompanyId'] = filterData?.CompanyId;\n\n      setBtnDisabled(true)\n      const token = getCookieValue(tokenName);\n      const url = ipAddress + \"admin/agent-wallet-ledger\";\n\n      let res = await axios.post(url, data, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message);\n      } else if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset);\n        setLedgerInfo(res.data.recordset);\n      }\n\n      setBtnDisabled(false)\n    } catch (e) {\n      errorToast(e.message)\n      setBtnDisabled(false)\n    }\n  }\n\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"card-header-bg\">\n          <h4 className=\"mb-0 primary-color\">Partner Account Ledger</h4>\n        </CCardHeader>\n\n        <CCardBody>\n          {agency && agency.length > 0 &&\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-4 mb-3\">\n                  <label htmlFor=\"id\">Agency Name</label>\n                  <select name=\"id\" id=\"id\" className=\"form-select\"\n                          {...register(\"id\", {required: 'This field is required.'})}>\n                    <option value=\"\">--Please Select --</option>\n                    {agency?.map(x => <option key={x?.Id} value={x?.Id}>\n                        {x?.CompanyName} ({x?.CompanyId})\n                      </option>\n                    )}\n                  </select>\n\n                  {errors?.id && <p className='text-danger'>{errors?.id?.message}</p>}\n                </div>\n\n                <div className=\"col-md-4 mb-3\">\n                  <label htmlFor=\"fromDate\">From Date</label>\n                  <input type=\"date\" name=\"fromDate\" id=\"fromDate\" className=\"form-control\"\n                         {...register(\"fromDate\", {required: 'This field is required.'})}/>\n\n                  {errors?.fromDate && <p className='text-danger'>{errors?.fromDate?.message}</p>}\n                </div>\n\n                <div className=\"col-md-4 mb-3\">\n                  <label htmlFor=\"toDate\">To Date</label>\n                  <input type=\"date\" name=\"toDate\" id=\"toDate\" className=\"form-control\"\n                         {...register(\"toDate\", {required: 'This field is required.'})}/>\n\n                  {errors?.toDate && <p className='text-danger'>{errors?.toDate?.message}</p>}\n                </div>\n              </div>\n\n              <button disabled={btnDisabled} className=\"btn btn-primary px-5\">Search</button>\n            </form>\n          }\n        </CCardBody>\n      </CCard>\n\n      {ledgerInfo &&\n        <CCard className=\"mb-4\">\n          <CCardHeader className=\"card-header-bg\">\n            <h4 className=\"mb-0 primary-color\">Ledger Report</h4>\n          </CCardHeader>\n\n          <CCardBody>\n            <LedgerTable data={ledgerInfo}/>\n          </CCardBody>\n        </CCard>\n      }\n    </>\n  )\n}\nexport default PartnerAccountLedger;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.small ? 5 : undefined\n}))`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <Input\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Filter table data...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton className=\"bg-dark text-white\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n"],"names":["props","filterText","setFilterText","React","resetPaginationToggle","setResetPaginationToggle","filteredItems","data","filter","item","JSON","stringify","toLowerCase","indexOf","subHeaderComponent","useMemo","_jsx","_Fragment","children","FilterComponent","onFilter","e","target","value","onClear","handleClear","DataTable","columns","name","selector","row","CompanyId","sortable","width","TrackID","ReferenceNo","Service","Debit","Credit","AvailableBalance","InsertedOn","striped","pagination","subHeader","customStyles","PartnerAccountLedger","_errors$id","_errors$fromDate","_errors$toDate","agency","setAgency","useState","useEffect","async","token","getCookieValue","tokenName","url","ipAddress","res","axios","get","headers","concat","status","error","recordset","errorToast","message","FetchActiveAgency","then","register","handleSubmit","formState","errors","reset","useForm","ledgerInfo","setLedgerInfo","btnDisabled","setBtnDisabled","_jsxs","CCard","className","CCardHeader","CCardBody","length","onSubmit","filterData","x","Id","id","post","htmlFor","required","map","CompanyName","type","fromDate","toDate","disabled","LedgerTable","Input","styled","input","attrs","size","small","undefined","_templateObject","_taggedTemplateLiteral","ClearButton","button","_templateObject2","_ref","placeholder","onChange","onClick"],"sourceRoot":""}