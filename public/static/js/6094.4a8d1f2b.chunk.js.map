{"version":3,"file":"static/js/6094.4a8d1f2b.chunk.js","mappings":"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","sources":["views/dashboard/agents/Agents.js","views/dashboard/agents/FilterComponent.js","views/dashboard/agents/TableAgents.js"],"sourcesContent":["import axios from \"axios\";\nimport {Table} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport DataTable from 'react-data-table-component';\nimport {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport {errorToast, getCookieValue, ipAddress, tokenName} from \"../../../utils/Common\";\nimport TableAgents from \"./TableAgents\";\n\nconst Agents = () => {\n  const tableHeadings = [\"Name\", \"Company Id\", \"Agency Name\", \"Status\", \"Group Type\", \"Mobile\"];\n\n  const [agency, setAgency] = useState(null)\n\n  async function FetchAgency() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/getCompanyName\"\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data.error)\n\n      if (res.status === 200 && !res.data.error) {\n        let activeAgents = res.data.recordset.filter(agent => agent.IsActive)\n        setAgency(activeAgents)\n      }\n    } catch (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    FetchAgency().then()\n  }, []);\n\n  const navigate = useNavigate();\n  const clickHandler = (UserId) => {\n    // console.log(UserId)\n    navigate(\"/agent-details\", {state: UserId})\n  };\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"bg-dark text-white\">\n          <h4 className=\"mb-0\">Partners</h4>\n        </CCardHeader>\n        <CCardBody>\n          {agency ? agency.length > 0 && <TableAgents data={agency} click={clickHandler}/> : <tr>\n            <td colSpan={6} className=\"text-center\">\n              <i className=\"spinner spinner-border\"></i>\n            </td>\n          </tr>\n          }\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\nexport default Agents;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.small ? 5 : undefined\n}))`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <Input\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Filter table data...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton className=\"bg-dark text-white\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n","import React, {useMemo} from \"react\";\nimport DataTable from 'react-data-table-component';\nimport FilterComponent from \"./FilterComponent\";\n\nconst TableAgents = (props) => {\n  const columns = [\n    {\n      name: \"\",\n      button: true,\n      cell: row => <>\n        <button onClick={() => props.click(row.UserId)} className=\"btn btn-link\">\n          <i className=\"fa fa-eye\"></i>\n        </button>\n      </>\n    },\n    {\n      name: \"Name\",\n      selector: row => row.FirstName + \" \" +row.LastName,\n      sortable: true\n    },\n    {\n      name: \"Company Id\",\n      selector: row => row.CompanyId,\n      sortable: true\n    },\n    {\n      name: \"Agency Name\",\n      selector: row => row.CompanyName,\n      sortable: true\n    },\n    {\n      name: \"Status\",\n      selector: row => row.IsActive ? <span className=\"text-success\">Active</span> :\n        <span className=\"text-danger\">InActive</span>,\n      sortable: true\n    },\n    {\n      name: \"Group Type\",\n      selector: row => row.GroupType,\n      sortable: true\n    },\n    {\n      name: \"Mobile\",\n      selector: row => row.PhoneNumber,\n      sortable: true\n    },\n  ];\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const filteredItems = props.data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <>\n        <FilterComponent\n          onFilter={e => setFilterText(e.target.value)}\n          onClear={handleClear}\n          filterText={filterText}\n        />\n      </>\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={filteredItems}\n        striped\n        pagination\n        subHeader\n        subHeaderComponent={subHeaderComponent}\n      />\n    </>\n  )\n}\nexport default TableAgents;\n"],"names":["Agents","agency","setAgency","useState","useEffect","async","token","getCookieValue","tokenName","url","ipAddress","res","axios","get","headers","concat","status","data","error","activeAgents","recordset","filter","agent","IsActive","e","errorToast","message","FetchAgency","then","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","CCard","CCardHeader","className","CCardBody","length","TableAgents","click","UserId","state","colSpan","Input","styled","input","attrs","props","type","size","small","undefined","_templateObject","_taggedTemplateLiteral","ClearButton","button","_templateObject2","_ref","filterText","onFilter","onClear","id","placeholder","value","onChange","onClick","columns","name","cell","row","selector","FirstName","LastName","sortable","CompanyId","CompanyName","GroupType","PhoneNumber","setFilterText","React","resetPaginationToggle","setResetPaginationToggle","filteredItems","item","JSON","stringify","toLowerCase","indexOf","subHeaderComponent","useMemo","FilterComponent","target","handleClear","DataTable","striped","pagination","subHeader"],"sourceRoot":""}