{"version":3,"file":"static/js/8057.30db308d.chunk.js","mappings":"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","sources":["views/dashboard/FlightSuppliers.js"],"sourcesContent":["import {CCard, CCardBody, CRow} from \"@coreui/react\";\nimport CountUp from \"react-countup\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport React, {useEffect, useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {useForm} from \"react-hook-form\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\nimport axios from \"axios\";\n\nimport DeleteIcon from \"../../assets/images/delete.png\";\nimport BackgroundLogo from \"../../assets/images/BackgroundLogo.gif\";\n\nconst FlightSuppliers = () => {\n  let {register, handleSubmit, reset, formState: {errors}} = useForm();\n\n  const [show, setShow] = useState(false);\n\n  const [suppliersData, setSuppliersData] = useState([]);\n\n  let [loader, setLoader] = useState(true);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  }\n\n  useEffect(() => {\n    getSupplierName();\n  }, []);\n\n  function getSupplierName() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/suppliers\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if (response.data.error === false) {\n          console.log(response);\n          setSuppliersData(response.data.recordset);\n          setLoader(false)\n        } else {\n          setLoader(false)\n          errorToast(\"Error\");\n        }\n      }).catch(e => {\n      setLoader(false)\n      console.log(e)\n    })\n  }\n\n  function onSubmit(Param) {\n    let token = getCookieValue(tokenName);\n    axios.post(ipAddress + \"admin/suppliers\", Param, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if (response.data.error === false) {\n          successToast(response.data.message);\n\n          reset();\n          handleClose();\n          getSupplierName();\n        } else {\n          errorToast(\"Error while Adding\");\n        }\n      }).catch(e => {\n      console.log(e)\n    })\n\n\n  }\n\n  function deleteSupplier(Param) {\n\n    let token = getCookieValue(tokenName);\n    axios.delete(ipAddress + \"admin/suppliers/\" + Param, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if (response.data.error === false) {\n          successToast(response.data.message);\n\n          getSupplierName();\n        } else {\n          errorToast(\"Error while Deleting\");\n        }\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  return (\n<>\n    {\n      loader ?\n        <div>\n          <span className=\"spinner-border text-primary\"></span>\n        </div>\n        :\n        <>\n            <CCard className=\"mb-4\">\n              <CCardBody>\n                <CRow>\n                  <div className=\"table-responsive px-3 \">\n\n\n                    <div className=\"bg-light py-2 mb-3\">\n                      <Button variant=\"primary\" onClick={handleShow}>\n                        Add New Supplier\n                      </Button>\n\n                      <div className=\"row\">\n\n                      </div>\n\n                    </div>\n\n                    <div className=\"row\">\n\n                      <br/>\n                      <div style={{height: \"335px\"}} className=\"table-responsive\">\n                        <Table responsive hover>\n                          <thead style={{position: \"sticky\", top: 0}}>\n                          <tr className=\"text-center\">\n                            <th>Serial no.</th>\n                            <th>Supplier Name</th>\n                            <th>Delete</th>\n                            {/*<th></th>*/}\n                          </tr>\n                          </thead>\n\n                          <tbody>\n                          {suppliersData?.length > 0 && suppliersData.map((item, index) => (\n                            <tr className=\"text-center\" key={index}>\n                              <td>{index + 1}</td>\n                              <td><b>{item.name}</b></td>\n                              <td><a onClick={(e) => deleteSupplier(item.id)}><img src={DeleteIcon} alt=\"Delete Icon\"/></a>\n                              </td>\n                              {/*<td>{item.date.split(\"T\")[0]}</td>*/}\n                              {/*<td>{item.modeOfPayment}</td>*/}\n                              {/*<td>{item.dateOfPayment.split(\"T\")[0]}</td>*/}\n                            </tr>\n                          ))\n                          }\n                          </tbody>\n\n                        </Table>\n\n                      </div>\n\n                      {/*<div className=\"text-center\">*/}\n                      {/*  <button className=\"btn btn-sm me-2\" style={{fontSize: '18px', border: 'none'}}*/}\n                      {/*          onClick={handlePrevPage}*/}\n                      {/*          disabled={currentPage === 1}>*/}\n                      {/*    &laquo;*/}\n                      {/*  </button>*/}\n\n                      {/*  {pageNumbers.map((number) => (*/}\n                      {/*    <button key={number}*/}\n                      {/*            className={`btn btn-sm ${currentPage === number ? 'btn-success' : 'btn-light'}`}*/}\n                      {/*            onClick={() => handleClick(number)}>*/}\n                      {/*      {number}*/}\n                      {/*    </button>*/}\n                      {/*  ))}*/}\n\n                      {/*  <button className=\"btn btn-sm ms-2\" style={{fontSize: '18px', border: 'none'}}*/}\n                      {/*          onClick={handleNextPage}*/}\n                      {/*          disabled={currentPage === totalPages}>*/}\n                      {/*    &raquo;*/}\n                      {/*    /!*<cilArrowRight/>*!/*/}\n                      {/*  </button>*/}\n                      {/*</div>*/}\n                    </div>\n\n                  </div>\n                </CRow>\n              </CCardBody>\n            </CCard>\n\n            <Modal show={show} onHide={handleClose} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Add New Supplier</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"supname\">Supplier Name</label>\n                    <input {...register('supname', {required: true})} placeholder=\"Enter supplier Name\" type=\"text\"\n                           id=\"supname\"\n                           className=\"form-control\"/>\n\n                    {errors.supname && <p className='text-danger'>This is a required field.</p>}\n                  </div>\n\n\n                  <hr/>\n\n                  <div className=\"mb d-flex justify-content-between align-items-center\">\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                      Close\n                    </Button>\n\n                    <Button variant=\"primary\" type=\"submit\" className=\"ml-auto\">\n                      Add\n                    </Button>\n                  </div>\n\n\n                </form>\n\n              </Modal.Body>\n\n              {/*<Modal.Footer>*/}\n              {/*  <Button variant=\"secondary\" onClick={handleClose}>*/}\n              {/*    Close*/}\n              {/*  </Button>*/}\n              {/*  <Button variant=\"primary\" onSubmit={handleSubmit(onSubmit)} >*/}\n              {/*    Save Changes*/}\n              {/*  </Button>*/}\n              {/*</Modal.Footer>*/}\n\n            </Modal>\n\n        </>\n    }\n</>\n  )\n}\n\nexport default FlightSuppliers\n"],"names":["FlightSuppliers","register","handleSubmit","reset","formState","errors","useForm","show","setShow","useState","suppliersData","setSuppliersData","loader","setLoader","handleClose","getSupplierName","token","getCookieValue","tokenName","axios","get","ipAddress","headers","concat","then","response","data","error","console","log","recordset","errorToast","catch","e","useEffect","_jsx","_Fragment","children","className","_jsxs","CCard","CCardBody","CRow","Button","variant","onClick","handleShow","style","height","Table","responsive","hover","position","top","length","map","item","index","name","Param","delete","successToast","message","deleteSupplier","id","src","alt","Modal","onHide","centered","Header","closeButton","Title","Body","onSubmit","post","htmlFor","required","placeholder","type","supname"],"sourceRoot":""}