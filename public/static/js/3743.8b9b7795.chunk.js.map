{"version":3,"file":"static/js/3743.8b9b7795.chunk.js","mappings":"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","sources":["views/dashboard/agents/FilterComponent.js","views/dashboard/distributors/active/TableDistributors.js","views/dashboard/distributors/active/ActiveDistributors.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.small ? 5 : undefined\n}))`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <Input\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Filter table data...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton className=\"bg-dark text-white\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n","import Modal from \"react-bootstrap/Modal\";\nimport React, {useMemo, useState} from \"react\";\nimport DataTable from 'react-data-table-component';\nimport FilterComponent from \"../../agents/FilterComponent\";\nimport {customStyles} from \"../../../../utils/Common\";\n\nconst TableDistributors = (props) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [distributorStaff, setDistributorStaff] = useState(null);\n\n  function StaffMembers(users) {\n    // console.log(users)\n    setDistributorStaff(users)\n    setShow(true)\n  }\n\n  const columns = [\n    {\n      name: \"Details\",\n      button: true,\n      cell: row => <>\n        <button onClick={() => props.click(row.id)} className=\"btn btn-link\">\n          <i className=\"fa fa-eye\"></i>\n        </button>\n      </>,\n      width: '60px'\n    },\n    {\n      name: \"Users\",\n      button: true,\n      cell: row => <>\n        <button onClick={() => StaffMembers(row.users)} className=\"btn btn-link\">\n          <i className=\"fa fa-users\"></i>\n        </button>\n      </>,\n      width: '60px'\n    },\n    {\n      name: \"Name\",\n      selector: row => row.authorized_person_first_name + \" \" + row.authorized_person_last_name,\n      sortable: true,\n      width: '150px'\n    },\n    // {\n    //   name: \"Company Id\",\n    //   selector: row => row.CompanyId,\n    //   sortable: true,\n    //   width: '140px'\n    // },\n    {\n      name: \"Agency Name\",\n      selector: row => row.agency_name,\n      sortable: true,\n      width: '180px'\n    },\n    {\n      name: \"Nature of Business\",\n      selector: row => row.nature_of_business,\n      sortable: true,\n      width: '180px'\n    },\n    {\n      name: \"Status\",\n      selector: row => <span className=\"text-success\">Active</span>,\n      sortable: true,\n      width: '90px'\n    },\n    // {\n    //   name: \"Group Type\",\n    //   selector: row => row.GroupType,\n    //   sortable: true,\n    //   width: '130px'\n    // },\n    {\n      name: \"Mobile\",\n      selector: row => row.mobile,\n      sortable: true,\n      width: '120px'\n    },\n    {\n      name: \"Email\",\n      selector: row => row.email,\n      sortable: true,\n      width: '200px'\n    },\n    {\n      name: \"Allowed By\",\n      selector: row => row.allowedBy,\n      sortable: true,\n      // width: '140px'\n    },\n  ];\n\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const filteredItems = props.data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <>\n        <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText}/>\n      </>\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={filteredItems}\n        striped\n        pagination\n        subHeader\n        subHeaderComponent={subHeaderComponent}\n        customStyles={customStyles}\n      />\n\n      <Modal show={show} onHide={handleClose} centered scrollable fullscreen>\n        <Modal.Header closeButton>\n          <Modal.Title>Users</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <table className=\"table table-bordered\">\n            <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Email</th>\n              <th>Mobile</th>\n              <th>Status</th>\n              <th>Created By</th>\n              <th>Created On</th>\n            </tr>\n            </thead>\n            <tbody>\n            {distributorStaff?.map((x, i) =>\n              <tr key={x?.id}>\n                <td>{i + 1}</td>\n                <td>{x?.first_name}</td>\n                <td>{x?.last_name}</td>\n                <td>{x?.email}</td>\n                <td>{x?.mobile}</td>\n                <td>\n                  {x?.login_permitted === \"1\" ?\n                    <span className=\"text-success\">Active</span> :\n                    <span className=\"text-danger\">InActive</span>}\n                </td>\n                <td>{x?.created_by}</td>\n                <td>{x?.createdOn}</td>\n              </tr>\n            )}\n            </tbody>\n          </table>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\nexport default TableDistributors;\n","import {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport React, {useEffect, useState} from \"react\";\nimport {errorToast, getCookieValue, ipAddress, tokenName} from \"../../../../utils/Common\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport TableDistributors from \"./TableDistributors\";\n\nconst ActiveDistributors = () => {\n  const [distributors, setDistributors] = useState(null)\n\n  async function FetchDistributors() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/distributors\"\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      // console.log(res)\n      // console.log(res.data)\n      // console.log(res.data.recordset)\n\n      if (res.status === 200 && res.data.error) {\n        setDistributors([]);\n      } else if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset)\n        const activeAgents = res.data.recordset.filter(agent => agent.status === \"1\");\n        // console.log(activeAgents)\n        setDistributors(activeAgents);\n      }\n    } catch (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    FetchDistributors().then();\n  }, []);\n\n  const navigate = useNavigate();\n  const clickHandler = (id) => {\n    navigate(\"/distributor-details\", {state: {id: id, action: 'active'}})\n  };\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"card-header-bg\">\n          <h4 className=\"mb-0 primary-color\">Active Distributors</h4>\n        </CCardHeader>\n        <CCardBody>\n          {distributors ? (distributors.length > 0 ? <TableDistributors data={distributors} click={clickHandler}/> :\n            <div className=\"text-center mb-0 text-danger h5\">No Data Available</div>) : (<div className=\"text-center\">\n            <i className=\"spinner spinner-border\"></i>\n          </div>)\n          }\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\nexport default ActiveDistributors;\n"],"names":["Input","styled","input","attrs","props","type","size","small","undefined","_templateObject","_taggedTemplateLiteral","ClearButton","button","_templateObject2","_ref","filterText","onFilter","onClear","_jsxs","_Fragment","children","_jsx","id","placeholder","value","onChange","className","onClick","show","setShow","useState","distributorStaff","setDistributorStaff","columns","name","cell","row","click","width","StaffMembers","users","selector","authorized_person_first_name","authorized_person_last_name","sortable","agency_name","nature_of_business","mobile","email","allowedBy","setFilterText","React","resetPaginationToggle","setResetPaginationToggle","filteredItems","data","filter","item","JSON","stringify","toLowerCase","indexOf","subHeaderComponent","useMemo","FilterComponent","e","target","handleClear","DataTable","striped","pagination","subHeader","customStyles","Modal","onHide","handleClose","centered","scrollable","fullscreen","Header","closeButton","Title","Body","map","x","i","first_name","last_name","login_permitted","created_by","createdOn","ActiveDistributors","distributors","setDistributors","useEffect","async","token","getCookieValue","tokenName","url","ipAddress","res","axios","get","headers","concat","status","error","activeAgents","recordset","agent","errorToast","message","FetchDistributors","then","navigate","useNavigate","CCard","CCardHeader","CCardBody","length","TableDistributors","state","action"],"sourceRoot":""}