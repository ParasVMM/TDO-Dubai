{"version":3,"file":"static/js/8193.5c3f1e88.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport {CChartLine} from '@coreui/react-chartjs'\nimport {getStyle, hexToRgba} from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\n\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport axios from \"axios\";\nimport {errorToast, ipAddress, successToast} from \"../../utils/Common\";\nimport {useForm} from \"react-hook-form\";\n// import EditCountries from \"./EditCountries\"\nimport Swal from 'sweetalert2';\n\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport EditCountries from \"./EditCountries\";\nimport {Link} from \"react-router-dom\"\nimport Form from \"react-bootstrap/Form\";\nimport CanvasJSReact from \"@canvasjs/react-charts\";\nimport {tokenName, getCookieValue} from \"../../utils/Common\";\n\nconst Dashboard = () => {\n  console.log(\"In Dashboard\");\n\n  let [countries, setCountries] = useState([]);\n\n\n  useEffect(() => {\n    // console.log(getCookieValue(tokenName))\n  }, []);\n\n\n\n  // Model popup form function\n  // function callLocalStorage() {\n  //   let recordset = JSON.parse(localStorage.getItem(\"recordset\"));\n  //   setCountries(recordset);\n  // }\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  }\n\n\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    {title: 'Visits', value: '29.703 Users', percent: 40, color: 'success'},\n    {title: 'Unique', value: '24.093 Users', percent: 20, color: 'info'},\n    {title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning'},\n    {title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger'},\n    {title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary'},\n  ]\n\n  const progressGroupExample1 = [\n    {title: 'Monday', value1: 34, value2: 78},\n    {title: 'Tuesday', value1: 56, value2: 94},\n    {title: 'Wednesday', value1: 12, value2: 67},\n    {title: 'Thursday', value1: 43, value2: 91},\n    {title: 'Friday', value1: 22, value2: 73},\n    {title: 'Saturday', value1: 53, value2: 82},\n    {title: 'Sunday', value1: 9, value2: 69},\n  ]\n\n  const progressGroupExample2 = [\n    {title: 'Male', icon: cilUser, value: 53},\n    {title: 'Female', icon: cilUserFemale, value: 43},\n  ]\n\n  const progressGroupExample3 = [\n    {title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235'},\n    {title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223'},\n    {title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564'},\n    {title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319'},\n  ]\n\n  // Static Table Object Code\n  const tableExample = [\n    {\n      avatar: {src: avatar1, status: 'success'},\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: {name: 'USA', flag: cifUs},\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: {name: 'Mastercard', icon: cibCcMastercard},\n      activity: '10 sec ago',\n    },\n    {\n      avatar: {src: avatar2, status: 'danger'},\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: {name: 'Brazil', flag: cifBr},\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: {name: 'Visa', icon: cibCcVisa},\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: {src: avatar3, status: 'warning'},\n      user: {name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021'},\n      country: {name: 'India', flag: cifIn},\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: {name: 'Stripe', icon: cibCcStripe},\n      activity: '1 hour ago',\n    },\n    {\n      avatar: {src: avatar4, status: 'secondary'},\n      user: {name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021'},\n      country: {name: 'France', flag: cifFr},\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: {name: 'PayPal', icon: cibCcPaypal},\n      activity: 'Last month',\n    },\n    {\n      avatar: {src: avatar5, status: 'success'},\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: {name: 'Spain', flag: cifEs},\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: {name: 'Google Wallet', icon: cibCcApplePay},\n      activity: 'Last week',\n    },\n    {\n      avatar: {src: avatar6, status: 'danger'},\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: {name: 'Poland', flag: cifPl},\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: {name: 'Amex', icon: cibCcAmex},\n      activity: 'Last week',\n    },\n  ]\n\n  const CanvasJSChart = CanvasJSReact.CanvasJSChart;\n  const [weekSelected, setWeekSelected] = useState(true);\n  const [monthSelected, setMonthSelected] = useState(false);\n  const [yearSelected, setYearSelected] = useState(false);\n  const [dropdown, setDropdown] = useState(\"weeks\");\n  const [yearDropdown, setYearDropdown] = useState(new Date().getFullYear());\n  const [graphTitle, setGraphTitle] = useState(\"Weeks\");\n\n\n  useEffect(() => {\n    // You can perform any additional setup or cleanup here if needed\n    getWeekGraph(new Date().getMonth());\n  }, []);\n\n  let [options, setOptions] = useState({\n    animationEnabled: true,\n    exportEnabled: true,\n    theme: \"light2\",\n    title: {\n      text: \"Number of Insurance\"\n    },\n    axisY: {\n      includeZero: true,\n      interval: 50, // Set interval to 50\n      minimum: 0,   // Set minimum value\n      maximum: 200   // Set maximum value\n    },\n    axisX: {\n      title: \"Weeks\",\n      interval: 1\n    },\n    data: [{\n      type: \"column\",\n      indexLabelFontColor: \"#5A5757\",\n      indexLabelPlacement: \"outside\",\n      dataPoints: [\n        {label: \"Week 1\", y: 71},\n        {label: \"Week 2\", y: 40},\n        {label: \"Week 3\", y: 69},\n        {label: \"Week 4\", y: 88},\n      ]\n    }]\n  })\n\n  function checkRadioButton(action) {\n    setDropdown(action)\n    if (action === \"weeks\") {\n      setWeekSelected(true)\n      setMonthSelected(false)\n      setYearSelected(false)\n      getCheckedRadioButton(\"weeks\")\n    } else if (action === \"months\") {\n      setMonthSelected(true)\n      setWeekSelected(false)\n      setYearSelected(false)\n      getCheckedRadioButton(\"months\")\n    } else {\n      setYearSelected(true)\n      setMonthSelected(false)\n      setWeekSelected(false)\n    }\n  }\n\n  // Get Weeks Graph\n  function getWeekGraph(month) {\n    console.log(month)\n    // console.log(dropdown)\n    let data = {\"param1\": dropdown, \"param2\": month, \"param3\": yearDropdown};\n    console.log(data);\n    // console.log(getCookieValue(tokenName))\n    let token = getCookieValue(tokenName);\n\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    }).then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          axisX: {\n            title: \"Weeks\",\n            // interval: 1\n          },\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Weeks\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  function getMonthsGraph(year) {\n    console.log(\"in month graph year\")\n    let data = {\"param1\": dropdown, \"param2\": \"\", \"param3\": year};\n    console.log(data);\n    let token = getCookieValue(tokenName);\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          axisX: {\n            title: \"Months\",\n            // interval: 1\n          },\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Weeks\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n\n  }\n\n  function getCheckedRadioButton(action) {\n    let data\n    let token = getCookieValue(tokenName);\n    if (action === \"weeks\") {\n      data = {\"param1\": action, \"param2\": new Date().getMonth(), \"param3\": new Date().getFullYear()};\n    } else if (action === \"months\") {\n      data = {\"param1\": action, \"param2\": \"\", \"param3\": new Date().getFullYear()};\n    }\n    console.log(\"in month graph year\")\n    // let data = {\"param1\": action , \"param2\": \"\" , \"param3\": new Date().getFullYear()};\n    console.log(data);\n\n    axios.post(ipAddress + \"admin/fetchWeeklyCount\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        console.log(response.data.message);\n\n        const newOptions = {\n          ...options,\n          axisX: {\n            title: action === \"weeks\" ? \"Weeks\" : \"Months\",\n            // interval: 1\n          },\n          data: [{\n            ...options.data[0],\n            dataPoints: response.data.message,\n          }],\n        };\n        // setGraphTitle(\"Months\");\n        setOptions(newOptions)\n      }).catch(e => {\n      console.log(e)\n    })\n  }\n\n  return (\n    <>\n\n    <WidgetsDropdown/>\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <div className=\"table-responsive px-3 \">\n\n                <div className=\"row bg-light py-2 mb-3\">\n                  <div className=\"col-4 col-sm-1\">\n                    <Form.Check\n                      inline\n                      name={\"action\"}\n                      type=\"radio\"\n                      label=\"Weeks\"\n                      id=\"week\"\n                      defaultChecked\n                      onChange={(e) => checkRadioButton(\"weeks\")}\n                    />\n                  </div>\n                  <div className=\"col-4 col-sm-1\">\n                    <Form.Check\n                      inline\n                      name={\"action\"}\n                      type=\"radio\"\n                      label=\"Months\"\n                      id=\"months\"\n                      onChange={(e) => checkRadioButton(\"months\")}\n                    />\n                  </div>\n                  <div className=\"col-4 col-sm-1\">\n                    <Form.Check\n                      inline\n                      name={\"action\"}\n                      type=\"radio\"\n                      label=\"Years\"\n                      id=\"years\"\n                      disabled={\"true\"}\n                      onChange={(e) => checkRadioButton(\"years\")}\n                    />\n                  </div>\n\n                  {weekSelected &&\n                    <div className=\"col-sm-12 row\">\n                      <div className=\"col-6\">\n                        <span>Select Year</span>\n                        <select className=\"form-control\"\n                                defaultValue={new Date().getFullYear()}\n                                onChange={(e) => setYearDropdown(e.target.value)}>\n                          {/*<option >Select Month</option>*/}\n                          {[2023, 2024, 2025, 2026].map(x =>\n                            <option key={x} value={x}>{x}</option>\n                          )}\n                        </select>\n                      </div>\n\n                      <div className=\"col-6\">\n                        <span>Select Month</span>\n                        <select className=\"form-control\"\n                                defaultValue={new Date().getMonth()}\n                                onChange={(e) => getWeekGraph(e.target.value)}>\n                          {/*<option >Select Month</option>*/}\n                          <option value={0}>January</option>\n                          <option value={1}>February</option>\n                          <option value={2}>March</option>\n                          <option value={3}>April</option>\n                          <option value={4}>May</option>\n                          <option value={5}>June</option>\n                          <option value={6}>July</option>\n                          <option value={7}>August</option>\n                          <option value={8}>September</option>\n                          <option value={9}>October</option>\n                          <option value={10}>November</option>\n                          <option value={11}>December</option>\n                        </select>\n                      </div>\n                      <br/>\n                    </div>\n                  }\n\n                  {monthSelected &&\n                    <div className=\"col-sm-12\">\n                      <span>Select Year</span>\n                      <select className=\"form-control\"\n                              defaultValue={new Date().getFullYear()}\n                              onChange={(e) => getMonthsGraph(e.target.value)}>\n                        {/*<option >Select Month</option>*/}\n                        {[2023, 2024, 2025, 2026].map(x =>\n                          <option key={x} value={x}>{x}</option>\n                        )}\n                      </select>\n                    </div>\n                  }\n                </div>\n\n              <div className=\"row\">\n                {/*{yearSelected &&*/}\n                {/*  <select className=\"form-control\"*/}\n                {/*          defaultValue={new Date().getMonth()}*/}\n                {/*          onChange={(e) => getWeekGraph(e.target.value)}>*/}\n                {/*    <option >Select Month</option>*/}\n                {/*  </select>*/}\n                {/*}*/}\n                <br/>\n                {/*<hr/>*/}\n\n\n                <div>\n                <CanvasJSChart options={options}/>\n                </div>\n              </div>\n\n            </div>\n\n            {/*<CCol sm={5}>*/}\n            {/*  <h4 id=\"traffic\" className=\"card-title mb-0\">*/}\n            {/*    Traffic*/}\n            {/*  </h4>*/}\n            {/*  <div className=\"small text-medium-emphasis\">January - July 2021</div>*/}\n            {/*</CCol>*/}\n            {/*<CCol sm={7} className=\"d-none d-md-block\">*/}\n            {/*  <CButton color=\"primary\" className=\"float-end\">*/}\n            {/*    <CIcon icon={cilCloudDownload}/>*/}\n            {/*  </CButton>*/}\n            {/*  <CButtonGroup className=\"float-end me-3\">*/}\n            {/*    {['Day', 'Month', 'Year'].map((value) => (*/}\n            {/*      <CButton*/}\n            {/*        color=\"outline-secondary\"*/}\n            {/*        key={value}*/}\n            {/*        className=\"mx-0\"*/}\n            {/*        active={value === 'Month'}*/}\n            {/*      >*/}\n            {/*        {value}*/}\n            {/*      </CButton>*/}\n            {/*    ))}*/}\n            {/*  </CButtonGroup>*/}\n            {/*</CCol>*/}\n          </CRow>\n          {/*<CChartLine*/}\n          {/*  style={{height: '300px', marginTop: '40px'}}*/}\n          {/*  data={{*/}\n          {/*    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],*/}\n          {/*    datasets: [*/}\n          {/*      {*/}\n          {/*        label: 'My First dataset',*/}\n          {/*        backgroundColor: hexToRgba(getStyle('--cui-info'), 10),*/}\n          {/*        borderColor: getStyle('--cui-info'),*/}\n          {/*        pointHoverBackgroundColor: getStyle('--cui-info'),*/}\n          {/*        borderWidth: 2,*/}\n          {/*        data: [*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*        ],*/}\n          {/*        fill: true,*/}\n          {/*      },*/}\n          {/*      {*/}\n          {/*        label: 'My Second dataset',*/}\n          {/*        backgroundColor: 'transparent',*/}\n          {/*        borderColor: getStyle('--cui-success'),*/}\n          {/*        pointHoverBackgroundColor: getStyle('--cui-success'),*/}\n          {/*        borderWidth: 2,*/}\n          {/*        data: [*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*          random(50, 200),*/}\n          {/*        ],*/}\n          {/*      },*/}\n          {/*      {*/}\n          {/*        label: 'My Third dataset',*/}\n          {/*        backgroundColor: 'transparent',*/}\n          {/*        borderColor: getStyle('--cui-danger'),*/}\n          {/*        pointHoverBackgroundColor: getStyle('--cui-danger'),*/}\n          {/*        borderWidth: 1,*/}\n          {/*        borderDash: [8, 5],*/}\n          {/*        data: [65, 65, 65, 65, 65, 65, 65],*/}\n          {/*      },*/}\n          {/*    ],*/}\n          {/*  }}*/}\n          {/*  options={{*/}\n          {/*    maintainAspectRatio: false,*/}\n          {/*    plugins: {*/}\n          {/*      legend: {*/}\n          {/*        display: false,*/}\n          {/*      },*/}\n          {/*    },*/}\n          {/*    scales: {*/}\n          {/*      x: {*/}\n          {/*        grid: {*/}\n          {/*          drawOnChartArea: false,*/}\n          {/*        },*/}\n          {/*      },*/}\n          {/*      y: {*/}\n          {/*        ticks: {*/}\n          {/*          beginAtZero: true,*/}\n          {/*          maxTicksLimit: 5,*/}\n          {/*          stepSize: Math.ceil(250 / 5),*/}\n          {/*          max: 250,*/}\n          {/*        },*/}\n          {/*      },*/}\n          {/*    },*/}\n          {/*    elements: {*/}\n          {/*      line: {*/}\n          {/*        tension: 0.4,*/}\n          {/*      },*/}\n          {/*      point: {*/}\n          {/*        radius: 0,*/}\n          {/*        hitRadius: 10,*/}\n          {/*        hoverRadius: 4,*/}\n          {/*        hoverBorderWidth: 3,*/}\n          {/*      },*/}\n          {/*    },*/}\n          {/*  }}*/}\n          {/*/>*/}\n        </CCardBody>\n        {/*<CCardFooter>*/}\n        {/*  <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">*/}\n        {/*    {progressExample.map((item, index) => (*/}\n        {/*      <CCol className=\"mb-sm-2 mb-0\" key={index}>*/}\n        {/*        <div className=\"text-medium-emphasis\">{item.title}</div>*/}\n        {/*        <strong>*/}\n        {/*          {item.value} ({item.percent}%)*/}\n        {/*        </strong>*/}\n        {/*        <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />*/}\n        {/*      </CCol>*/}\n        {/*    ))}*/}\n        {/*  </CRow>*/}\n        {/*</CCardFooter>*/}\n      </CCard>\n\n      {/* Brands Cards */}\n      {/*<WidgetsBrand withCharts/>*/}\n\n      {/*<CRow>*/}\n      {/*  <CCol xs>*/}\n      {/*    <CCard className=\"mb-4\">*/}\n      {/*      <CCardHeader>Traffic {' & '} Sales</CCardHeader>*/}\n      {/*      <CCardBody>*/}\n      {/*        <CRow>*/}\n      {/*          <CCol xs={12} md={6} xl={6}>*/}\n      {/*            <CRow>*/}\n      {/*              <CCol sm={6}>*/}\n      {/*                <div className=\"border-start border-start-4 border-start-info py-1 px-3\">*/}\n      {/*                  <div className=\"text-medium-emphasis small\">New Clients</div>*/}\n      {/*                  <div className=\"fs-5 fw-semibold\">9,123</div>*/}\n      {/*                </div>*/}\n      {/*              </CCol>*/}\n      {/*              <CCol sm={6}>*/}\n      {/*                <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">*/}\n      {/*                  <div className=\"text-medium-emphasis small\">Recurring Clients</div>*/}\n      {/*                  <div className=\"fs-5 fw-semibold\">22,643</div>*/}\n      {/*                </div>*/}\n      {/*              </CCol>*/}\n      {/*            </CRow>*/}\n\n      {/*            <hr className=\"mt-0\"/>*/}\n      {/*            {progressGroupExample1.map((item, index) => (*/}\n      {/*              <div className=\"progress-group mb-4\" key={index}>*/}\n      {/*                <div className=\"progress-group-prepend\">*/}\n      {/*                  <span className=\"text-medium-emphasis small\">{item.title}</span>*/}\n      {/*                </div>*/}\n      {/*                <div className=\"progress-group-bars\">*/}\n      {/*                  <CProgress thin color=\"info\" value={item.value1}/>*/}\n      {/*                  <CProgress thin color=\"danger\" value={item.value2}/>*/}\n      {/*                </div>*/}\n      {/*              </div>*/}\n      {/*            ))}*/}\n      {/*          </CCol>*/}\n\n      {/*          <CCol xs={12} md={6} xl={6}>*/}\n      {/*            <CRow>*/}\n      {/*              <CCol sm={6}>*/}\n      {/*                <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">*/}\n      {/*                  <div className=\"text-medium-emphasis small\">Pageviews</div>*/}\n      {/*                  <div className=\"fs-5 fw-semibold\">78,623</div>*/}\n      {/*                </div>*/}\n      {/*              </CCol>*/}\n      {/*              <CCol sm={6}>*/}\n      {/*                <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">*/}\n      {/*                  <div className=\"text-medium-emphasis small\">Organic</div>*/}\n      {/*                  <div className=\"fs-5 fw-semibold\">49,123</div>*/}\n      {/*                </div>*/}\n      {/*              </CCol>*/}\n      {/*            </CRow>*/}\n\n      {/*            <hr className=\"mt-0\"/>*/}\n\n      {/*            {progressGroupExample2.map((item, index) => (*/}\n      {/*              <div className=\"progress-group mb-4\" key={index}>*/}\n      {/*                <div className=\"progress-group-header\">*/}\n      {/*                  <CIcon className=\"me-2\" icon={item.icon} size=\"lg\"/>*/}\n      {/*                  <span>{item.title}</span>*/}\n      {/*                  <span className=\"ms-auto fw-semibold\">{item.value}%</span>*/}\n      {/*                </div>*/}\n      {/*                <div className=\"progress-group-bars\">*/}\n      {/*                  <CProgress thin color=\"warning\" value={item.value}/>*/}\n      {/*                </div>*/}\n      {/*              </div>*/}\n      {/*            ))}*/}\n\n      {/*            <div className=\"mb-5\"></div>*/}\n\n      {/*            {progressGroupExample3.map((item, index) => (*/}\n      {/*              <div className=\"progress-group\" key={index}>*/}\n      {/*                <div className=\"progress-group-header\">*/}\n      {/*                  <CIcon className=\"me-2\" icon={item.icon} size=\"lg\"/>*/}\n      {/*                  <span>{item.title}</span>*/}\n      {/*                  <span className=\"ms-auto fw-semibold\">*/}\n      {/*                    {item.value}{' '}*/}\n      {/*                    <span className=\"text-medium-emphasis small\">({item.percent}%)</span>*/}\n      {/*                  </span>*/}\n      {/*                </div>*/}\n      {/*                <div className=\"progress-group-bars\">*/}\n      {/*                  <CProgress thin color=\"success\" value={item.percent}/>*/}\n      {/*                </div>*/}\n      {/*              </div>*/}\n      {/*            ))}*/}\n      {/*          </CCol>*/}\n      {/*        </CRow>*/}\n\n      {/*        <br/>*/}\n      {/*        <CCardHeader><strong>Manage Countries </strong> </CCardHeader>*/}\n      {/*        <br/>*/}\n      {/*        /!*<Button variant=\"primary\" onClick={handleShow}>*!/*/}\n      {/*        /!*  Add Country*!/*/}\n      {/*        /!*</Button>*!/*/}\n      {/*        /!*<br/>*!/*/}\n      {/*        /!*<br/>*!/*/}\n      {/*        /!*<div style={{height: \"250px\"}} className=\"table-responsive\">*!/*/}\n      {/*        /!*  <Table responsive hover>*!/*/}\n      {/*        /!*    <thead style={{position: \"sticky\", top: 0}}>*!/*/}\n      {/*        /!*    <tr>*!/*/}\n      {/*        /!*      <th> Country ID</th>*!/*/}\n      {/*        /!*      <th> Country Name</th>*!/*/}\n      {/*        /!*      <th> Code</th>*!/*/}\n      {/*        /!*      <th> Region Code</th>*!/*/}\n      {/*        /!*      <th> Currency Code</th>*!/*/}\n      {/*        /!*      <th> Delete Country</th>*!/*/}\n      {/*        /!*      <th> Edit Info </th>*!/*/}\n      {/*        /!*    </tr>*!/*/}\n      {/*        /!*    </thead>*!/*/}\n\n      {/*        /!*    <tbody>*!/*/}\n      {/*        /!*    {countries.map((item, index) => (*!/*/}\n      {/*        /!*      <tr key={index}>*!/*/}\n      {/*        /!*        <td>{item.CountryId}</td>*!/*/}\n      {/*        /!*        <td>{item.Name}</td>*!/*/}\n      {/*        /!*        <td>{item.Code}</td>*!/*/}\n      {/*        /!*        <td>{item.RegionCode}</td>*!/*/}\n      {/*        /!*        <td className=\"text-center\">{item.CurrencyCode}</td>*!/*/}\n      {/*        /!*        <td className=\"text-center\"><Button variant=\"danger\" onClick={() => deleteCountry(item.CountryId)}>Delete</Button>*!/*/}\n      {/*        /!*        </td>*!/*/}\n      {/*        /!*        /!*<td className=\"text-center\"><Button variant=\"success\"  >Edit</Button>*!/*!/*/}\n      {/*        /!*        <td className=\"text-center\">*!/*/}\n      {/*        /!*          <Link to=\"/edit-country\" state={{data: item}} className=\"btn btn-success\">Edit</Link>*!/*/}\n      {/*        /!*        </td>*!/*/}\n      {/*        /!*      </tr>*!/*/}\n      {/*        /!*    ))}*!/*/}\n      {/*        /!*    </tbody>*!/*/}\n\n      {/*        /!*  </Table>*!/*/}\n\n      {/*        /!*</div>*!/*/}\n\n      {/*        /!*<Modal show={show} onHide={handleClose}>*!/*/}\n      {/*        /!*  <Modal.Header closeButton>*!/*/}\n      {/*        /!*    <Modal.Title>Add New Country</Modal.Title>*!/*/}\n      {/*        /!*  </Modal.Header>*!/*/}\n      {/*        /!*  <Modal.Body>*!/*/}\n\n      {/*        /!*    <form onSubmit={handleSubmit(onSubmit)}>*!/*/}\n      {/*        /!*      <div className=\"mb-3\">*!/*/}\n      {/*        /!*        <label htmlFor=\"name\">Country Name</label>*!/*/}\n      {/*        /!*        <input {...register('name', {required: true})} placeholder=\"Country Name\" type=\"text\" id=\"name\"*!/*/}\n      {/*        /!*               className=\"form-control\"/>*!/*/}\n\n      {/*        /!*        {errors.name && <p className='text-danger'>This is a required field.</p>}*!/*/}\n      {/*        /!*      </div>*!/*/}\n\n      {/*        /!*      <div className=\"mb-3\">*!/*/}\n      {/*        /!*        <label htmlFor=\"code\">Country Code</label>*!/*/}\n      {/*        /!*        <input {...register('code', {required: true})} placeholder=\"Country Code\" type=\"text\" id=\"code\"*!/*/}\n      {/*        /!*               className=\"form-control\"/>*!/*/}\n\n      {/*        /!*        {errors.code && <p className='text-danger'>This is a required field.</p>}*!/*/}\n      {/*        /!*      </div>*!/*/}\n\n      {/*        /!*      <div className=\"mb-3\">*!/*/}\n      {/*        /!*        <label htmlFor=\"region\">Region Code</label>*!/*/}\n      {/*        /!*        <input {...register('region', {required: true})} placeholder=\"Region Code\" type=\"text\" id=\"region\"*!/*/}\n      {/*        /!*               className=\"form-control\"/>*!/*/}\n\n      {/*        /!*        {errors.region && <p className='text-danger'>This is a required field.</p>}*!/*/}\n      {/*        /!*      </div>*!/*/}\n\n      {/*        /!*      <div className=\"mb-3\">*!/*/}\n      {/*        /!*        <label htmlFor=\"currency\">Currency Code</label>*!/*/}\n      {/*        /!*        <input {...register('currency', {required: true})} placeholder=\"Currency Code\" type=\"text\"*!/*/}\n      {/*        /!*               id=\"currency\"*!/*/}\n      {/*        /!*               className=\"form-control\"/>*!/*/}\n\n      {/*        /!*        {errors.currency && <p className='text-danger'>This is a required field.</p>}*!/*/}\n      {/*        /!*      </div>*!/*/}\n\n      {/*        /!*      <hr/>*!/*/}\n\n      {/*        /!*      <div className=\"mb d-flex justify-content-between align-items-center\">*!/*/}\n      {/*        /!*        <Button variant=\"secondary\" onClick={handleClose}>*!/*/}\n      {/*        /!*          Close*!/*/}\n      {/*        /!*        </Button>*!/*/}\n\n      {/*        /!*        <Button variant=\"primary\" type=\"submit\" className=\"ml-auto\">*!/*/}\n      {/*        /!*          Add Country*!/*/}\n      {/*        /!*        </Button>*!/*/}\n      {/*        /!*      </div>*!/*/}\n\n\n      {/*        /!*    </form>*!/*/}\n\n      {/*        /!*  </Modal.Body>*!/*/}\n\n      {/*        /!*  /!*<Modal.Footer>*!/*!/*/}\n      {/*        /!*  /!*  <Button variant=\"secondary\" onClick={handleClose}>*!/*!/*/}\n      {/*        /!*  /!*    Close*!/*!/*/}\n      {/*        /!*  /!*  </Button>*!/*!/*/}\n      {/*        /!*  /!*  <Button variant=\"primary\" onSubmit={handleSubmit(onSubmit)} >*!/*!/*/}\n      {/*        /!*  /!*    Save Changes*!/*!/*/}\n      {/*        /!*  /!*  </Button>*!/*!/*/}\n      {/*        /!*  /!*</Modal.Footer>*!/*!/*/}\n\n      {/*        /!*</Modal>*!/*/}\n\n      {/*        /!*<CTable align=\"middle\" className=\"mb-0 border\" hover responsive>*!/*/}\n      {/*        /!*  <div style={{height: \"250px\"}} className=\"table-responsive\">*!/*/}\n      {/*        /!*    <CTableHead color=\"light\">*!/*/}\n      {/*        /!*      <CTableRow>*!/*/}\n      {/*        /!*        /!*<CTableHeaderCell className=\"text-center\">*!/*!/*/}\n      {/*        /!*        /!*  <CIcon icon={cilPeople} />*!/*!/*/}\n      {/*        /!*        /!*</CTableHeaderCell>*!/*!/*/}\n      {/*        /!*        <CTableHeaderCell>Country ID</CTableHeaderCell>*!/*/}\n      {/*        /!*        <CTableHeaderCell className=\"text-center\">Country Name</CTableHeaderCell>*!/*/}\n      {/*        /!*        <CTableHeaderCell>Code</CTableHeaderCell>*!/*/}\n      {/*        /!*        <CTableHeaderCell className=\"text-center\">Region Code</CTableHeaderCell>*!/*/}\n      {/*        /!*        <CTableHeaderCell>Currency Code</CTableHeaderCell>*!/*/}\n      {/*        /!*      </CTableRow>*!/*/}\n      {/*        /!*    </CTableHead>*!/*/}\n      {/*        /!*    <CTableBody>*!/*/}\n      {/*        /!*      {tableExample.map((item, index) => (*!/*/}\n      {/*        /!*        <CTableRow v-for=\"item in tableItems\" key={index}>*!/*/}\n      {/*        /!*          <CTableDataCell className=\"text-center\">*!/*/}\n      {/*        /!*            <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status}/>*!/*/}\n      {/*        /!*          </CTableDataCell>*!/*/}\n      {/*        /!*          <CTableDataCell>*!/*/}\n      {/*        /!*            <div>{item.user.name}</div>*!/*/}\n      {/*        /!*            <div className=\"small text-medium-emphasis\">*!/*/}\n      {/*        /!*              <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}*!/*/}\n      {/*        /!*              {item.user.registered}*!/*/}\n      {/*        /!*            </div>*!/*/}\n      {/*        /!*          </CTableDataCell>*!/*/}\n      {/*        /!*          <CTableDataCell className=\"text-center\">*!/*/}\n      {/*        /!*            <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name}/>*!/*/}\n      {/*        /!*          </CTableDataCell>*!/*/}\n      {/*        /!*          <CTableDataCell>*!/*/}\n      {/*        /!*            <div className=\"clearfix\">*!/*/}\n      {/*        /!*              <div className=\"float-start\">*!/*/}\n      {/*        /!*                <strong>{item.usage.value}%</strong>*!/*/}\n      {/*        /!*              </div>*!/*/}\n      {/*        /!*              <div className=\"float-end\">*!/*/}\n      {/*        /!*                <small className=\"text-medium-emphasis\">{item.usage.period}</small>*!/*/}\n      {/*        /!*              </div>*!/*/}\n      {/*        /!*            </div>*!/*/}\n      {/*        /!*            <CProgress thin color={item.usage.color} value={item.usage.value}/>*!/*/}\n      {/*        /!*          </CTableDataCell>*!/*/}\n      {/*        /!*          <CTableDataCell className=\"text-center\">*!/*/}\n      {/*        /!*            <CIcon size=\"xl\" icon={item.payment.icon}/>*!/*/}\n      {/*        /!*          </CTableDataCell>*!/*/}\n      {/*        /!*          <CTableDataCell>*!/*/}\n      {/*        /!*            <div className=\"small text-medium-emphasis\">Last login</div>*!/*/}\n      {/*        /!*            <strong>{item.activity}</strong>*!/*/}\n      {/*        /!*          </CTableDataCell>*!/*/}\n      {/*        /!*        </CTableRow>*!/*/}\n\n      {/*        /!*      ))}*!/*/}\n\n      {/*        /!*    </CTableBody>*!/*/}\n      {/*        /!*  </div>*!/*/}\n      {/*        /!*</CTable>*!/*/}\n\n      {/*      </CCardBody>*/}\n      {/*    </CCard>*/}\n      {/*  </CCol>*/}\n      {/*</CRow>*/}\n\n      {/*<EditCountries/>*/}\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React, {useEffect, useState} from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport {cilArrowBottom, cilArrowTop, cilFlightTakeoff, cilNotes, cilOptions} from '@coreui/icons'\nimport axios from \"axios\";\nimport {ipAddress , getCookieValue , tokenName} from \"../../utils/Common\";\nimport CountUp from \"react-countup\";\n\n\nconst WidgetsDropdown = () => {\n\n  const [numberOfInsurance, setNumberOfInsurance] = useState(0);\n  const [revinueFromInsurance, setRevinueFromInsurance] = useState(0);\n  const [numberOfAgentsInInsurance, setNumberOfAgentsInInsurance] = useState(0);\n  const [numberOfFlights, setNumberOfFlights] = useState(0);\n  const [revinueFromFlights, setRevinueFromFlights] = useState(0);\n\n  function getNumberOfFlights() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/getFlightStats\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n        // console.log(response);\n        if(!response.data.error)\n        {\n          console.log(response);\n          setNumberOfFlights(response.data.recordset[0].totalCount);\n          setRevinueFromFlights(response.data.recordset[0].totalAmount);\n        }\n\n      }).catch(e =>{\n      console.log(e)\n    })\n  }\n\n  function getNumberOfInsurance() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/insuranceCount\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n        // console.log(response);\n        if(!response.data.error)\n        {\n          setNumberOfInsurance(response.data.message[0].totalCount);\n\n        }\n\n      }).catch(e =>{\n      console.log(e)\n    })\n  }\n\n  function getRevinueFromInsurance() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/totalRevenueSpent\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n        // console.log(response);\n        if(!response.data.error)\n        {\n\n          setRevinueFromInsurance(response.data.recordset[0].totalAmt);\n\n        }\n\n      }).catch(e =>{\n      console.log(e)\n    })\n  }\n\n  function getNumberOfAgentsInInsurance() {\n    let token = getCookieValue(tokenName);\n    axios.get(ipAddress + \"admin/totalAgentCount\", {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        // localStorage.setItem(\"recordset\", JSON.stringify(response.data.recordset));\n        // console.log(response);\n        if(!response.data.error)\n        {\n\n          // console.log( response.data );\n          // let res = response.data.recordset[0].totalAgents;\n          // let formatted_value = '{:,}'.format(res);\n          setNumberOfAgentsInInsurance(response.data.recordset[0].totalAgents);\n\n        }\n\n      })\n  }\n\n\n\n  useEffect(() => {\n    // callLocalStorage();\n    getNumberOfInsurance();\n    getRevinueFromInsurance();\n    getNumberOfAgentsInInsurance();\n    getNumberOfFlights();\n  }, []);\n\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              <CIcon icon={cilNotes} style={{height: '28px'}} customClassName=\"nav-icon\" />\n              {' '}<CountUp start={0} end={numberOfInsurance} useIndianSeparators={true} />\n              {/*{numberOfInsurance}{' '}*/}\n              {/*<span className=\"fs-6 fw-normal\">*/}\n              {/*  (-12.4% <CIcon icon={cilArrowBottom} />)*/}\n              {/*</span>*/}\n            </>\n          }\n          title=\"Total Insurance\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n                events: ['none'],\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {'₹ '}<CountUp start={0} end={revinueFromInsurance} useIndianSeparators={true}/>\n              {/*{'₹ '}{revinueFromInsurance}*/}\n              {/*$6.200{' '}*/}\n              {/*<span className=\"fs-6 fw-normal\">*/}\n              {/*  (40.9% <CIcon icon={cilArrowTop} />)*/}\n              {/*</span>*/}\n            </>\n          }\n          title=\"Revenue From Insurance\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n                events: ['none'],\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              <CIcon icon={cilFlightTakeoff} style={{height: '28px'}}  customClassName=\"nav-icon\" />\n              {' '} <CountUp start={0} end={numberOfFlights} useIndianSeparators={true}/>{' '}\n              {/*<CountUp start={0} end={numberOfAgentsInInsurance} />{' '}*/}\n              {/*{numberOfAgentsInInsurance}{' '}*/}\n              {/*2.49{' '}*/}\n              {/*<span className=\"fs-6 fw-normal\">*/}\n              {/*  (84.7% <CIcon icon={cilArrowTop} />)*/}\n              {/*</span>*/}\n            </>\n          }\n          title=\"Number of Flights\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n                events: ['none'],\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {'₹ '}<CountUp start={0} end={revinueFromFlights} useIndianSeparators= {true}/>\n            </>\n          }\n          title=\"Revenue From Flights\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["Dashboard","console","log","countries","setCountries","useState","useEffect","show","setShow","CanvasJSChart","cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","cifUs","cibCcMastercard","cifBr","cibCcVisa","cifIn","cibCcStripe","cifFr","cibCcPaypal","cifEs","cibCcApplePay","cifPl","cibCcAmex","CanvasJSReact","weekSelected","setWeekSelected","monthSelected","setMonthSelected","yearSelected","setYearSelected","dropdown","setDropdown","yearDropdown","setYearDropdown","Date","getFullYear","graphTitle","setGraphTitle","getWeekGraph","getMonth","options","setOptions","animationEnabled","exportEnabled","theme","title","text","axisY","includeZero","interval","minimum","maximum","axisX","data","type","indexLabelFontColor","indexLabelPlacement","dataPoints","label","y","checkRadioButton","action","getCheckedRadioButton","month","token","getCookieValue","tokenName","axios","post","ipAddress","headers","concat","then","response","message","newOptions","catch","e","_jsxs","_Fragment","children","_jsx","WidgetsDropdown","CCard","className","CCardBody","CRow","Form","Check","inline","name","id","defaultChecked","onChange","disabled","defaultValue","target","value","map","x","year","getMonthsGraph","_ref","withCharts","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","display","scales","CCol","sm","lg","CWidgetStatsD","chart","CChart","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","icon","CIcon","height","values","style","color","cilCalendar","numberOfInsurance","setNumberOfInsurance","revinueFromInsurance","setRevinueFromInsurance","numberOfAgentsInInsurance","setNumberOfAgentsInInsurance","numberOfFlights","setNumberOfFlights","revinueFromFlights","setRevinueFromFlights","get","error","totalCount","getNumberOfInsurance","recordset","totalAmt","getRevinueFromInsurance","totalAgents","getNumberOfAgentsInInsurance","totalAmount","getNumberOfFlights","CWidgetStatsA","cilNotes","customClassName","CountUp","start","end","useIndianSeparators","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","CChartLine","pointBackgroundColor","getStyle","grid","drawBorder","ticks","min","max","events","cilFlightTakeoff","CChartBar","barPercentage","drawTicks"],"sourceRoot":""}