{"version":3,"file":"static/js/1522.63df637e.chunk.js","mappings":"qYAqLA,QA9JA,WACE,IAAI,SACFA,EAAQ,aACRC,EACAC,WAAW,OAACC,GAAO,MACnBC,IACEC,EAAAA,EAAAA,MAgCJ,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,iBAAkB,YAClBC,eAAgB,aAChBC,SAAA,EACAC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACL,MAAO,CACjBM,OAAQ,EACRC,QAAS,GACTJ,UACAC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,UAAU,yBAAwBN,UACtCC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEV,UACxBC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACL,UAAU,OAAMN,UACrBJ,EAAAA,EAAAA,MAACgB,EAAAA,GAAS,CAACN,UAAU,MAAKN,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gCAA+BN,UAC5CC,EAAAA,EAAAA,KAAA,OAAKY,IAAKC,EAAiBR,UAAU,YAChCT,MAAO,CAACE,eAAgB,YAAagB,OAAQ,OAAQC,MAAO,QAASC,IAAI,QAEhFhB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAACqB,UAAW,SAAUC,MAAO,OAAOnB,UAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBACnDC,EAAAA,EAAAA,KAAA,UACAL,EAAAA,EAAAA,MAACwB,EAAAA,GAAK,CAACC,SAAU9B,GAlD/B,SAAkB+B,GAEhB,GAAIA,EAAKC,cAAgBD,EAAKE,mBAE5B,YADAC,EAAAA,EAAAA,IAAW,uDAIb,IAAIC,GAAQC,EAAAA,EAAAA,IAAeC,EAAAA,IAE3BC,EAAAA,EAAMC,KAAKC,EAAAA,GAAY,kCAAmCT,EAAM,CAC9DU,QAAS,CACP,cAAgB,UAADC,OAAYP,GAC3B,aAAgB,sBAGjBQ,MAAMC,KACuB,IAAxBA,EAASb,KAAKc,OAEhB1C,KACA2C,EAAAA,EAAAA,IAAaF,EAASb,KAAKgB,WAE3Bb,EAAAA,EAAAA,IAAWU,EAASb,KAAKgB,QAC3B,IACCC,OAAMC,KAETf,EAAAA,EAAAA,IAAWe,EAAEF,QAAQ,GAEzB,IAuBsDtC,SAAA,EAgCtCJ,EAAAA,EAAAA,MAAC6C,EAAAA,GAAW,CAACnC,UAAU,OAAMN,SAAA,EAC3BC,EAAAA,EAAAA,KAACyC,EAAAA,GAAe,CAAA1C,UACdC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OAEf5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAAU,IACLxD,EAAS,cAAe,CAACyD,UAAU,IACvCC,KAAK,WACLC,YAAY,mBACZC,aAAa,oBAGhBzD,EAAO0D,cAAelD,EAAAA,EAAAA,KAAA,KAAGK,UAAU,cAAaN,SAAC,+BAElDJ,EAAAA,EAAAA,MAAC6C,EAAAA,GAAW,CAACnC,UAAU,OAAMN,SAAA,EAC3BC,EAAAA,EAAAA,KAACyC,EAAAA,GAAe,CAAA1C,UACdC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OAEf5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAAU,IACLxD,EAAS,cAAe,CAACyD,UAAU,IACvCC,KAAK,WACLC,YAAY,eACZC,aAAa,oBAGhBzD,EAAO8B,cAAetB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,cAAaN,SAAC,+BAElDJ,EAAAA,EAAAA,MAAC6C,EAAAA,GAAW,CAACnC,UAAU,OAAMN,SAAA,EAC3BC,EAAAA,EAAAA,KAACyC,EAAAA,GAAe,CAAA1C,UACdC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OAEf5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAAU,IACLxD,EAAS,qBAAsB,CAACyD,UAAU,IAC9CC,KAAK,WACLC,YAAY,uBACZC,aAAa,oBAGhBzD,EAAO+B,qBAAsBvB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,cAAaN,SAAC,+BAezDC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQN,UACrBC,EAAAA,EAAAA,KAACmD,EAAAA,GAAO,CAACvD,MAAO,CAACwD,gBAAiB,MAAOlC,MAAO,QAASmC,OAAQ,SAAUN,KAAK,SACvE7B,MAAM,UAASnB,SAAC,4BASvCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAc,MAGrB,C,mCCnLU,IAACV,EAAgB,CAAC,UAAW,6Q","sources":["views/dashboard/AdminChangePassword.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts"],"sourcesContent":["import {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow\n} from \"@coreui/react\";\nimport TDO_Logo from \"../../assets/images/full-logo.png\";\nimport Change_Password from \"../../assets/images/ChangePassword2.png\";\nimport CIcon from \"@coreui/icons-react\";\nimport {cilLockLocked, cilUser} from \"@coreui/icons\";\nimport {ToastContainer} from \"react-toastify\";\nimport React from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport axios from \"axios\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\nimport AdminLoginBackground from \"../../assets/images/travel.jpg\";\n\nfunction AdminChangePassword() {\n  let {\n    register,\n    handleSubmit,\n    formState: {errors},\n    reset\n  } = useForm()\n\n  function onSubmit(data) {\n    // Check if newPassword and confirmnewpassword match\n    if (data.newPassword !== data.confirmnewpassword) {\n      errorToast(\"New Password and Confirm New Password do not match.\");\n      return; // Exit the function to prevent the API call\n    }\n\n    let token = getCookieValue(tokenName);\n\n    axios.post(ipAddress + \"admin/midOffice-change-password\", data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content_Type': 'application-json',\n      }\n    })\n      .then((response) => {\n        if (response.data.error === false) {\n          // console.log(response.data)\n          reset();\n          successToast(response.data.message);\n        } else {\n          errorToast(response.data.message);\n        }\n      }).catch(e => {\n      // console.log(e)\n      errorToast(e.message);\n    });\n  }\n\n\n  return (\n    <div style={{\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '100% 100%',\n    }}>\n      <CContainer style={{\n        margin: 0,\n        padding: 0\n      }}>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <div className=\"d-flex justify-content-center\">\n                  <img src={Change_Password} className=\"rounded-3\"\n                       style={{backgroundSize: '100% 100%', height: '70px', width: '70px'}} alt=\"\"/>\n                </div>\n                <br/>\n                <h3 style={{textAlign: \"center\", color: \"red\"}}><b>Change Password</b></h3>\n                <br/>\n                <CForm onSubmit={handleSubmit(onSubmit)}>\n                  {/*<h1>Login</h1>*/}\n\n                  {/*<div className=\"d-flex justify-content-center\">*/}\n                  {/*  <p className=\"text-medium-emphasis\">Login to your account</p>*/}\n                  {/*</div>*/}\n\n                  {/*<CInputGroup className=\"mb-3\">*/}\n                  {/*  <CInputGroupText>*/}\n                  {/*    <CIcon icon={cilUser}/>*/}\n                  {/*  </CInputGroupText>*/}\n                  {/*  <CFormInput {...register('username', {required: 'This is a required field.'})}*/}\n                  {/*              type=\"text\"*/}\n                  {/*              placeholder=\"Username\"*/}\n                  {/*              autoComplete=\"username\"*/}\n                  {/*  />*/}\n                  {/*</CInputGroup>*/}\n                  {/*{errors.username && <p className='text-danger'>This is a required field.</p>}*/}\n\n\n                  {/* Email Code */}\n                  {/* <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput {\n                    ...register('email', {required: 'This is a required field.'})}\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    />\n                  </CInputGroup> */}\n\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked}/>\n                    </CInputGroupText>\n                    <CFormInput\n                      {...register('oldPassword', {required: true})}\n                      type=\"password\"\n                      placeholder=\"Current Password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n                  {errors.oldPassword && <p className='text-danger'>This is a required field.</p>}\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked}/>\n                    </CInputGroupText>\n                    <CFormInput\n                      {...register('newPassword', {required: true})}\n                      type=\"password\"\n                      placeholder=\"New Password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n                  {errors.newPassword && <p className='text-danger'>This is a required field.</p>}\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked}/>\n                    </CInputGroupText>\n                    <CFormInput\n                      {...register('confirmnewpassword', {required: true})}\n                      type=\"password\"\n                      placeholder=\"Confirm New Password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n                  {errors.confirmnewpassword && <p className='text-danger'>This is a required field.</p>}\n\n                  {/* Confirm Passowrd */}\n                  {/* <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                    {...register('newPassword', {required: 'This is a required field.'})}\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup> */}\n\n                  <div className=\"d-grid\">\n                    <CButton style={{backgroundColor: 'red', color: 'white', border: 'black'}} type='submit'\n                             color=\"success\">Change</CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n\n      <ToastContainer/>\n    </div>\n  )\n}\n\nexport default AdminChangePassword\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n"],"names":["register","handleSubmit","formState","errors","reset","useForm","_jsxs","style","backgroundRepeat","backgroundSize","children","_jsx","CContainer","margin","padding","CRow","className","CCol","md","lg","xl","CCard","CCardBody","src","Change_Password","height","width","alt","textAlign","color","CForm","onSubmit","data","newPassword","confirmnewpassword","errorToast","token","getCookieValue","tokenName","axios","post","ipAddress","headers","concat","then","response","error","successToast","message","catch","e","CInputGroup","CInputGroupText","CIcon","icon","cilLockLocked","CFormInput","required","type","placeholder","autoComplete","oldPassword","CButton","backgroundColor","border","ToastContainer"],"sourceRoot":""}