{"version":3,"file":"static/js/8676.fc42ddef.chunk.js","mappings":"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","sources":["views/dashboard/EditForm.js","views/dashboard/EditCountries.js"],"sourcesContent":["import {useForm} from \"react-hook-form\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport {ipAddress, getCookieValue, tokenName, successToast} from \"../../utils/Common\";\n\nconst EditForm = ({formValues}) => {\n  let navigate = useNavigate();\n  // console.log(formValues)\n  let {register, handleSubmit, formState: {errors}} = useForm({\n    defaultValues: formValues\n  });\n\n  async function onSubmit(data) {\n    // console.log(data)\n    try {\n      let token = getCookieValue(tokenName);\n      let res = await axios.put(ipAddress + \"admin/updateCountry\", data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content_Type': 'application-json',\n        }\n      })\n      console.log(res)\n\n      if(res.data.responseCode == 2)\n      {\n        successToast(\"Edit Successfully\");\n        setTimeout(() => navigate(\"/adminmanagecountries\"), 1500)\n      }\n      else\n      {\n        alert(\"Error while deleting\");\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input {...register('CountryId', {required: true})} placeholder=\"Country Name\" type=\"hidden\" id=\"name\"\n               className=\"form-control\"/>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"name\">Country Name</label>\n          <input {...register('Name', {required: true})} placeholder=\"Country Name\" type=\"text\" id=\"name\"\n                 className=\"form-control\"/>\n\n          {errors.Name && <p className='text-danger'>This is a required field.</p>}\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"code\">Country Code</label>\n          <input {...register('Code', {required: true})} placeholder=\"Country Code\" maxLength={5} type=\"text\" id=\"code\"\n                 className=\"form-control\"/>\n\n          {errors.Code && <p className='text-danger'>This is a required field.</p>}\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"region\">Region Code</label>\n          <input {...register('RegionCode', {required: true})} placeholder=\"Region Code\" type=\"text\" id=\"region\"\n                 className=\"form-control\"/>\n\n          {errors.RegionCode && <p className='text-danger'>This is a required field.</p>}\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"currency\">Currency Code</label>\n          <input {...register('CurrencyCode', {required: true})} placeholder=\"Currency Code\" type=\"text\"\n                 id=\"currency\"\n                 className=\"form-control\"/>\n\n          {errors.CurrencyCode && <p className='text-danger'>This is a required field.</p>}\n        </div>\n\n        <hr/>\n\n        <div className=\"mb d-flex justify-content-between align-items-center\">\n          <Button variant=\"primary\" type=\"submit\" className=\"ml-auto\">\n            Edit Info\n          </Button>\n        </div>\n      </form>\n    </>\n  )\n}\nexport default EditForm\n","import {useForm} from \"react-hook-form\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport EditForm from \"./EditForm\";\n\nconst EditCountries = () => {\n  let location = useLocation()\n  let navigate = useNavigate()\n\n  let [formValues, setFormValues] = useState({})\n  let [isDataFetched, setIsDataFetched] = useState(false)\n  useEffect(() => {\n    // console.log(location.state)\n    if(!location.state) {\n      navigate(\"/dashboard\")\n    } else {\n      // console.log(location.state.data)\n      setFormValues(location.state.data)\n      setIsDataFetched(true)\n    }\n  }, [])\n  let {register, handleSubmit, formState: {errors}} = useForm();\n\n  return(\n    <>\n      {\n        isDataFetched &&  <EditForm formValues={formValues}/>\n      }\n    </>\n  )\n}\nexport default EditCountries\n"],"names":["_ref","formValues","navigate","useNavigate","register","handleSubmit","formState","errors","useForm","defaultValues","_jsx","_Fragment","children","_jsxs","onSubmit","async","data","token","getCookieValue","tokenName","res","axios","put","ipAddress","headers","concat","console","log","responseCode","successToast","setTimeout","alert","e","required","placeholder","type","id","className","htmlFor","Name","maxLength","Code","RegionCode","CurrencyCode","Button","variant","EditCountries","location","useLocation","setFormValues","useState","isDataFetched","setIsDataFetched","useEffect","state","EditForm"],"sourceRoot":""}