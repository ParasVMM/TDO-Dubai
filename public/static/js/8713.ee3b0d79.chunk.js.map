{"version":3,"file":"static/js/8713.ee3b0d79.chunk.js","mappings":"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","sources":["views/dashboard/AgentsGroup/TableUserGroups.js","views/dashboard/AgentsGroup/GroupForm.js","views/dashboard/AgentsGroup/GroupFormEdit.js","views/dashboard/AgentsGroup/ManageAgentsGroup.js","views/dashboard/agents/FilterComponent.js"],"sourcesContent":["import React, {useMemo} from \"react\";\nimport DataTable from 'react-data-table-component';\nimport FilterComponent from \"../agents/FilterComponent\";\nimport {customStyles} from \"../../../utils/Common\"\n\nconst TableAgents = (props) => {\n  const columns = [\n    {\n      name: \"GroupName\",\n      selector: row => row.GroupName,\n      sortable: true,\n    },\n    {\n      name: \"Description\",\n      selector: row => row.Description,\n      sortable: true,\n      width: '220px'\n    },\n    {\n      name: \"CreatedDate\",\n      selector: row => row.CreatedDate,\n      sortable: true,\n      width: '160px'\n    },\n    {\n      name: \"CreatedBy\",\n      selector: row => row.CreatedBy,\n      sortable: true\n    },\n    {\n      name: \"UpdatedDate\",\n      selector: row => row.UpdatedDate,\n      sortable: true,\n      width: '160px'\n    },\n    {\n      name: \"UpdatedBy\",\n      selector: row => row.UpdatedBy,\n      sortable: true,\n      width: '180px'\n    },\n    {\n      button: true,\n      cell: row => <>\n        <button title=\"Edit User Group\" onClick={() => props.showDataInModal(row)} className=\"btn btn-link\">\n          <i className=\"fa fa-user-edit\"></i>\n        </button>\n\n        <button title=\"Delete User Group\" onClick={() => props.deleteHandler(row.GroupID)} className=\"btn btn-link\">\n          <i className=\"fa fa-trash\"></i>\n        </button>\n      </>\n    },\n  ];\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const filteredItems = props.data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <>\n        <FilterComponent\n          onFilter={e => setFilterText(e.target.value)}\n          onClear={handleClear}\n          filterText={filterText}\n        />\n      </>\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={filteredItems}\n        striped\n        pagination\n        subHeader\n        subHeaderComponent={subHeaderComponent}\n        customStyles={customStyles}\n      />\n    </>\n  )\n}\nexport default TableAgents;\n","import axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport Button from \"react-bootstrap/Button\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../../utils/Common\";\nimport React from \"react\";\n\nconst GroupForm = ({FetchUserGroups}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {errors}\n  } = useForm();\n\n  async function onSubmit(data) {\n    try {\n      const token = getCookieValue(tokenName);\n      const res = await axios.post(ipAddress + \"admin/user-group2\", data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        }\n      })\n      // console.log(res)\n      // console.log(res.data)\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message)\n      } else if (res.status === 200 && !res.data.error) {\n        FetchUserGroups();\n        successToast(res.data.message)\n      }\n    } catch\n      (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* Group Name */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"GroupName\">Group Name <span className=\"text-danger\">*</span></label>\n          <input type=\"text\" id=\"GroupName\" name=\"GroupName\" className=\"form-control\"\n                 {...register('GroupName', {\n                   required: \"This is a required field.\",\n                   validate: value => !/<|>/.test(value) || 'Name cannot contain \"<\" or \">\"'\n                 })}\n          />\n\n          {errors?.GroupName && <p className='text-danger'>{errors?.GroupName?.message}</p>}\n        </div>\n\n        {/* Group Name */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"Description\">Description <span className=\"text-danger\">*</span></label>\n          <input type=\"text\" id=\"Description\" name=\"Description\" className=\"form-control\"\n                 {...register('Description', {\n                   required: \"This is a required field.\",\n                   validate: value => !/<|>/.test(value) || 'Name cannot contain \"<\" or \">\"'\n                 })}\n          />\n\n          {errors?.Description && <p className='text-danger'>{errors?.Description?.message}</p>}\n        </div>\n\n        <button className=\"btn btn-primary px-5\">Create</button>\n      </form>\n    </>\n  )\n}\nexport default GroupForm;\n","import axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport Button from \"react-bootstrap/Button\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../../utils/Common\";\nimport React from \"react\";\n\nconst GroupForm = ({userGroup, FetchUserGroups}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {errors}\n  } = useForm({defaultValues: userGroup});\n\n  async function onSubmit(data) {\n    try {\n      const token = getCookieValue(tokenName);\n      const res = await axios.put(ipAddress + \"admin/user-group2/\" + data.GroupID, data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        }\n      })\n      // console.log(res)\n      // console.log(res.data)\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message)\n      } else if (res.status === 200 && !res.data.error) {\n        FetchUserGroups();\n        successToast(res.data.message)\n      }\n    } catch\n      (e) {\n      // console.log(e)\n      errorToast(e.message)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* Group Name */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"GroupName\">Group Name <span className=\"text-danger\">*</span></label>\n          <input type=\"text\" id=\"GroupName\" name=\"GroupName\" className=\"form-control\" readOnly\n                 {...register('GroupName', {\n                   required: \"This is a required field.\",\n                   validate: value => !/<|>/.test(value) || 'Name cannot contain \"<\" or \">\"'\n                 })}\n          />\n\n          {errors?.GroupName && <p className='text-danger'>{errors?.GroupName?.message}</p>}\n        </div>\n\n        {/* Group Name */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"Description\">Description <span className=\"text-danger\">*</span></label>\n          <input type=\"text\" id=\"Description\" name=\"Description\" className=\"form-control\"\n                 {...register('Description', {\n                   required: \"This is a required field.\",\n                   validate: value => !/<|>/.test(value) || 'Name cannot contain \"<\" or \">\"'\n                 })}\n          />\n\n          {errors?.Description && <p className='text-danger'>{errors?.Description?.message}</p>}\n        </div>\n\n        <button className=\"btn btn-primary px-5\">Create</button>\n      </form>\n    </>\n  )\n}\nexport default GroupForm;\n","import axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport TableUserGroups from \"./TableUserGroups\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../../utils/Common\";\nimport Modal from \"react-bootstrap/Modal\";\nimport GroupForm from \"./GroupForm\";\nimport GroupFormEdit from \"./GroupFormEdit\";\n\nconst ManageAgentsGroup = () => {\n  const [groups, setGroups] = useState(null)\n\n  async function FetchUserGroups() {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/user-group2\";\n\n      let res = await axios.get(url, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res);\n      // console.log(res.data.error);\n      // console.log(res.data.recordset);\n\n      if (res.status === 200 && !res.data.error) {\n        setGroups(res.data.recordset);\n      }\n    } catch (e) {\n      errorToast(e.message);\n    }\n  }\n\n  useEffect(() => {\n    FetchUserGroups().then();\n  }, []);\n\n  /* ------------------------------------- */\n\n  const deleteHandler = async (GroupID) => {\n    if (confirm(\"Are you sure?\")) {\n      try {\n        let token = getCookieValue(tokenName);\n        let url = ipAddress + \"admin/user-group2/\" + GroupID;\n\n        let res = await axios.delete(url, {\n          headers: {'Authorization': `Bearer ${token}`}\n        });\n\n        if (res.status === 200 && res.data.error) {\n          errorToast(res.data.message);\n        } else if (res.status === 200 && !res.data.error) {\n          FetchUserGroups().then();\n          successToast(res.data.message);\n        }\n      } catch (e) {\n        errorToast(e.message);\n      }\n    }\n  };\n\n  /* ------------------------------------- */\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /* ------------------------------------- */\n  const [showEdit, setShowEdit] = useState(false);\n  const handleCloseEdit = () => setShowEdit(false);\n  const handleShowEdit = () => setShowEdit(true);\n\n  const [userGroup, setUserGroup] = useState(null);\n\n  const showDataInModal = (row) => {\n    setUserGroup(row);\n    handleShowEdit();\n  }\n\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"card-header-bg\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <h4 className=\"mb-0 primary-color\">User Group</h4>\n            </div>\n\n            <div className=\"col-4 text-end\">\n              <button onClick={handleShow} className=\"btn btn-primary btn-sm\">\n                Add User Group <i className=\"fa fa-plus\"></i>\n              </button>\n            </div>\n          </div>\n        </CCardHeader>\n\n        <CCardBody>\n          {groups ? groups.length > 0 &&\n            <TableUserGroups data={groups} deleteHandler={deleteHandler} showDataInModal={showDataInModal}/> :\n            <div className=\"text-center\">\n              <i className=\"spinner spinner-border\"></i>\n            </div>\n          }\n        </CCardBody>\n      </CCard>\n\n      {/* Modal - Create User Group */}\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Create User Group</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <GroupForm FetchUserGroups={FetchUserGroups}/>\n        </Modal.Body>\n      </Modal>\n\n      {/* Modal - Edit/Update User Group */}\n      <Modal show={showEdit} onHide={handleCloseEdit} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit User Group</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <GroupFormEdit userGroup={userGroup} FetchUserGroups={FetchUserGroups}/>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\nexport default ManageAgentsGroup;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.small ? 5 : undefined\n}))`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <Input\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Filter table data...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton className=\"bg-dark text-white\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n"],"names":["props","columns","name","selector","row","GroupName","sortable","Description","width","CreatedDate","CreatedBy","UpdatedDate","UpdatedBy","button","cell","_jsxs","_Fragment","children","_jsx","title","onClick","showDataInModal","className","deleteHandler","GroupID","filterText","setFilterText","React","resetPaginationToggle","setResetPaginationToggle","filteredItems","data","filter","item","JSON","stringify","toLowerCase","indexOf","subHeaderComponent","useMemo","FilterComponent","onFilter","e","target","value","onClear","handleClear","DataTable","striped","pagination","subHeader","customStyles","_ref","_errors$GroupName","_errors$Description","FetchUserGroups","register","handleSubmit","formState","errors","useForm","onSubmit","async","token","getCookieValue","tokenName","res","axios","post","ipAddress","headers","concat","status","error","errorToast","message","successToast","htmlFor","type","id","required","validate","test","userGroup","defaultValues","put","readOnly","ManageAgentsGroup","groups","setGroups","useState","url","get","recordset","useEffect","then","show","setShow","showEdit","setShowEdit","setUserGroup","CCard","CCardHeader","handleShow","CCardBody","length","TableUserGroups","confirm","delete","Modal","onHide","handleClose","centered","Header","closeButton","Title","Body","GroupForm","handleCloseEdit","GroupFormEdit","Input","styled","input","attrs","size","small","undefined","_templateObject","_taggedTemplateLiteral","ClearButton","_templateObject2","placeholder","onChange"],"sourceRoot":""}