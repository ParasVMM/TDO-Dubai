{"version":3,"file":"static/js/4105.8cbc8569.chunk.js","mappings":"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","sources":["components/forms/AuthorizedSignatoryDetails.js","components/forms/Documents.js","views/dashboard/agents/AgentDetails.js","../node_modules/@hookform/error-message/src/ErrorMessage.tsx"],"sourcesContent":["import axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport {ErrorMessage} from \"@hookform/error-message\"\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../utils/Common\";\n\nconst AuthorizedSignatoryDetails = ({agent, ReadAgentDetails, handleClose}) => {\n  // console.log(agent);\n  const {\n    register,\n    handleSubmit,\n    formState: {errors}\n  } = useForm({defaultValues: agent});\n\n  const onSubmit = async (data) => {\n    try {\n      const token = getCookieValue(tokenName);\n\n      const res = await axios.post(ipAddress + \"admin/update-agent-details\", data, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (res.status === 200) {\n        // console.log(res.data);\n\n        if (res.data.error) {\n          errorToast(res.data.message);\n        } else {\n          successToast(res.data.message);\n          ReadAgentDetails(agent?.AspNetUserId);\n          handleClose();\n        }\n      }\n    } catch (e) {\n      errorToast(e.message)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"border border-light shadow rounded p-3\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"row\">\n            <div className=\"col-md-12 mb-2\">\n              <h5 style={{color: '#FF0000'}}>Authorized Signatory Details</h5>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">First Name</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('FirstName', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"FirstName\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Last Name</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('LastName', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"LastName\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Email Id</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('Email', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"Email\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Mobile Number</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('PhoneNumber', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"PhoneNumber\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Whatsapp Number</label>\n              <input type=\"text\" className=\"form-control\" {...register('WhatsappNumber')}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Alternate Number</label>\n              <input type=\"text\" className=\"form-control\" {...register('AlternateNumber')}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Address Line 1</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('Address', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"Address\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">City</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('City', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"City\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">State</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('State', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"State\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Country</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('Country', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"Country\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Postal Code</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('PinCode', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"PinCode\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-12 mb-2 mt-2\">\n              <h5 style={{color: '#FF0000'}}>Business Details</h5>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">Agency Name</label>\n              <input type=\"text\" className=\"form-control\"\n                     {...register('CompanyName', {required: 'This field is required.'})}/>\n\n              <ErrorMessage errors={errors} name=\"CompanyName\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"\">GST Number</label>\n              <input type=\"text\"\n                     className=\"form-control\" {...register('GSTNumber')}/>\n            </div>\n\n            <div className=\"col-md-4 mb-3\">\n              <label htmlFor=\"BusinessType\">Business Type</label>\n              <select name=\"BusinessType\" id=\"BusinessType\" className=\"form-select\"\n                      {...register('BusinessType', {required: 'This field is required.'})}>\n                <option value=\"Proprietor\">Proprietor</option>\n                <option value=\"Partnership\">Partnership</option>\n                <option value=\"Company/LLP/Private Limited\">Company/LLP/Private Limited</option>\n              </select>\n\n              <ErrorMessage errors={errors} name=\"BusinessType\"\n                            render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n            </div>\n\n            <div className=\"col-12 text-center mt-2\">\n              <button className=\"btn btn-success w-100 text-white\">Update</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\nexport default AuthorizedSignatoryDetails;\n","import axios from \"axios\";\nimport {useForm} from \"react-hook-form\";\nimport {ErrorMessage} from \"@hookform/error-message\"\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName, panRegex, gstRegex} from \"../../utils/Common\";\nimport {useState} from \"react\";\n\nconst Documents = ({agent, ReadAgentDetails, handleClose}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {errors},\n    setError,\n    clearErrors,\n    reset\n  } = useForm();\n\n  const [btnClicked, setBtnClicked] = useState(false);\n\n  const onSubmit = async (data) => {\n    try {\n      // console.log(agent)\n      data[\"UserId\"] = agent?.UserId;\n      let formData = new FormData();\n      formData.append(\"data\", JSON.stringify(data));\n      formData.append(\"UploadDocument\", data.UploadDocument[0])\n\n      setBtnClicked(true);\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/update-agent-document\";\n\n      let res = await axios.post(url, formData, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n\n      setBtnClicked(false);\n      if (res.status === 200) {\n        // console.log(res.data);\n\n        if (res.data.error) {\n          errorToast(res.data.message);\n        } else {\n          reset();\n          handleClose();\n          successToast(res.data.message);\n          ReadAgentDetails(agent?.AspNetUserId);\n        }\n      }\n    } catch (e) {\n      errorToast(e.message);\n      setBtnClicked(false);\n    }\n  }\n\n  const [documentType, setDocumentType] = useState(\"\")\n\n  const checkDocumentType = (document_type) => {\n    if (!document_type) {\n      setDocumentType(\"\");\n      setError(\"DocumentType\", {\n        type: \"required\",\n        message: \"This field is required.\",\n      })\n    } else {\n      clearErrors(\"DocumentType\");\n      setDocumentType(document_type);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* Document Type */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"DocumentType\">Document Type</label>\n          <select name=\"DocumentType\" id=\"DocumentType\" className=\"form-select\"\n                  {...register(\"DocumentType\", {required: 'This field is required.'})}\n                  onChange={(e => checkDocumentType(e.target.value))}>\n            <option value=\"\">Please Select</option>\n            <option value=\"PanCard\">Pan Card</option>\n            <option value=\"AddressProof\">Address Proof</option>\n            <option value=\"AddressProof2\">Address Proof 2</option>\n            <option value=\"TDSCertificate\">TDS Certificate</option>\n            <option value=\"GSTCertificate\">GST Certificate</option>\n          </select>\n\n          <ErrorMessage errors={errors} name=\"DocumentType\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>\n\n        {/* TDSCertificate */}\n        {documentType === \"TDSCertificate\" && <div className=\"mb-3\">\n          <label htmlFor=\"TdsNumber\">TDS Percentage</label>\n          <input type=\"number\" id=\"TdsNumber\" name=\"TdsNumber\" className=\"form-control\" min={0} max={100}\n                 {...register('TdsNumber', {required: 'This field is required.'})}/>\n\n          <ErrorMessage errors={errors} name=\"TdsNumber\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {/* PanCard */}\n        {documentType === \"PanCard\" && <div className=\"mb-3\">\n          <label htmlFor=\"PanNumber\">Document Number</label>\n          <input type=\"text\" id=\"PanNumber\" name=\"PanNumber\" className=\"form-control\"\n                 {...register('PanNumber', {\n                     required: 'This field is required.',\n                     pattern: {\n                       value: panRegex,\n                       message: 'Invalid PAN format. It should be 5 uppercase letters, followed by 4 digits and 1 uppercase letter.',\n                     }\n                   }\n                 )}\n          />\n\n          <ErrorMessage errors={errors} name=\"PanNumber\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {/* GST Certificate */}\n        {documentType === \"GSTCertificate\" && <div className=\"mb-3\">\n          <label htmlFor=\"GstNumber\">Document Number</label>\n          <input type=\"text\" id=\"GstNumber\" name=\"GstNumber\" className=\"form-control\"\n                 {...register('GstNumber', {\n                     required: 'This field is required.',\n                     pattern: {\n                       value: gstRegex,\n                       message: 'Invalid GST format. It should be a 15-character alphanumeric string with a specific format.',\n                     },\n                   }\n                 )}\n          />\n\n          <ErrorMessage errors={errors} name=\"GstNumber\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {documentType === \"AddressProof\" && <label htmlFor=\"AddressProof\">Address Proof Type</label>}\n        {documentType === \"AddressProof2\" && <label htmlFor=\"AddressProof\">Second Address Proof Type</label>}\n\n        {/* AddressProof / AddressProof2 */}\n        {(documentType === \"AddressProof\" || documentType === \"AddressProof2\") && <div className=\"mb-3\">\n          <select name=\"AddressProof\" id=\"AddressProof\" className=\"form-select\"\n                  {...register('AddressProof', {required: 'This field is required.'})}>\n            <option value=\"\">Please Select</option>\n            <option value=\"Aadhaar Number\">Aadhaar Number</option>\n            <option value=\"Passport\">Passport</option>\n            <option value=\"Driving License\">Driving License</option>\n            <option value=\"Voter Id\">Voter Id</option>\n            <option value=\"Ration Card with Address\">Ration Card with Address</option>\n            <option value=\"Vehicle Registration Certificate\">\n              Vehicle Registration Certificate\n            </option>\n            <option value=\"Credit Card Statement\">Credit Card Statement</option>\n            <option value=\"Utility Bill - Electricity, Telephone, Mobile\">\n              Utility Bill - Electricity, Telephone, Mobile\n            </option>\n            <option value=\"Shop Establishment or Trade License\">\n              Shop Establishment or Trade License\n            </option>\n            <option value=\"Utility Bill of office Address - Electricity, Telephone, Mobile\">\n              Utility Bill of office Address - Electricity, Telephone, Mobile\n            </option>\n            <option value=\"Registered Sale / Lease Agreement / Rent Agreement with Notary\">\n              Registered Sale / Lease Agreement / Rent Agreement with Notary\n            </option>\n            <option value=\"Latest Bank Statement -Not more than 3 month old\">\n              Latest Bank Statement -Not more than 3 month old\n            </option>\n            <option value=\"Udyog Aadhaar\">Udyog Aadhaar</option>\n            <option value=\"Certificate of Incorporation\">Certificate of Incorporation</option>\n            <option value=\"Partnership Deed with office location\">Partnership Deed with office location</option>\n          </select>\n\n          <ErrorMessage errors={errors} name=\"AddressProof\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>}\n\n        {/* Upload Document */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"UploadDocument\">Upload Document</label>\n          <input type=\"file\" id=\"UploadDocument\" name=\"UploadDocument\"\n                 className=\"form-control\" accept=\".png, .jpg, .jpeg, .pdf\"\n                 {...register('UploadDocument', {required: 'This field is required.'})}/>\n\n          <ErrorMessage errors={errors} name=\"UploadDocument\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>\n\n        {/* Remarks */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"Remarks\">Remarks</label>\n          <textarea name=\"Remarks\" id=\"Remarks\" className=\"form-control\"\n                    {...register('Remarks', {required: 'This field is required.'})}/>\n\n          <ErrorMessage errors={errors} name=\"Remarks\"\n                        render={({message}) => <p className=\"text-danger\">{message}</p>}/>\n        </div>\n\n        <div className=\"col-12 text-center mt-2\">\n          <button disabled={btnClicked} className=\"btn bg-btn w-100 text-white\">Update</button>\n        </div>\n      </form>\n    </>\n  )\n}\nexport default Documents;\n","import {useLocation, useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {CCard, CCardHeader, CCardBody} from \"@coreui/react\";\nimport {errorToast, getCookieValue, ipAddress, successToast, tokenName} from \"../../../utils/Common\";\nimport AuthorizedSignatoryDetails from \"../../../components/forms/AuthorizedSignatoryDetails\";\nimport Documents from \"../../../components/forms/Documents\";\n\nconst AgentDetails = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [agent, setAgent] = useState(null);\n\n  async function ReadAgentDetails(UserId) {\n    try {\n      // console.log(\"UserId \", UserId)\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/getCompanyDetailByUserId/\" + UserId\n\n      let res = await axios.post(url, {}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n\n      // console.log(\"Agent Info. Fetched\");\n      // console.log(res.data.recordset[0]);\n      if (res.status === 200 && !res.data.error) {\n        // console.log(res.data.recordset[0]);\n        setAgent(res.data.recordset[0]);\n      }\n    } catch (e) {\n      errorToast(e.message)\n    }\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (!location.state) {\n      navigate(\"/manage-agents\");\n    } else {\n      // console.log(location.state)\n      ReadAgentDetails(location.state).then();\n    }\n  }, [location]);\n\n  function FormatDate(originalDate) {\n    const date = new Date(originalDate);\n    const formattedDate = date.toISOString().split('T')[0];\n    const formattedTime = date.toTimeString().split(' ')[0].slice(0, 5);\n    const result = `${formattedDate} ${formattedTime}`;\n    return result;\n  }\n\n  async function ActivateAgent(UserId, AspNetUserId) {\n    if (confirm('Are you sure?')) {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/activate-agent\"\n\n      let res = await axios.post(url, {Id: UserId[0]}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res.data);\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message);\n      }\n      if (res.status === 200 && !res.data.error) {\n        successToast(res.data.message);\n        ReadAgentDetails(AspNetUserId).then();\n      }\n    }\n  }\n\n  async function InactiveAgent(UserId, AspNetUserId) {\n    if (confirm('Are you sure?')) {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/deactivate-agent\"\n\n      let res = await axios.post(url, {Id: UserId[0]}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res);\n      // console.log(res.data);\n\n      if (res.status === 200 && res.data.error) {\n        errorToast(res.data.message);\n      }\n      if (res.status === 200 && !res.data.error) {\n        successToast(res.data.message);\n        ReadAgentDetails(AspNetUserId).then();\n      }\n    }\n  }\n\n  /* Edit Modal */\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /* Modal - Edit Documents */\n  const [showDocuments, setShowDocuments] = useState(false);\n  const handleCloseDocuments = () => setShowDocuments(false);\n  const handleShowDocuments = () => setShowDocuments(true);\n\n  /* Modal - Document History */\n  const [showDocumentsHistory, setShowDocumentsHistory] = useState(false);\n  const handleCloseDocumentsHistory = () => setShowDocumentsHistory(false);\n  const handleShowDocumentsHistory = () => setShowDocumentsHistory(true);\n\n  /* ------------------------------------------------------------------ */\n\n  const [documentsData, setDocumentsData] = useState(null);\n\n  async function ReadDocumentHistory(UserId) {\n    try {\n      let token = getCookieValue(tokenName);\n      let url = ipAddress + \"admin/old-document-bank\";\n\n      let res = await axios.post(url, {UserId: UserId}, {\n        headers: {'Authorization': `Bearer ${token}`}\n      });\n      // console.log(res);\n\n      if (res.status === 200) {\n        if (res.data.error) {\n          errorToast(res.data.message);\n        } else {\n          // console.log(res.data.recordset);\n          setDocumentsData(res.data.recordset);\n          handleShowDocumentsHistory();\n        }\n      }\n    } catch (e) {\n      errorToast(e.message);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"mb-3\">\n        <button className=\"btn btn-primary me-2\" onClick={() => ReadDocumentHistory(agent?.UserId)}>\n          Document History\n        </button>\n\n        <a href=\"https://services.gst.gov.in/services/searchtp\" target=\"_blank\" className=\"btn btn-primary\">\n          GST Verification\n        </a>\n      </div>\n\n      {/* Authorized Signatory Details */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 className=\"mb-0 primary-color\">Authorized Signatory Details</h4>\n            </div>\n            <div className=\"col-6 text-end\">\n              <button onClick={handleShow} className=\"btn btn-success px-3 btn-sm text-white\">\n                <i className=\"fa fa-edit\"></i> Edit Details\n              </button>\n            </div>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>User Status: {!agent ? '' : agent?.IsActive ?\n                <span className=\"badge bg-success text-white\">Active</span> :\n                <span className=\"badge bg-danger text-white\">InActive</span>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Registration Date: <b>{agent?.CreatedOn && FormatDate(agent?.CreatedOn)}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4 text-end\">\n              {!agent ? '' : agent?.IsActive === false ?\n                <button onClick={() => ActivateAgent(agent?.UserId, agent?.AspNetUserId)}\n                        className=\"btn btn-outline-success btn-sm px-4\">\n                  Activate\n                </button> :\n                <button onClick={() => InactiveAgent(agent?.UserId, agent?.AspNetUserId)}\n                        className=\"btn btn-outline-danger btn-sm px-3\">\n                  <i className=\"fas fa-times\"></i> Inactive\n                </button>\n              }\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>First Name: <b>{agent?.FirstName}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Last Name: <b>{agent?.LastName}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Email Id: <b>{agent?.Email}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Mobile Number: <b>{agent?.PhoneNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Whatsapp Number: <b>{agent?.WhatsappNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Alternate Number: <b>{agent?.AlternateNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Address Line 1: <b>{agent?.Address}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>City: <b>{agent?.City}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>State: <b>{agent?.State}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p className=\"mb-md-0\">Country: <b>{agent?.Country}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p className=\"mb-0 mb-md-0\">Postal Code: <b>{agent?.PinCode}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <h4 className=\"mb-0 primary-color\">Access Details</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>User Name: <b>{agent?.Email}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Agency Id: <b>{agent?.CompanyId}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Group Type: <b>{agent?.GroupType}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <h4 className=\"mb-0 primary-color\">Agency Details</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>Agency Name: <b>{agent?.CompanyName}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Nature of Business: <b>{agent?.NatureOfBusiness}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Business Type: <b>{agent?.BusinessType}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>PAN Number: <b>{agent?.PANNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>TDS Exemption: <b>{agent?.TDSExemption}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>TDS (% for exemption): <b>{agent?.TDSPercentage}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>IATA No.: <b>{agent?.IATACode}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Referenced By: <b>{agent?.ReferencedBy}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Name or ID:</p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>GST Number: <b>{agent?.GSTNumber}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Sales Executive Name:</p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Payment Type: <b>{agent?.PaymentType}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {/* Account Info */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <h4 className=\"mb-0 primary-color\">Account Info</h4>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 mb-md-0 col-md-4\">\n              <p>Total Balance: <b>{agent?.TotalBalance}</b></p>\n            </div>\n\n            <div className=\"mb-3 mb-md-0 col-md-4\">\n              <p>Credit Limit: <b>{agent?.TotalCreditLimit}</b></p>\n            </div>\n\n            <div className=\"mb-0 col-md-4\">\n              <p>Due Amount: <b>{agent?.DueAmount}</b></p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {/* Documents */}\n      <CCard className=\"mb-4\">\n        <CCardHeader className=\"\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 className=\"mb-0 primary-color\">Documents</h4>\n            </div>\n            <div className=\"col-6 text-end\">\n              <button onClick={handleShowDocuments} className=\"btn btn-success px-3 btn-sm text-white\">\n                <i className=\"fa fa-edit\"></i> Update Document\n              </button>\n            </div>\n          </div>\n        </CCardHeader>\n        <CCardBody>\n          <div className=\"row\">\n            <div className=\"mb-3 col-md-4\">\n              <p>Agency Logo: {agent?.AgencyLogo ?\n                <a href={ipAddress + agent?.AgencyLogo}\n                   target=\"_blank\" className=\"file-link\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Profile Picture: {agent?.ProfilePicture ?\n                <a href={ipAddress + \"uploads/\" + agent?.ProfilePicture}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>PAN: {agent?.PANNumberDocument ?\n                <a href={ipAddress + \"uploads/\" + agent?.PANNumberDocument}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a>\n                :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>TDS Certificate: {agent?.TDSCertificate ?\n                <a href={ipAddress + \"uploads/\" + agent?.TDSCertificate}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a>\n                :\n                <b>Not Available</b>}</p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>GST Certificate: {agent?.GSTCertificate ?\n                <a href={ipAddress + \"uploads/\" + agent?.GSTCertificate}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\"></div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Address Document Type: <b>{agent?.AddressProof}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Address Proof Type: {agent?.AddressProofDocument ?\n                <a href={ipAddress + \"uploads/\" + agent?.AddressProofDocument}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}\n              </p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\"></div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Second Address Document\n                Type: <b>{agent?.SecondAddressProof ? agent?.SecondAddressProof : 'Not Available'}</b></p>\n            </div>\n\n            <div className=\"mb-3 col-md-4\">\n              <p>Second Address Proof Type: {agent?.SecondAddressProofDocument ?\n                <a href={ipAddress + \"uploads/\" + agent?.SecondAddressProofDocument}\n                   target=\"_blank\">View&nbsp;/&nbsp;Download</a> :\n                <b>Not Available</b>}</p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n\n      {/* Modal - Authorized Signatory Details */}\n      <Modal show={show} onHide={handleClose} centered fullscreen size=\"lg\">\n        <Modal.Header closeButton>\n          <h4>Update Details</h4>\n        </Modal.Header>\n        <Modal.Body>\n          <AuthorizedSignatoryDetails agent={agent} ReadAgentDetails={ReadAgentDetails} handleClose={handleClose}/>\n        </Modal.Body>\n      </Modal>\n\n      {/* Modal - Update Document */}\n      <Modal show={showDocuments} onHide={handleCloseDocuments} centered>\n        <Modal.Header closeButton>\n          <h4 className=\"mb-0 primary-color\">Update Document</h4>\n        </Modal.Header>\n        <Modal.Body>\n          <Documents agent={agent} ReadAgentDetails={ReadAgentDetails} handleClose={handleCloseDocuments}/>\n        </Modal.Body>\n      </Modal>\n\n      {/* Modal - Document History */}\n      <Modal show={showDocumentsHistory} onHide={handleCloseDocumentsHistory} centered fullscreen size=\"lg\">\n        <Modal.Header closeButton></Modal.Header>\n        <Modal.Body>\n          {documentsData && documentsData.length > 0 ? <div className=\"container\">\n            <div className=\"card bg-light mb-5\">\n              <div className=\"card-body\">\n                <h4 className=\"primary-color mb-0\">Agency Details</h4>\n                <hr/>\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <span>Agency Name:</span> <b>{agent?.CompanyName}</b>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <span>Agency Id:</span> <b>{agent?.CompanyId}</b>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <span>User Name:</span> <b>{agent?.Email}</b>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <h4 className=\"primary-color\">Document History</h4>\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover\">\n                <thead>\n                <tr className=\"bg-dark\">\n                  <th>ReferenceNo</th>\n                  <th>Document&nbsp;Type</th>\n                  <th>Document&nbsp;Number</th>\n                  <th>Document&nbsp;Path</th>\n                  <th>Remarks</th>\n                  <th>ActionOn</th>\n                  <th>ActionBy</th>\n                </tr>\n                </thead>\n                <tbody>\n                {documentsData.map(x =>\n                  <tr key={x.Id}>\n                    <td>{x.Id}</td>\n                    <td>{x.DocumentType}</td>\n                    <td>{x.DocumentNumber}</td>\n                    <td className=\"text-center\">\n                      <a href={ipAddress + \"uploads/\" + x.DocumentPath} target=\"_blank\" className=\"text-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                      </a>\n                    </td>\n                    <td>{x.Remarks}</td>\n                    <td>{x.ActionOn}</td>\n                    <td>{x.ActionBy}</td>\n                  </tr>\n                )}\n                </tbody>\n              </table>\n            </div>\n          </div> : <div className=\"text-center h4\">\n          <span className=\"badge bg-danger\">No Document History Found</span>\n          </div>}\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\nexport default AgentDetails;\n","import * as React from 'react';\nimport { useFormContext, get, FieldErrors } from 'react-hook-form';\nimport { Props } from './types';\n\nconst ErrorMessage = <\n  TFieldErrors extends FieldErrors,\n  TAs extends\n    | undefined\n    | React.ReactElement\n    | React.ComponentType<any>\n    | keyof JSX.IntrinsicElements = undefined\n>({\n  as,\n  errors,\n  name,\n  message,\n  render,\n  ...rest\n}: Props<TFieldErrors, TAs>) => {\n  const methods = useFormContext();\n  const error = get(errors || methods.formState.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  const { message: messageFromRegister, types } = error;\n  const props = Object.assign({}, rest, {\n    children: messageFromRegister || message,\n  });\n\n  return React.isValidElement(as)\n    ? React.cloneElement(as, props)\n    : render\n    ? (render({\n        message: messageFromRegister || message,\n        messages: types,\n      }) as React.ReactElement)\n    : React.createElement((as as string) || React.Fragment, props);\n};\n\nexport { ErrorMessage };\n"],"names":["_ref","agent","ReadAgentDetails","handleClose","register","handleSubmit","formState","errors","useForm","defaultValues","_jsx","className","children","onSubmit","async","token","getCookieValue","tokenName","res","axios","post","ipAddress","data","headers","concat","status","error","errorToast","message","successToast","AspNetUserId","e","_jsxs","style","color","htmlFor","type","required","ErrorMessage","name","render","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","id","value","_ref12","setError","clearErrors","reset","btnClicked","setBtnClicked","useState","documentType","setDocumentType","_Fragment","UserId","formData","FormData","append","JSON","stringify","UploadDocument","url","onChange","document_type","target","min","max","pattern","panRegex","gstRegex","accept","disabled","AgentDetails","location","useLocation","navigate","useNavigate","setAgent","recordset","useEffect","window","scrollTo","state","then","show","setShow","showDocuments","setShowDocuments","handleCloseDocuments","showDocumentsHistory","setShowDocumentsHistory","documentsData","setDocumentsData","ReadDocumentHistory","onClick","href","CCard","CCardHeader","handleShow","CCardBody","IsActive","CreatedOn","originalDate","date","Date","formattedDate","toISOString","split","formattedTime","toTimeString","slice","FormatDate","confirm","Id","ActivateAgent","InactiveAgent","FirstName","LastName","Email","PhoneNumber","WhatsappNumber","AlternateNumber","Address","City","State","Country","PinCode","CompanyId","GroupType","CompanyName","NatureOfBusiness","BusinessType","PANNumber","TDSExemption","TDSPercentage","IATACode","ReferencedBy","GSTNumber","PaymentType","TotalBalance","TotalCreditLimit","DueAmount","handleShowDocuments","AgencyLogo","ProfilePicture","PANNumberDocument","TDSCertificate","GSTCertificate","AddressProof","AddressProofDocument","SecondAddressProof","SecondAddressProofDocument","Modal","onHide","centered","fullscreen","size","Header","closeButton","Body","AuthorizedSignatoryDetails","Documents","handleCloseDocumentsHistory","length","map","x","DocumentType","DocumentNumber","DocumentPath","Remarks","ActionOn","ActionBy","s","t","as","a","m","o","i","l","r","n","Object","keys","indexOf","f","c","g","u","types","d","assign","messages"],"sourceRoot":""}